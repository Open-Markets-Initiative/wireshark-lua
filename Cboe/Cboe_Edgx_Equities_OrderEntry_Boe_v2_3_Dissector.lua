-----------------------------------------------------------------------
-- Lua Script Wireshark Dissector
-- 
-- Please see end of file for rules and regulations
-----------------------------------------------------------------------

-- Cboe Edgx Equities OrderEntry Boe 2.3 Protocol
local omi_cboe_edgx_equities_orderentry_boe_v2_3 = Proto("Cboe.Edgx.Equities.OrderEntry.Boe.v2.3.Lua", "Cboe Edgx Equities OrderEntry Boe 2.3")

-- Protocol table
local cboe_edgx_equities_orderentry_boe_v2_3 = {}

-- Component Tables
local show = {}

-----------------------------------------------------------------------
-- Declare Protocol Fields
-----------------------------------------------------------------------

-- Cboe Edgx Equities OrderEntry Boe 2.3 Fields
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.account = ProtoField.new("Account", "cboe.edgx.equities.orderentry.boe.v2.3.account", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.application_message_type = ProtoField.new("Application Message Type", "cboe.edgx.equities.orderentry.boe.v2.3.applicationmessagetype", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.attributed_quote = ProtoField.new("Attributed Quote", "cboe.edgx.equities.orderentry.boe.v2.3.attributedquote", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.base_liquidity_indicator = ProtoField.new("Base Liquidity Indicator", "cboe.edgx.equities.orderentry.boe.v2.3.baseliquidityindicator", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.bitfields = ProtoField.new("Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.bitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_bitfield_count = ProtoField.new("Cancel Order Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_byte_1 = ProtoField.new("Cancel Order Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_byte_2 = ProtoField.new("Cancel Order Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_clearing_firm_exists = ProtoField.new("Cancel Order Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_optional_fields = ProtoField.new("Cancel Order Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_1_exists = ProtoField.new("Cancel Order Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_2_exists = ProtoField.new("Cancel Order Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_3_exists = ProtoField.new("Cancel Order Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_4_exists = ProtoField.new("Cancel Order Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_5_exists = ProtoField.new("Cancel Order Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_6_exists = ProtoField.new("Cancel Order Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_7_exists = ProtoField.new("Cancel Order Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_8_exists = ProtoField.new("Cancel Order Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_return_bitfields = ProtoField.new("Cancel Order Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorderreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_orig_on_reject = ProtoField.new("Cancel Orig On Reject", "cboe.edgx.equities.orderentry.boe.v2.3.cancelorigonreject", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_reason = ProtoField.new("Cancel Reason", "cboe.edgx.equities.orderentry.boe.v2.3.cancelreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_reject_reason = ProtoField.new("Cancel Reject Reason", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_bitfield_count = ProtoField.new("Cancel Rejected Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_1 = ProtoField.new("Cancel Rejected Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_10 = ProtoField.new("Cancel Rejected Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_11 = ProtoField.new("Cancel Rejected Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_12 = ProtoField.new("Cancel Rejected Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_13 = ProtoField.new("Cancel Rejected Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_14 = ProtoField.new("Cancel Rejected Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_15 = ProtoField.new("Cancel Rejected Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_16 = ProtoField.new("Cancel Rejected Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_17 = ProtoField.new("Cancel Rejected Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_2 = ProtoField.new("Cancel Rejected Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_3 = ProtoField.new("Cancel Rejected Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_4 = ProtoField.new("Cancel Rejected Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_5 = ProtoField.new("Cancel Rejected Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_6 = ProtoField.new("Cancel Rejected Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_7 = ProtoField.new("Cancel Rejected Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_8 = ProtoField.new("Cancel Rejected Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_9 = ProtoField.new("Cancel Rejected Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_capacity_exists = ProtoField.new("Cancel Rejected Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_echo_text_exists = ProtoField.new("Cancel Rejected Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_exec_inst_exists = ProtoField.new("Cancel Rejected Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_min_qty_exists = ProtoField.new("Cancel Rejected Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_optional_fields = ProtoField.new("Cancel Rejected Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_ord_type_exists = ProtoField.new("Cancel Rejected Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_peg_difference_exists = ProtoField.new("Cancel Rejected Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_price_exists = ProtoField.new("Cancel Rejected Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists = ProtoField.new("Cancel Rejected Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists = ProtoField.new("Cancel Rejected Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists = ProtoField.new("Cancel Rejected Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists = ProtoField.new("Cancel Rejected Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists = ProtoField.new("Cancel Rejected Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists = ProtoField.new("Cancel Rejected Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists = ProtoField.new("Cancel Rejected Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists = ProtoField.new("Cancel Rejected Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_return_bitfields = ProtoField.new("Cancel Rejected Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_rout_strategy_exists = ProtoField.new("Cancel Rejected Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_side_exists = ProtoField.new("Cancel Rejected Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_stop_px_exists = ProtoField.new("Cancel Rejected Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_symbol_exists = ProtoField.new("Cancel Rejected Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_symbol_sfx_exists = ProtoField.new("Cancel Rejected Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_time_in_force_exists = ProtoField.new("Cancel Rejected Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedtimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancelled_order_count = ProtoField.new("Cancelled Order Count", "cboe.edgx.equities.orderentry.boe.v2.3.cancelledordercount", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.capacity = ProtoField.new("Capacity", "cboe.edgx.equities.orderentry.boe.v2.3.capacity", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cl_ord_id = ProtoField.new("Cl Ord Id", "cboe.edgx.equities.orderentry.boe.v2.3.clordid", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.clearing_account = ProtoField.new("Clearing Account", "cboe.edgx.equities.orderentry.boe.v2.3.clearingaccount", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.clearing_firm = ProtoField.new("Clearing Firm", "cboe.edgx.equities.orderentry.boe.v2.3.clearingfirm", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.contra_broker = ProtoField.new("Contra Broker", "cboe.edgx.equities.orderentry.boe.v2.3.contrabroker", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.corrected_price = ProtoField.new("Corrected Price", "cboe.edgx.equities.orderentry.boe.v2.3.correctedprice", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.custom_group_id = ProtoField.new("Custom Group Id", "cboe.edgx.equities.orderentry.boe.v2.3.customgroupid", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.discretion_amount = ProtoField.new("Discretion Amount", "cboe.edgx.equities.orderentry.boe.v2.3.discretionamount", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_indicator = ProtoField.new("Display Indicator", "cboe.edgx.equities.orderentry.boe.v2.3.displayindicator", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_price = ProtoField.new("Display Price", "cboe.edgx.equities.orderentry.boe.v2.3.displayprice", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_range = ProtoField.new("Display Range", "cboe.edgx.equities.orderentry.boe.v2.3.displayrange", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.echo_text = ProtoField.new("Echo Text", "cboe.edgx.equities.orderentry.boe.v2.3.echotext", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ex_destination = ProtoField.new("Ex Destination", "cboe.edgx.equities.orderentry.boe.v2.3.exdestination", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_id = ProtoField.new("Exec Id", "cboe.edgx.equities.orderentry.boe.v2.3.execid", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_inst = ProtoField.new("Exec Inst", "cboe.edgx.equities.orderentry.boe.v2.3.execinst", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_ref_id = ProtoField.new("Exec Ref Id", "cboe.edgx.equities.orderentry.boe.v2.3.execrefid", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.expire_time = ProtoField.new("Expire Time", "cboe.edgx.equities.orderentry.boe.v2.3.expiretime", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ext_exec_inst = ProtoField.new("Ext Exec Inst", "cboe.edgx.equities.orderentry.boe.v2.3.extexecinst", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.fee_code = ProtoField.new("Fee Code", "cboe.edgx.equities.orderentry.boe.v2.3.feecode", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_px = ProtoField.new("Last Px", "cboe.edgx.equities.orderentry.boe.v2.3.lastpx", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_received_sequence_number = ProtoField.new("Last Received Sequence Number", "cboe.edgx.equities.orderentry.boe.v2.3.lastreceivedsequencenumber", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_shares = ProtoField.new("Last Shares", "cboe.edgx.equities.orderentry.boe.v2.3.lastshares", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.leaves_qty = ProtoField.new("Leaves Qty", "cboe.edgx.equities.orderentry.boe.v2.3.leavesqty", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.locate_reqd = ProtoField.new("Locate Reqd", "cboe.edgx.equities.orderentry.boe.v2.3.locatereqd", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_status = ProtoField.new("Login Response Status", "cboe.edgx.equities.orderentry.boe.v2.3.loginresponsestatus", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_text = ProtoField.new("Login Response Text", "cboe.edgx.equities.orderentry.boe.v2.3.loginresponsetext", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_reason = ProtoField.new("Logout Reason", "cboe.edgx.equities.orderentry.boe.v2.3.logoutreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_reason_text = ProtoField.new("Logout Reason Text", "cboe.edgx.equities.orderentry.boe.v2.3.logoutreasontext", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_id = ProtoField.new("Mass Cancel Id", "cboe.edgx.equities.orderentry.boe.v2.3.masscancelid", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_inst = ProtoField.new("Mass Cancel Inst", "cboe.edgx.equities.orderentry.boe.v2.3.masscancelinst", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.matching_unit = ProtoField.new("Matching Unit", "cboe.edgx.equities.orderentry.boe.v2.3.matchingunit", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.max_floor = ProtoField.new("Max Floor", "cboe.edgx.equities.orderentry.boe.v2.3.maxfloor", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message = ProtoField.new("Message", "cboe.edgx.equities.orderentry.boe.v2.3.message", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_header = ProtoField.new("Message Header", "cboe.edgx.equities.orderentry.boe.v2.3.messageheader", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_length = ProtoField.new("Message Length", "cboe.edgx.equities.orderentry.boe.v2.3.messagelength", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_type = ProtoField.new("Message Type", "cboe.edgx.equities.orderentry.boe.v2.3.messagetype", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.min_qty = ProtoField.new("Min Qty", "cboe.edgx.equities.orderentry.boe.v2.3.minqty", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_bitfield_count = ProtoField.new("Modify Order Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_byte_1 = ProtoField.new("Modify Order Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_byte_2 = ProtoField.new("Modify Order Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_cancel_orig_on_reject_exists = ProtoField.new("Modify Order Cancel Orig On Reject Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyordercancelorigonrejectexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_clearing_firm_exists = ProtoField.new("Modify Order Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_exec_inst_exists = ProtoField.new("Modify Order Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_max_floor_exists = ProtoField.new("Modify Order Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyordermaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_optional_fields = ProtoField.new("Modify Order Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_ord_type_exists = ProtoField.new("Modify Order Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_order_qty_exists = ProtoField.new("Modify Order Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_price_exists = ProtoField.new("Modify Order Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_2_exists = ProtoField.new("Modify Order Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_3_exists = ProtoField.new("Modify Order Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_4_exists = ProtoField.new("Modify Order Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_5_exists = ProtoField.new("Modify Order Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_6_exists = ProtoField.new("Modify Order Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_7_exists = ProtoField.new("Modify Order Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_8_exists = ProtoField.new("Modify Order Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_return_bitfields = ProtoField.new("Modify Order Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_side_exists = ProtoField.new("Modify Order Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyordersideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_stop_px_exists = ProtoField.new("Modify Order Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.modifyorderstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_reject_reason = ProtoField.new("Modify Reject Reason", "cboe.edgx.equities.orderentry.boe.v2.3.modifyrejectreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_account_exists = ProtoField.new("New Order Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_attributed_quote_exists = ProtoField.new("New Order Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_bitfield_count = ProtoField.new("New Order Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_1 = ProtoField.new("New Order Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_2 = ProtoField.new("New Order Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_3 = ProtoField.new("New Order Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_4 = ProtoField.new("New Order Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_5 = ProtoField.new("New Order Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_6 = ProtoField.new("New Order Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_7 = ProtoField.new("New Order Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.neworderbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_capacity_exists = ProtoField.new("New Order Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordercapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_clearing_account_exists = ProtoField.new("New Order Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_clearing_firm_exists = ProtoField.new("New Order Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_custom_group_id_exists = ProtoField.new("New Order Custom Group Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordercustomgroupidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_discretion_amount_exists = ProtoField.new("New Order Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderdiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_display_indicator_exists = ProtoField.new("New Order Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderdisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_display_range_exists = ProtoField.new("New Order Display Range Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderdisplayrangeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_echo_text_exists = ProtoField.new("New Order Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ex_destination_exists = ProtoField.new("New Order Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_exec_inst_exists = ProtoField.new("New Order Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_expire_time_exists = ProtoField.new("New Order Expire Time Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderexpiretimeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ext_exec_inst_exists = ProtoField.new("New Order Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_locate_reqd_exists = ProtoField.new("New Order Locate Reqd Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderlocatereqdexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_max_floor_exists = ProtoField.new("New Order Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordermaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_min_qty_exists = ProtoField.new("New Order Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_optional_fields = ProtoField.new("New Order Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.neworderoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ord_type_exists = ProtoField.new("New Order Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_peg_difference_exists = ProtoField.new("New Order Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_prevent_match_exists = ProtoField.new("New Order Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_price_exists = ProtoField.new("New Order Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_1_exists = ProtoField.new("New Order Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_2_exists = ProtoField.new("New Order Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists = ProtoField.new("New Order Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_4_exists = ProtoField.new("New Order Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_5_exists = ProtoField.new("New Order Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_6_exists = ProtoField.new("New Order Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_7_exists = ProtoField.new("New Order Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_8_exists = ProtoField.new("New Order Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_return_bitfields = ProtoField.new("New Order Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.neworderreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_risk_reset_exists = ProtoField.new("New Order Risk Reset Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderriskresetexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_rout_strategy_exists = ProtoField.new("New Order Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_route_delivery_method_exists = ProtoField.new("New Order Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_routing_inst_exists = ProtoField.new("New Order Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_stop_px_exists = ProtoField.new("New Order Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.neworderstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_symbol_exists = ProtoField.new("New Order Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordersymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_symbol_sfx_exists = ProtoField.new("New Order Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordersymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_time_in_force_exists = ProtoField.new("New Order Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.newordertimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.no_unspecified_unit_replay = ProtoField.new("No Unspecified Unit Replay", "cboe.edgx.equities.orderentry.boe.v2.3.nounspecifiedunitreplay", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.number_of_param_groups = ProtoField.new("Number Of Param Groups", "cboe.edgx.equities.orderentry.boe.v2.3.numberofparamgroups", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.number_of_units = ProtoField.new("Number Of Units", "cboe.edgx.equities.orderentry.boe.v2.3.numberofunits", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ord_type = ProtoField.new("Ord Type", "cboe.edgx.equities.orderentry.boe.v2.3.ordtype", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_account_exists = ProtoField.new("Order Acknowledgment Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_attributed_quote_exists = ProtoField.new("Order Acknowledgment Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_base_liquidity_indicator_exists = ProtoField.new("Order Acknowledgment Base Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbaseliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_bitfield_count = ProtoField.new("Order Acknowledgment Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_1 = ProtoField.new("Order Acknowledgment Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_10 = ProtoField.new("Order Acknowledgment Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_11 = ProtoField.new("Order Acknowledgment Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_12 = ProtoField.new("Order Acknowledgment Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_13 = ProtoField.new("Order Acknowledgment Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_14 = ProtoField.new("Order Acknowledgment Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_15 = ProtoField.new("Order Acknowledgment Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_16 = ProtoField.new("Order Acknowledgment Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_17 = ProtoField.new("Order Acknowledgment Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_2 = ProtoField.new("Order Acknowledgment Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_3 = ProtoField.new("Order Acknowledgment Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_4 = ProtoField.new("Order Acknowledgment Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_5 = ProtoField.new("Order Acknowledgment Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_6 = ProtoField.new("Order Acknowledgment Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_7 = ProtoField.new("Order Acknowledgment Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_8 = ProtoField.new("Order Acknowledgment Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_9 = ProtoField.new("Order Acknowledgment Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_capacity_exists = ProtoField.new("Order Acknowledgment Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_clearing_account_exists = ProtoField.new("Order Acknowledgment Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_clearing_firm_exists = ProtoField.new("Order Acknowledgment Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_discretion_amount_exists = ProtoField.new("Order Acknowledgment Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentdiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_display_indicator_exists = ProtoField.new("Order Acknowledgment Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentdisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_display_price_exists = ProtoField.new("Order Acknowledgment Display Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentdisplaypriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_echo_text_exists = ProtoField.new("Order Acknowledgment Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ex_destination_exists = ProtoField.new("Order Acknowledgment Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_exec_inst_exists = ProtoField.new("Order Acknowledgment Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_expire_time_exists = ProtoField.new("Order Acknowledgment Expire Time Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentexpiretimeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ext_exec_inst_exists = ProtoField.new("Order Acknowledgment Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_fee_code_exists = ProtoField.new("Order Acknowledgment Fee Code Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentfeecodeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_last_px_exists = ProtoField.new("Order Acknowledgment Last Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentlastpxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_last_shares_exists = ProtoField.new("Order Acknowledgment Last Shares Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentlastsharesexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_leaves_qty_exists = ProtoField.new("Order Acknowledgment Leaves Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentleavesqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_mass_cancelled_exists = ProtoField.new("Order Acknowledgment Mass Cancelled Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentmasscancelledexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_max_floor_exists = ProtoField.new("Order Acknowledgment Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_min_qty_exists = ProtoField.new("Order Acknowledgment Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_optional_fields = ProtoField.new("Order Acknowledgment Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ord_type_exists = ProtoField.new("Order Acknowledgment Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_order_qty_exists = ProtoField.new("Order Acknowledgment Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_orig_cl_ord_id_exists = ProtoField.new("Order Acknowledgment Orig Cl Ord Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentorigclordidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_peg_difference_exists = ProtoField.new("Order Acknowledgment Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_prevent_match_exists = ProtoField.new("Order Acknowledgment Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_price_exists = ProtoField.new("Order Acknowledgment Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists = ProtoField.new("Order Acknowledgment Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists = ProtoField.new("Order Acknowledgment Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists = ProtoField.new("Order Acknowledgment Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists = ProtoField.new("Order Acknowledgment Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists = ProtoField.new("Order Acknowledgment Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists = ProtoField.new("Order Acknowledgment Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists = ProtoField.new("Order Acknowledgment Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists = ProtoField.new("Order Acknowledgment Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_return_bitfields = ProtoField.new("Order Acknowledgment Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_rout_strategy_exists = ProtoField.new("Order Acknowledgment Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_route_delivery_method_exists = ProtoField.new("Order Acknowledgment Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_routing_inst_exists = ProtoField.new("Order Acknowledgment Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_secondary_order_id_exists = ProtoField.new("Order Acknowledgment Secondary Order Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentsecondaryorderidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_side_exists = ProtoField.new("Order Acknowledgment Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_stop_px_exists = ProtoField.new("Order Acknowledgment Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_sub_liquidity_indicator_exists = ProtoField.new("Order Acknowledgment Sub Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentsubliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_symbol_exists = ProtoField.new("Order Acknowledgment Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_symbol_sfx_exists = ProtoField.new("Order Acknowledgment Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_time_in_force_exists = ProtoField.new("Order Acknowledgment Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmenttimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_working_price_exists = ProtoField.new("Order Acknowledgment Working Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentworkingpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_account_exists = ProtoField.new("Order Cancelled Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_attributed_quote_exists = ProtoField.new("Order Cancelled Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_base_liquidity_indicator_exists = ProtoField.new("Order Cancelled Base Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbaseliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_bitfield_count = ProtoField.new("Order Cancelled Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_1 = ProtoField.new("Order Cancelled Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_10 = ProtoField.new("Order Cancelled Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_11 = ProtoField.new("Order Cancelled Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_12 = ProtoField.new("Order Cancelled Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_13 = ProtoField.new("Order Cancelled Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_14 = ProtoField.new("Order Cancelled Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_15 = ProtoField.new("Order Cancelled Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_16 = ProtoField.new("Order Cancelled Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_17 = ProtoField.new("Order Cancelled Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_2 = ProtoField.new("Order Cancelled Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_3 = ProtoField.new("Order Cancelled Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_4 = ProtoField.new("Order Cancelled Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_5 = ProtoField.new("Order Cancelled Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_6 = ProtoField.new("Order Cancelled Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_7 = ProtoField.new("Order Cancelled Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_8 = ProtoField.new("Order Cancelled Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_9 = ProtoField.new("Order Cancelled Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_capacity_exists = ProtoField.new("Order Cancelled Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_clearing_account_exists = ProtoField.new("Order Cancelled Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_clearing_firm_exists = ProtoField.new("Order Cancelled Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_discretion_amount_exists = ProtoField.new("Order Cancelled Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelleddiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_display_indicator_exists = ProtoField.new("Order Cancelled Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelleddisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_display_price_exists = ProtoField.new("Order Cancelled Display Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelleddisplaypriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_echo_text_exists = ProtoField.new("Order Cancelled Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ex_destination_exists = ProtoField.new("Order Cancelled Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_exec_inst_exists = ProtoField.new("Order Cancelled Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_expire_time_exists = ProtoField.new("Order Cancelled Expire Time Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledexpiretimeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ext_exec_inst_exists = ProtoField.new("Order Cancelled Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_last_px_exists = ProtoField.new("Order Cancelled Last Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledlastpxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_last_shares_exists = ProtoField.new("Order Cancelled Last Shares Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledlastsharesexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_leaves_qty_exists = ProtoField.new("Order Cancelled Leaves Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledleavesqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_mass_cancelled_exists = ProtoField.new("Order Cancelled Mass Cancelled Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledmasscancelledexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_max_floor_exists = ProtoField.new("Order Cancelled Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_min_qty_exists = ProtoField.new("Order Cancelled Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_optional_fields = ProtoField.new("Order Cancelled Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ord_type_exists = ProtoField.new("Order Cancelled Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_order_qty_exists = ProtoField.new("Order Cancelled Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_orig_cl_ord_id_exists = ProtoField.new("Order Cancelled Orig Cl Ord Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledorigclordidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_peg_difference_exists = ProtoField.new("Order Cancelled Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_prevent_match_exists = ProtoField.new("Order Cancelled Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_price_exists = ProtoField.new("Order Cancelled Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists = ProtoField.new("Order Cancelled Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists = ProtoField.new("Order Cancelled Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists = ProtoField.new("Order Cancelled Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists = ProtoField.new("Order Cancelled Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists = ProtoField.new("Order Cancelled Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists = ProtoField.new("Order Cancelled Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists = ProtoField.new("Order Cancelled Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists = ProtoField.new("Order Cancelled Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_return_bitfields = ProtoField.new("Order Cancelled Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_rout_strategy_exists = ProtoField.new("Order Cancelled Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_route_delivery_method_exists = ProtoField.new("Order Cancelled Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_routing_inst_exists = ProtoField.new("Order Cancelled Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_secondary_order_id_exists = ProtoField.new("Order Cancelled Secondary Order Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledsecondaryorderidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_side_exists = ProtoField.new("Order Cancelled Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_stop_px_exists = ProtoField.new("Order Cancelled Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_symbol_exists = ProtoField.new("Order Cancelled Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_symbol_sfx_exists = ProtoField.new("Order Cancelled Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_time_in_force_exists = ProtoField.new("Order Cancelled Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledtimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_working_price_exists = ProtoField.new("Order Cancelled Working Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledworkingpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_account_exists = ProtoField.new("Order Execution Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_attributed_quote_exists = ProtoField.new("Order Execution Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_bitfield_count = ProtoField.new("Order Execution Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_1 = ProtoField.new("Order Execution Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_10 = ProtoField.new("Order Execution Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_11 = ProtoField.new("Order Execution Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_12 = ProtoField.new("Order Execution Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_13 = ProtoField.new("Order Execution Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_14 = ProtoField.new("Order Execution Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_15 = ProtoField.new("Order Execution Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_16 = ProtoField.new("Order Execution Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_17 = ProtoField.new("Order Execution Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_2 = ProtoField.new("Order Execution Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_3 = ProtoField.new("Order Execution Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_4 = ProtoField.new("Order Execution Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_5 = ProtoField.new("Order Execution Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_6 = ProtoField.new("Order Execution Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_7 = ProtoField.new("Order Execution Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_8 = ProtoField.new("Order Execution Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_9 = ProtoField.new("Order Execution Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_capacity_exists = ProtoField.new("Order Execution Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutioncapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_clearing_account_exists = ProtoField.new("Order Execution Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_clearing_firm_exists = ProtoField.new("Order Execution Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_discretion_amount_exists = ProtoField.new("Order Execution Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutiondiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_display_indicator_exists = ProtoField.new("Order Execution Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutiondisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_echo_text_exists = ProtoField.new("Order Execution Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ex_destination_exists = ProtoField.new("Order Execution Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_exec_inst_exists = ProtoField.new("Order Execution Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ext_exec_inst_exists = ProtoField.new("Order Execution Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_fee_code_exists = ProtoField.new("Order Execution Fee Code Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionfeecodeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_max_floor_exists = ProtoField.new("Order Execution Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_min_qty_exists = ProtoField.new("Order Execution Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_optional_fields = ProtoField.new("Order Execution Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ord_type_exists = ProtoField.new("Order Execution Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_order_qty_exists = ProtoField.new("Order Execution Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_peg_difference_exists = ProtoField.new("Order Execution Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_prevent_match_exists = ProtoField.new("Order Execution Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_price_exists = ProtoField.new("Order Execution Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists = ProtoField.new("Order Execution Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists = ProtoField.new("Order Execution Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists = ProtoField.new("Order Execution Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists = ProtoField.new("Order Execution Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists = ProtoField.new("Order Execution Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists = ProtoField.new("Order Execution Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists = ProtoField.new("Order Execution Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists = ProtoField.new("Order Execution Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_return_bitfields = ProtoField.new("Order Execution Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_rout_strategy_exists = ProtoField.new("Order Execution Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_route_delivery_method_exists = ProtoField.new("Order Execution Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_routing_inst_exists = ProtoField.new("Order Execution Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_side_exists = ProtoField.new("Order Execution Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_stop_px_exists = ProtoField.new("Order Execution Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_symbol_exists = ProtoField.new("Order Execution Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_symbol_sfx_exists = ProtoField.new("Order Execution Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_time_in_force_exists = ProtoField.new("Order Execution Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutiontimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_id = ProtoField.new("Order Id", "cboe.edgx.equities.orderentry.boe.v2.3.orderid", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_account_exists = ProtoField.new("Order Modified Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_attributed_quote_exists = ProtoField.new("Order Modified Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_base_liquidity_indicator_exists = ProtoField.new("Order Modified Base Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbaseliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_bitfield_count = ProtoField.new("Order Modified Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_1 = ProtoField.new("Order Modified Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_10 = ProtoField.new("Order Modified Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_11 = ProtoField.new("Order Modified Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_12 = ProtoField.new("Order Modified Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_13 = ProtoField.new("Order Modified Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_14 = ProtoField.new("Order Modified Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_15 = ProtoField.new("Order Modified Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_16 = ProtoField.new("Order Modified Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_17 = ProtoField.new("Order Modified Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_2 = ProtoField.new("Order Modified Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_3 = ProtoField.new("Order Modified Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_4 = ProtoField.new("Order Modified Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_5 = ProtoField.new("Order Modified Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_6 = ProtoField.new("Order Modified Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_7 = ProtoField.new("Order Modified Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_8 = ProtoField.new("Order Modified Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_9 = ProtoField.new("Order Modified Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_capacity_exists = ProtoField.new("Order Modified Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_clearing_account_exists = ProtoField.new("Order Modified Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_clearing_firm_exists = ProtoField.new("Order Modified Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_discretion_amount_exists = ProtoField.new("Order Modified Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifieddiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_display_indicator_exists = ProtoField.new("Order Modified Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifieddisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_display_price_exists = ProtoField.new("Order Modified Display Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifieddisplaypriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_echo_text_exists = ProtoField.new("Order Modified Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ex_destination_exists = ProtoField.new("Order Modified Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_exec_inst_exists = ProtoField.new("Order Modified Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_expire_time_exists = ProtoField.new("Order Modified Expire Time Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedexpiretimeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ext_exec_inst_exists = ProtoField.new("Order Modified Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_last_px_exists = ProtoField.new("Order Modified Last Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedlastpxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_last_shares_exists = ProtoField.new("Order Modified Last Shares Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedlastsharesexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_leaves_qty_exists = ProtoField.new("Order Modified Leaves Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedleavesqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_mass_cancelled_exists = ProtoField.new("Order Modified Mass Cancelled Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedmasscancelledexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_max_floor_exists = ProtoField.new("Order Modified Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_min_qty_exists = ProtoField.new("Order Modified Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_optional_fields = ProtoField.new("Order Modified Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ord_type_exists = ProtoField.new("Order Modified Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_order_qty_exists = ProtoField.new("Order Modified Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_orig_cl_ord_id_exists = ProtoField.new("Order Modified Orig Cl Ord Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedorigclordidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_peg_difference_exists = ProtoField.new("Order Modified Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_prevent_match_exists = ProtoField.new("Order Modified Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_price_exists = ProtoField.new("Order Modified Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists = ProtoField.new("Order Modified Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists = ProtoField.new("Order Modified Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists = ProtoField.new("Order Modified Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists = ProtoField.new("Order Modified Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists = ProtoField.new("Order Modified Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists = ProtoField.new("Order Modified Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists = ProtoField.new("Order Modified Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists = ProtoField.new("Order Modified Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_return_bitfields = ProtoField.new("Order Modified Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_rout_strategy_exists = ProtoField.new("Order Modified Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_route_delivery_method_exists = ProtoField.new("Order Modified Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_routing_inst_exists = ProtoField.new("Order Modified Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_secondary_order_id_exists = ProtoField.new("Order Modified Secondary Order Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedsecondaryorderidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_side_exists = ProtoField.new("Order Modified Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_stop_px_exists = ProtoField.new("Order Modified Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_symbol_exists = ProtoField.new("Order Modified Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_symbol_sfx_exists = ProtoField.new("Order Modified Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_time_in_force_exists = ProtoField.new("Order Modified Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedtimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_working_price_exists = ProtoField.new("Order Modified Working Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedworkingpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_qty = ProtoField.new("Order Qty", "cboe.edgx.equities.orderentry.boe.v2.3.orderqty", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_reject_reason = ProtoField.new("Order Reject Reason", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_account_exists = ProtoField.new("Order Rejected Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_attributed_quote_exists = ProtoField.new("Order Rejected Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_bitfield_count = ProtoField.new("Order Rejected Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_1 = ProtoField.new("Order Rejected Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_10 = ProtoField.new("Order Rejected Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_11 = ProtoField.new("Order Rejected Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_12 = ProtoField.new("Order Rejected Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_13 = ProtoField.new("Order Rejected Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_14 = ProtoField.new("Order Rejected Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_15 = ProtoField.new("Order Rejected Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_16 = ProtoField.new("Order Rejected Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_17 = ProtoField.new("Order Rejected Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_2 = ProtoField.new("Order Rejected Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_3 = ProtoField.new("Order Rejected Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_4 = ProtoField.new("Order Rejected Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_5 = ProtoField.new("Order Rejected Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_6 = ProtoField.new("Order Rejected Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_7 = ProtoField.new("Order Rejected Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_8 = ProtoField.new("Order Rejected Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_9 = ProtoField.new("Order Rejected Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_capacity_exists = ProtoField.new("Order Rejected Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_clearing_account_exists = ProtoField.new("Order Rejected Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_clearing_firm_exists = ProtoField.new("Order Rejected Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_discretion_amount_exists = ProtoField.new("Order Rejected Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejecteddiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_display_indicator_exists = ProtoField.new("Order Rejected Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejecteddisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_echo_text_exists = ProtoField.new("Order Rejected Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ex_destination_exists = ProtoField.new("Order Rejected Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_exec_inst_exists = ProtoField.new("Order Rejected Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ext_exec_inst_exists = ProtoField.new("Order Rejected Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_max_floor_exists = ProtoField.new("Order Rejected Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_min_qty_exists = ProtoField.new("Order Rejected Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_optional_fields = ProtoField.new("Order Rejected Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ord_type_exists = ProtoField.new("Order Rejected Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_order_qty_exists = ProtoField.new("Order Rejected Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_peg_difference_exists = ProtoField.new("Order Rejected Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_prevent_match_exists = ProtoField.new("Order Rejected Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_price_exists = ProtoField.new("Order Rejected Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists = ProtoField.new("Order Rejected Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists = ProtoField.new("Order Rejected Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists = ProtoField.new("Order Rejected Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists = ProtoField.new("Order Rejected Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists = ProtoField.new("Order Rejected Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists = ProtoField.new("Order Rejected Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists = ProtoField.new("Order Rejected Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists = ProtoField.new("Order Rejected Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_return_bitfields = ProtoField.new("Order Rejected Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_rout_strategy_exists = ProtoField.new("Order Rejected Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_route_delivery_method_exists = ProtoField.new("Order Rejected Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_routing_inst_exists = ProtoField.new("Order Rejected Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_secondary_order_id_exists = ProtoField.new("Order Rejected Secondary Order Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedsecondaryorderidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_side_exists = ProtoField.new("Order Rejected Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_stop_px_exists = ProtoField.new("Order Rejected Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_symbol_exists = ProtoField.new("Order Rejected Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_symbol_sfx_exists = ProtoField.new("Order Rejected Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_time_in_force_exists = ProtoField.new("Order Rejected Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedtimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_account_exists = ProtoField.new("Order Restated Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_attributed_quote_exists = ProtoField.new("Order Restated Attributed Quote Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedattributedquoteexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_base_liquidity_indicator_exists = ProtoField.new("Order Restated Base Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbaseliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_bitfield_count = ProtoField.new("Order Restated Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_1 = ProtoField.new("Order Restated Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_10 = ProtoField.new("Order Restated Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_11 = ProtoField.new("Order Restated Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_12 = ProtoField.new("Order Restated Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_13 = ProtoField.new("Order Restated Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_14 = ProtoField.new("Order Restated Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_15 = ProtoField.new("Order Restated Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_16 = ProtoField.new("Order Restated Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_17 = ProtoField.new("Order Restated Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_2 = ProtoField.new("Order Restated Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_3 = ProtoField.new("Order Restated Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_4 = ProtoField.new("Order Restated Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_5 = ProtoField.new("Order Restated Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_6 = ProtoField.new("Order Restated Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_7 = ProtoField.new("Order Restated Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_8 = ProtoField.new("Order Restated Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_9 = ProtoField.new("Order Restated Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_capacity_exists = ProtoField.new("Order Restated Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_clearing_account_exists = ProtoField.new("Order Restated Clearing Account Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedclearingaccountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_clearing_firm_exists = ProtoField.new("Order Restated Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_discretion_amount_exists = ProtoField.new("Order Restated Discretion Amount Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestateddiscretionamountexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_display_indicator_exists = ProtoField.new("Order Restated Display Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestateddisplayindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_display_price_exists = ProtoField.new("Order Restated Display Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestateddisplaypriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_echo_text_exists = ProtoField.new("Order Restated Echo Text Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedechotextexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ex_destination_exists = ProtoField.new("Order Restated Ex Destination Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedexdestinationexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_exec_inst_exists = ProtoField.new("Order Restated Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_expire_time_exists = ProtoField.new("Order Restated Expire Time Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedexpiretimeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ext_exec_inst_exists = ProtoField.new("Order Restated Ext Exec Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedextexecinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_last_px_exists = ProtoField.new("Order Restated Last Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedlastpxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_last_shares_exists = ProtoField.new("Order Restated Last Shares Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedlastsharesexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_leaves_qty_exists = ProtoField.new("Order Restated Leaves Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedleavesqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_mass_cancelled_exists = ProtoField.new("Order Restated Mass Cancelled Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedmasscancelledexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_max_floor_exists = ProtoField.new("Order Restated Max Floor Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedmaxfloorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_min_qty_exists = ProtoField.new("Order Restated Min Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedminqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_optional_fields = ProtoField.new("Order Restated Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ord_type_exists = ProtoField.new("Order Restated Ord Type Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedordtypeexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_order_qty_exists = ProtoField.new("Order Restated Order Qty Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedorderqtyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_orig_cl_ord_id_exists = ProtoField.new("Order Restated Orig Cl Ord Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedorigclordidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_peg_difference_exists = ProtoField.new("Order Restated Peg Difference Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedpegdifferenceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_prevent_match_exists = ProtoField.new("Order Restated Prevent Match Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedpreventmatchexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_price_exists = ProtoField.new("Order Restated Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists = ProtoField.new("Order Restated Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists = ProtoField.new("Order Restated Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists = ProtoField.new("Order Restated Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists = ProtoField.new("Order Restated Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists = ProtoField.new("Order Restated Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists = ProtoField.new("Order Restated Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists = ProtoField.new("Order Restated Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists = ProtoField.new("Order Restated Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_return_bitfields = ProtoField.new("Order Restated Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_rout_strategy_exists = ProtoField.new("Order Restated Rout Strategy Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedroutstrategyexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_route_delivery_method_exists = ProtoField.new("Order Restated Route Delivery Method Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedroutedeliverymethodexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_routing_inst_exists = ProtoField.new("Order Restated Routing Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedroutinginstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_secondary_order_id_exists = ProtoField.new("Order Restated Secondary Order Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedsecondaryorderidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_side_exists = ProtoField.new("Order Restated Side Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedsideexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_stop_px_exists = ProtoField.new("Order Restated Stop Px Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedstoppxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_symbol_exists = ProtoField.new("Order Restated Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_symbol_sfx_exists = ProtoField.new("Order Restated Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_time_in_force_exists = ProtoField.new("Order Restated Time In Force Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedtimeinforceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_working_price_exists = ProtoField.new("Order Restated Working Price Exists", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedworkingpriceexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.orig_cl_ord_id = ProtoField.new("Orig Cl Ord Id", "cboe.edgx.equities.orderentry.boe.v2.3.origclordid", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.orig_time = ProtoField.new("Orig Time", "cboe.edgx.equities.orderentry.boe.v2.3.origtime", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.packet = ProtoField.new("Packet", "cboe.edgx.equities.orderentry.boe.v2.3.packet", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group = ProtoField.new("Param Group", "cboe.edgx.equities.orderentry.boe.v2.3.paramgroup", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_length = ProtoField.new("Param Group Length", "cboe.edgx.equities.orderentry.boe.v2.3.paramgrouplength", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_type = ProtoField.new("Param Group Type", "cboe.edgx.equities.orderentry.boe.v2.3.paramgrouptype", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_header = ProtoField.new("Param Header", "cboe.edgx.equities.orderentry.boe.v2.3.paramheader", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.parameter = ProtoField.new("Parameter", "cboe.edgx.equities.orderentry.boe.v2.3.parameter", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.password = ProtoField.new("Password", "cboe.edgx.equities.orderentry.boe.v2.3.password", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.peg_difference = ProtoField.new("Peg Difference", "cboe.edgx.equities.orderentry.boe.v2.3.pegdifference", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.prevent_match = ProtoField.new("Prevent Match", "cboe.edgx.equities.orderentry.boe.v2.3.preventmatch", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.price = ProtoField.new("Price", "cboe.edgx.equities.orderentry.boe.v2.3.price", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_bitfield_count = ProtoField.new("Purge Order Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_byte_1 = ProtoField.new("Purge Order Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_byte_2 = ProtoField.new("Purge Order Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_clearing_firm_exists = ProtoField.new("Purge Order Clearing Firm Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderclearingfirmexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_mass_cancel_id_exists = ProtoField.new("Purge Order Mass Cancel Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeordermasscancelidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_mass_cancel_inst_exists = ProtoField.new("Purge Order Mass Cancel Inst Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeordermasscancelinstexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_optional_fields = ProtoField.new("Purge Order Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_2_exists = ProtoField.new("Purge Order Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_3_exists = ProtoField.new("Purge Order Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_4_exists = ProtoField.new("Purge Order Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_5_exists = ProtoField.new("Purge Order Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_6_exists = ProtoField.new("Purge Order Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_7_exists = ProtoField.new("Purge Order Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_8_exists = ProtoField.new("Purge Order Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_return_bitfields = ProtoField.new("Purge Order Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.purgeorderreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_symbol_exists = ProtoField.new("Purge Order Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeordersymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_symbol_sfx_exists = ProtoField.new("Purge Order Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgeordersymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_reject_reason = ProtoField.new("Purge Reject Reason", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_bitfield_count = ProtoField.new("Purge Rejected Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_1 = ProtoField.new("Purge Rejected Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_10 = ProtoField.new("Purge Rejected Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_11 = ProtoField.new("Purge Rejected Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_12 = ProtoField.new("Purge Rejected Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_13 = ProtoField.new("Purge Rejected Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_14 = ProtoField.new("Purge Rejected Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_15 = ProtoField.new("Purge Rejected Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_16 = ProtoField.new("Purge Rejected Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_17 = ProtoField.new("Purge Rejected Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_2 = ProtoField.new("Purge Rejected Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_3 = ProtoField.new("Purge Rejected Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_4 = ProtoField.new("Purge Rejected Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_5 = ProtoField.new("Purge Rejected Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_6 = ProtoField.new("Purge Rejected Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_7 = ProtoField.new("Purge Rejected Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_8 = ProtoField.new("Purge Rejected Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_9 = ProtoField.new("Purge Rejected Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_mass_cancel_id_exists = ProtoField.new("Purge Rejected Mass Cancel Id Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedmasscancelidexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_optional_fields = ProtoField.new("Purge Rejected Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists = ProtoField.new("Purge Rejected Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists = ProtoField.new("Purge Rejected Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists = ProtoField.new("Purge Rejected Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists = ProtoField.new("Purge Rejected Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists = ProtoField.new("Purge Rejected Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists = ProtoField.new("Purge Rejected Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists = ProtoField.new("Purge Rejected Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists = ProtoField.new("Purge Rejected Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_return_bitfields = ProtoField.new("Purge Rejected Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_sub_liquidity_indicator_exists = ProtoField.new("Purge Rejected Sub Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedsubliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.reserved_internal = ProtoField.new("Reserved Internal", "cboe.edgx.equities.orderentry.boe.v2.3.reservedinternal", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.restatement_reason = ProtoField.new("Restatement Reason", "cboe.edgx.equities.orderentry.boe.v2.3.restatementreason", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.return_bitfields = ProtoField.new("Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.returnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.risk_reset = ProtoField.new("Risk Reset", "cboe.edgx.equities.orderentry.boe.v2.3.riskreset", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.rout_strategy = ProtoField.new("Rout Strategy", "cboe.edgx.equities.orderentry.boe.v2.3.routstrategy", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.route_delivery_method = ProtoField.new("Route Delivery Method", "cboe.edgx.equities.orderentry.boe.v2.3.routedeliverymethod", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.routing_inst = ProtoField.new("Routing Inst", "cboe.edgx.equities.orderentry.boe.v2.3.routinginst", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.secondary_order_id = ProtoField.new("Secondary Order Id", "cboe.edgx.equities.orderentry.boe.v2.3.secondaryorderid", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.sequence_number = ProtoField.new("Sequence Number", "cboe.edgx.equities.orderentry.boe.v2.3.sequencenumber", ftypes.UINT32)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.session_sub_id = ProtoField.new("Session Sub Id", "cboe.edgx.equities.orderentry.boe.v2.3.sessionsubid", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.side = ProtoField.new("Side", "cboe.edgx.equities.orderentry.boe.v2.3.side", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.start_of_message = ProtoField.new("Start Of Message", "cboe.edgx.equities.orderentry.boe.v2.3.startofmessage", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.stop_px = ProtoField.new("Stop Px", "cboe.edgx.equities.orderentry.boe.v2.3.stoppx", ftypes.INT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.sub_liquidity_indicator = ProtoField.new("Sub Liquidity Indicator", "cboe.edgx.equities.orderentry.boe.v2.3.subliquidityindicator", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.symbol = ProtoField.new("Symbol", "cboe.edgx.equities.orderentry.boe.v2.3.symbol", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.symbol_sfx = ProtoField.new("Symbol Sfx", "cboe.edgx.equities.orderentry.boe.v2.3.symbolsfx", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.text = ProtoField.new("Text", "cboe.edgx.equities.orderentry.boe.v2.3.text", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.time_in_force = ProtoField.new("Time In Force", "cboe.edgx.equities.orderentry.boe.v2.3.timeinforce", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_bitfield_count = ProtoField.new("Trade Cancel Or Correct Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_1 = ProtoField.new("Trade Cancel Or Correct Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_10 = ProtoField.new("Trade Cancel Or Correct Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_11 = ProtoField.new("Trade Cancel Or Correct Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_12 = ProtoField.new("Trade Cancel Or Correct Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_13 = ProtoField.new("Trade Cancel Or Correct Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_14 = ProtoField.new("Trade Cancel Or Correct Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_15 = ProtoField.new("Trade Cancel Or Correct Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_16 = ProtoField.new("Trade Cancel Or Correct Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_17 = ProtoField.new("Trade Cancel Or Correct Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_2 = ProtoField.new("Trade Cancel Or Correct Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_3 = ProtoField.new("Trade Cancel Or Correct Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_4 = ProtoField.new("Trade Cancel Or Correct Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_5 = ProtoField.new("Trade Cancel Or Correct Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_6 = ProtoField.new("Trade Cancel Or Correct Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_7 = ProtoField.new("Trade Cancel Or Correct Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_8 = ProtoField.new("Trade Cancel Or Correct Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_9 = ProtoField.new("Trade Cancel Or Correct Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_capacity_exists = ProtoField.new("Trade Cancel Or Correct Capacity Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectcapacityexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_optional_fields = ProtoField.new("Trade Cancel Or Correct Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists = ProtoField.new("Trade Cancel Or Correct Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_return_bitfields = ProtoField.new("Trade Cancel Or Correct Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_sub_liquidity_indicator_exists = ProtoField.new("Trade Cancel Or Correct Sub Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectsubliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_symbol_exists = ProtoField.new("Trade Cancel Or Correct Symbol Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectsymbolexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_symbol_sfx_exists = ProtoField.new("Trade Cancel Or Correct Symbol Sfx Exists", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectsymbolsfxexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.transact_time = ProtoField.new("Transact Time", "cboe.edgx.equities.orderentry.boe.v2.3.transacttime", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.transaction_time = ProtoField.new("Transaction Time", "cboe.edgx.equities.orderentry.boe.v2.3.transactiontime", ftypes.UINT64)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_number = ProtoField.new("Unit Number", "cboe.edgx.equities.orderentry.boe.v2.3.unitnumber", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequence = ProtoField.new("Unit Sequence", "cboe.edgx.equities.orderentry.boe.v2.3.unitsequence", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequences = ProtoField.new("Unit Sequences", "cboe.edgx.equities.orderentry.boe.v2.3.unitsequences", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_bitfield_count = ProtoField.new("User Modify Rejected Bitfield Count", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbitfieldcount", ftypes.UINT8)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_1 = ProtoField.new("User Modify Rejected Byte 1", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte1", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_10 = ProtoField.new("User Modify Rejected Byte 10", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte10", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_11 = ProtoField.new("User Modify Rejected Byte 11", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte11", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_12 = ProtoField.new("User Modify Rejected Byte 12", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte12", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_13 = ProtoField.new("User Modify Rejected Byte 13", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte13", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_14 = ProtoField.new("User Modify Rejected Byte 14", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte14", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_15 = ProtoField.new("User Modify Rejected Byte 15", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte15", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_16 = ProtoField.new("User Modify Rejected Byte 16", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte16", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_17 = ProtoField.new("User Modify Rejected Byte 17", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte17", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_2 = ProtoField.new("User Modify Rejected Byte 2", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte2", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_3 = ProtoField.new("User Modify Rejected Byte 3", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte3", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_4 = ProtoField.new("User Modify Rejected Byte 4", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte4", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_5 = ProtoField.new("User Modify Rejected Byte 5", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte5", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_6 = ProtoField.new("User Modify Rejected Byte 6", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte6", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_7 = ProtoField.new("User Modify Rejected Byte 7", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte7", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_8 = ProtoField.new("User Modify Rejected Byte 8", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte8", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_9 = ProtoField.new("User Modify Rejected Byte 9", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedbyte9", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_optional_fields = ProtoField.new("User Modify Rejected Optional Fields", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedoptionalfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists = ProtoField.new("User Modify Rejected Reserved Bit 1 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit1exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists = ProtoField.new("User Modify Rejected Reserved Bit 2 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit2exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x02)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists = ProtoField.new("User Modify Rejected Reserved Bit 3 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit3exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x04)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists = ProtoField.new("User Modify Rejected Reserved Bit 4 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit4exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x08)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists = ProtoField.new("User Modify Rejected Reserved Bit 5 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit5exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x10)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists = ProtoField.new("User Modify Rejected Reserved Bit 6 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit6exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x20)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists = ProtoField.new("User Modify Rejected Reserved Bit 7 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit7exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x40)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists = ProtoField.new("User Modify Rejected Reserved Bit 8 Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreservedbit8exists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x80)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_return_bitfields = ProtoField.new("User Modify Rejected Return Bitfields", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedreturnbitfields", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_sub_liquidity_indicator_exists = ProtoField.new("User Modify Rejected Sub Liquidity Indicator Exists", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedsubliquidityindicatorexists", ftypes.UINT8, {[1]="Yes",[0]="No"}, base.DEC, 0x01)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.username = ProtoField.new("Username", "cboe.edgx.equities.orderentry.boe.v2.3.username", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.working_price = ProtoField.new("Working Price", "cboe.edgx.equities.orderentry.boe.v2.3.workingprice", ftypes.INT64)

-- Cboe Edgx Equities OrderEntry Boe 2.3 messages
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_message = ProtoField.new("Cancel Order Message", "cboe.edgx.equities.orderentry.boe.v2.3.cancelordermessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_message = ProtoField.new("Cancel Rejected Message", "cboe.edgx.equities.orderentry.boe.v2.3.cancelrejectedmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_request_message = ProtoField.new("Login Request Message", "cboe.edgx.equities.orderentry.boe.v2.3.loginrequestmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_message = ProtoField.new("Login Response Message", "cboe.edgx.equities.orderentry.boe.v2.3.loginresponsemessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_message = ProtoField.new("Logout Message", "cboe.edgx.equities.orderentry.boe.v2.3.logoutmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_acknowledgment_message = ProtoField.new("Mass Cancel Acknowledgment Message", "cboe.edgx.equities.orderentry.boe.v2.3.masscancelacknowledgmentmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_message = ProtoField.new("Modify Order Message", "cboe.edgx.equities.orderentry.boe.v2.3.modifyordermessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_message = ProtoField.new("New Order Message", "cboe.edgx.equities.orderentry.boe.v2.3.newordermessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_message = ProtoField.new("Order Acknowledgment Message", "cboe.edgx.equities.orderentry.boe.v2.3.orderacknowledgmentmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_message = ProtoField.new("Order Cancelled Message", "cboe.edgx.equities.orderentry.boe.v2.3.ordercancelledmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_message = ProtoField.new("Order Execution Message", "cboe.edgx.equities.orderentry.boe.v2.3.orderexecutionmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_message = ProtoField.new("Order Modified Message", "cboe.edgx.equities.orderentry.boe.v2.3.ordermodifiedmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_message = ProtoField.new("Order Rejected Message", "cboe.edgx.equities.orderentry.boe.v2.3.orderrejectedmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_message = ProtoField.new("Order Restated Message", "cboe.edgx.equities.orderentry.boe.v2.3.orderrestatedmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_message = ProtoField.new("Purge Order Message", "cboe.edgx.equities.orderentry.boe.v2.3.purgeordermessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_message = ProtoField.new("Purge Rejected Message", "cboe.edgx.equities.orderentry.boe.v2.3.purgerejectedmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_message = ProtoField.new("Trade Cancel Or Correct Message", "cboe.edgx.equities.orderentry.boe.v2.3.tradecancelorcorrectmessage", ftypes.STRING)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_message = ProtoField.new("User Modify Rejected Message", "cboe.edgx.equities.orderentry.boe.v2.3.usermodifyrejectedmessage", ftypes.STRING)

-- Cboe Edgx Equities OrderEntry Boe 2.3 generated fields
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_index = ProtoField.new("Param Group Index", "cboe.edgx.equities.orderentry.boe.v2.3.paramgroupindex", ftypes.UINT16)
omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequence_index = ProtoField.new("Unit Sequence Index", "cboe.edgx.equities.orderentry.boe.v2.3.unitsequenceindex", ftypes.UINT16)

-----------------------------------------------------------------------
-- Declare Dissection Options
-----------------------------------------------------------------------

-- Cboe Edgx Equities OrderEntry Boe 2.3 Element Dissection Options
show.cancel_order_byte_1 = true
show.cancel_order_byte_2 = true
show.cancel_order_message = true
show.cancel_order_optional_fields = true
show.cancel_order_return_bitfields = true
show.cancel_rejected_byte_1 = true
show.cancel_rejected_byte_10 = true
show.cancel_rejected_byte_11 = true
show.cancel_rejected_byte_12 = true
show.cancel_rejected_byte_13 = true
show.cancel_rejected_byte_14 = true
show.cancel_rejected_byte_15 = true
show.cancel_rejected_byte_16 = true
show.cancel_rejected_byte_17 = true
show.cancel_rejected_byte_2 = true
show.cancel_rejected_byte_3 = true
show.cancel_rejected_byte_4 = true
show.cancel_rejected_byte_5 = true
show.cancel_rejected_byte_6 = true
show.cancel_rejected_byte_7 = true
show.cancel_rejected_byte_8 = true
show.cancel_rejected_byte_9 = true
show.cancel_rejected_message = true
show.cancel_rejected_optional_fields = true
show.cancel_rejected_return_bitfields = true
show.login_request_message = true
show.login_response_message = true
show.logout_message = true
show.mass_cancel_acknowledgment_message = true
show.message_header = true
show.modify_order_byte_1 = true
show.modify_order_byte_2 = true
show.modify_order_message = true
show.modify_order_optional_fields = true
show.modify_order_return_bitfields = true
show.new_order_byte_1 = true
show.new_order_byte_2 = true
show.new_order_byte_3 = true
show.new_order_byte_4 = true
show.new_order_byte_5 = true
show.new_order_byte_6 = true
show.new_order_byte_7 = true
show.new_order_message = true
show.new_order_optional_fields = true
show.new_order_return_bitfields = true
show.order_acknowledgment_byte_1 = true
show.order_acknowledgment_byte_10 = true
show.order_acknowledgment_byte_11 = true
show.order_acknowledgment_byte_12 = true
show.order_acknowledgment_byte_13 = true
show.order_acknowledgment_byte_14 = true
show.order_acknowledgment_byte_15 = true
show.order_acknowledgment_byte_16 = true
show.order_acknowledgment_byte_17 = true
show.order_acknowledgment_byte_2 = true
show.order_acknowledgment_byte_3 = true
show.order_acknowledgment_byte_4 = true
show.order_acknowledgment_byte_5 = true
show.order_acknowledgment_byte_6 = true
show.order_acknowledgment_byte_7 = true
show.order_acknowledgment_byte_8 = true
show.order_acknowledgment_byte_9 = true
show.order_acknowledgment_message = true
show.order_acknowledgment_optional_fields = true
show.order_acknowledgment_return_bitfields = true
show.order_cancelled_byte_1 = true
show.order_cancelled_byte_10 = true
show.order_cancelled_byte_11 = true
show.order_cancelled_byte_12 = true
show.order_cancelled_byte_13 = true
show.order_cancelled_byte_14 = true
show.order_cancelled_byte_15 = true
show.order_cancelled_byte_16 = true
show.order_cancelled_byte_17 = true
show.order_cancelled_byte_2 = true
show.order_cancelled_byte_3 = true
show.order_cancelled_byte_4 = true
show.order_cancelled_byte_5 = true
show.order_cancelled_byte_6 = true
show.order_cancelled_byte_7 = true
show.order_cancelled_byte_8 = true
show.order_cancelled_byte_9 = true
show.order_cancelled_message = true
show.order_cancelled_optional_fields = true
show.order_cancelled_return_bitfields = true
show.order_execution_byte_1 = true
show.order_execution_byte_10 = true
show.order_execution_byte_11 = true
show.order_execution_byte_12 = true
show.order_execution_byte_13 = true
show.order_execution_byte_14 = true
show.order_execution_byte_15 = true
show.order_execution_byte_16 = true
show.order_execution_byte_17 = true
show.order_execution_byte_2 = true
show.order_execution_byte_3 = true
show.order_execution_byte_4 = true
show.order_execution_byte_5 = true
show.order_execution_byte_6 = true
show.order_execution_byte_7 = true
show.order_execution_byte_8 = true
show.order_execution_byte_9 = true
show.order_execution_message = true
show.order_execution_optional_fields = true
show.order_execution_return_bitfields = true
show.order_modified_byte_1 = true
show.order_modified_byte_10 = true
show.order_modified_byte_11 = true
show.order_modified_byte_12 = true
show.order_modified_byte_13 = true
show.order_modified_byte_14 = true
show.order_modified_byte_15 = true
show.order_modified_byte_16 = true
show.order_modified_byte_17 = true
show.order_modified_byte_2 = true
show.order_modified_byte_3 = true
show.order_modified_byte_4 = true
show.order_modified_byte_5 = true
show.order_modified_byte_6 = true
show.order_modified_byte_7 = true
show.order_modified_byte_8 = true
show.order_modified_byte_9 = true
show.order_modified_message = true
show.order_modified_optional_fields = true
show.order_modified_return_bitfields = true
show.order_rejected_byte_1 = true
show.order_rejected_byte_10 = true
show.order_rejected_byte_11 = true
show.order_rejected_byte_12 = true
show.order_rejected_byte_13 = true
show.order_rejected_byte_14 = true
show.order_rejected_byte_15 = true
show.order_rejected_byte_16 = true
show.order_rejected_byte_17 = true
show.order_rejected_byte_2 = true
show.order_rejected_byte_3 = true
show.order_rejected_byte_4 = true
show.order_rejected_byte_5 = true
show.order_rejected_byte_6 = true
show.order_rejected_byte_7 = true
show.order_rejected_byte_8 = true
show.order_rejected_byte_9 = true
show.order_rejected_message = true
show.order_rejected_optional_fields = true
show.order_rejected_return_bitfields = true
show.order_restated_byte_1 = true
show.order_restated_byte_10 = true
show.order_restated_byte_11 = true
show.order_restated_byte_12 = true
show.order_restated_byte_13 = true
show.order_restated_byte_14 = true
show.order_restated_byte_15 = true
show.order_restated_byte_16 = true
show.order_restated_byte_17 = true
show.order_restated_byte_2 = true
show.order_restated_byte_3 = true
show.order_restated_byte_4 = true
show.order_restated_byte_5 = true
show.order_restated_byte_6 = true
show.order_restated_byte_7 = true
show.order_restated_byte_8 = true
show.order_restated_byte_9 = true
show.order_restated_message = true
show.order_restated_optional_fields = true
show.order_restated_return_bitfields = true
show.packet = true
show.param_group = true
show.param_header = true
show.purge_order_byte_1 = true
show.purge_order_byte_2 = true
show.purge_order_message = true
show.purge_order_optional_fields = true
show.purge_order_return_bitfields = true
show.purge_rejected_byte_1 = true
show.purge_rejected_byte_10 = true
show.purge_rejected_byte_11 = true
show.purge_rejected_byte_12 = true
show.purge_rejected_byte_13 = true
show.purge_rejected_byte_14 = true
show.purge_rejected_byte_15 = true
show.purge_rejected_byte_16 = true
show.purge_rejected_byte_17 = true
show.purge_rejected_byte_2 = true
show.purge_rejected_byte_3 = true
show.purge_rejected_byte_4 = true
show.purge_rejected_byte_5 = true
show.purge_rejected_byte_6 = true
show.purge_rejected_byte_7 = true
show.purge_rejected_byte_8 = true
show.purge_rejected_byte_9 = true
show.purge_rejected_message = true
show.purge_rejected_optional_fields = true
show.purge_rejected_return_bitfields = true
show.return_bitfields = true
show.trade_cancel_or_correct_byte_1 = true
show.trade_cancel_or_correct_byte_10 = true
show.trade_cancel_or_correct_byte_11 = true
show.trade_cancel_or_correct_byte_12 = true
show.trade_cancel_or_correct_byte_13 = true
show.trade_cancel_or_correct_byte_14 = true
show.trade_cancel_or_correct_byte_15 = true
show.trade_cancel_or_correct_byte_16 = true
show.trade_cancel_or_correct_byte_17 = true
show.trade_cancel_or_correct_byte_2 = true
show.trade_cancel_or_correct_byte_3 = true
show.trade_cancel_or_correct_byte_4 = true
show.trade_cancel_or_correct_byte_5 = true
show.trade_cancel_or_correct_byte_6 = true
show.trade_cancel_or_correct_byte_7 = true
show.trade_cancel_or_correct_byte_8 = true
show.trade_cancel_or_correct_byte_9 = true
show.trade_cancel_or_correct_message = true
show.trade_cancel_or_correct_optional_fields = true
show.trade_cancel_or_correct_return_bitfields = true
show.unit_sequence = true
show.unit_sequences = true
show.user_modify_rejected_byte_1 = true
show.user_modify_rejected_byte_10 = true
show.user_modify_rejected_byte_11 = true
show.user_modify_rejected_byte_12 = true
show.user_modify_rejected_byte_13 = true
show.user_modify_rejected_byte_14 = true
show.user_modify_rejected_byte_15 = true
show.user_modify_rejected_byte_16 = true
show.user_modify_rejected_byte_17 = true
show.user_modify_rejected_byte_2 = true
show.user_modify_rejected_byte_3 = true
show.user_modify_rejected_byte_4 = true
show.user_modify_rejected_byte_5 = true
show.user_modify_rejected_byte_6 = true
show.user_modify_rejected_byte_7 = true
show.user_modify_rejected_byte_8 = true
show.user_modify_rejected_byte_9 = true
show.user_modify_rejected_message = true
show.user_modify_rejected_optional_fields = true
show.user_modify_rejected_return_bitfields = true
show.bitfields = false
show.message = false
show.parameter = false

-- Register Cboe Edgx Equities OrderEntry Boe 2.3 Show Options
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_1 = Pref.bool("Show Cancel Order Byte 1", show.cancel_order_byte_1, "Parse and add Cancel Order Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_2 = Pref.bool("Show Cancel Order Byte 2", show.cancel_order_byte_2, "Parse and add Cancel Order Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_message = Pref.bool("Show Cancel Order Message", show.cancel_order_message, "Parse and add Cancel Order Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_optional_fields = Pref.bool("Show Cancel Order Optional Fields", show.cancel_order_optional_fields, "Parse and add Cancel Order Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_return_bitfields = Pref.bool("Show Cancel Order Return Bitfields", show.cancel_order_return_bitfields, "Parse and add Cancel Order Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_1 = Pref.bool("Show Cancel Rejected Byte 1", show.cancel_rejected_byte_1, "Parse and add Cancel Rejected Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_10 = Pref.bool("Show Cancel Rejected Byte 10", show.cancel_rejected_byte_10, "Parse and add Cancel Rejected Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_11 = Pref.bool("Show Cancel Rejected Byte 11", show.cancel_rejected_byte_11, "Parse and add Cancel Rejected Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_12 = Pref.bool("Show Cancel Rejected Byte 12", show.cancel_rejected_byte_12, "Parse and add Cancel Rejected Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_13 = Pref.bool("Show Cancel Rejected Byte 13", show.cancel_rejected_byte_13, "Parse and add Cancel Rejected Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_14 = Pref.bool("Show Cancel Rejected Byte 14", show.cancel_rejected_byte_14, "Parse and add Cancel Rejected Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_15 = Pref.bool("Show Cancel Rejected Byte 15", show.cancel_rejected_byte_15, "Parse and add Cancel Rejected Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_16 = Pref.bool("Show Cancel Rejected Byte 16", show.cancel_rejected_byte_16, "Parse and add Cancel Rejected Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_17 = Pref.bool("Show Cancel Rejected Byte 17", show.cancel_rejected_byte_17, "Parse and add Cancel Rejected Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_2 = Pref.bool("Show Cancel Rejected Byte 2", show.cancel_rejected_byte_2, "Parse and add Cancel Rejected Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_3 = Pref.bool("Show Cancel Rejected Byte 3", show.cancel_rejected_byte_3, "Parse and add Cancel Rejected Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_4 = Pref.bool("Show Cancel Rejected Byte 4", show.cancel_rejected_byte_4, "Parse and add Cancel Rejected Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_5 = Pref.bool("Show Cancel Rejected Byte 5", show.cancel_rejected_byte_5, "Parse and add Cancel Rejected Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_6 = Pref.bool("Show Cancel Rejected Byte 6", show.cancel_rejected_byte_6, "Parse and add Cancel Rejected Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_7 = Pref.bool("Show Cancel Rejected Byte 7", show.cancel_rejected_byte_7, "Parse and add Cancel Rejected Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_8 = Pref.bool("Show Cancel Rejected Byte 8", show.cancel_rejected_byte_8, "Parse and add Cancel Rejected Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_9 = Pref.bool("Show Cancel Rejected Byte 9", show.cancel_rejected_byte_9, "Parse and add Cancel Rejected Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_message = Pref.bool("Show Cancel Rejected Message", show.cancel_rejected_message, "Parse and add Cancel Rejected Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_optional_fields = Pref.bool("Show Cancel Rejected Optional Fields", show.cancel_rejected_optional_fields, "Parse and add Cancel Rejected Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_return_bitfields = Pref.bool("Show Cancel Rejected Return Bitfields", show.cancel_rejected_return_bitfields, "Parse and add Cancel Rejected Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_request_message = Pref.bool("Show Login Request Message", show.login_request_message, "Parse and add Login Request Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_response_message = Pref.bool("Show Login Response Message", show.login_response_message, "Parse and add Login Response Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_logout_message = Pref.bool("Show Logout Message", show.logout_message, "Parse and add Logout Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_mass_cancel_acknowledgment_message = Pref.bool("Show Mass Cancel Acknowledgment Message", show.mass_cancel_acknowledgment_message, "Parse and add Mass Cancel Acknowledgment Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message_header = Pref.bool("Show Message Header", show.message_header, "Parse and add Message Header to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_1 = Pref.bool("Show Modify Order Byte 1", show.modify_order_byte_1, "Parse and add Modify Order Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_2 = Pref.bool("Show Modify Order Byte 2", show.modify_order_byte_2, "Parse and add Modify Order Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_message = Pref.bool("Show Modify Order Message", show.modify_order_message, "Parse and add Modify Order Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_optional_fields = Pref.bool("Show Modify Order Optional Fields", show.modify_order_optional_fields, "Parse and add Modify Order Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_return_bitfields = Pref.bool("Show Modify Order Return Bitfields", show.modify_order_return_bitfields, "Parse and add Modify Order Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_1 = Pref.bool("Show New Order Byte 1", show.new_order_byte_1, "Parse and add New Order Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_2 = Pref.bool("Show New Order Byte 2", show.new_order_byte_2, "Parse and add New Order Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_3 = Pref.bool("Show New Order Byte 3", show.new_order_byte_3, "Parse and add New Order Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_4 = Pref.bool("Show New Order Byte 4", show.new_order_byte_4, "Parse and add New Order Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_5 = Pref.bool("Show New Order Byte 5", show.new_order_byte_5, "Parse and add New Order Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_6 = Pref.bool("Show New Order Byte 6", show.new_order_byte_6, "Parse and add New Order Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_7 = Pref.bool("Show New Order Byte 7", show.new_order_byte_7, "Parse and add New Order Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_message = Pref.bool("Show New Order Message", show.new_order_message, "Parse and add New Order Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_optional_fields = Pref.bool("Show New Order Optional Fields", show.new_order_optional_fields, "Parse and add New Order Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_return_bitfields = Pref.bool("Show New Order Return Bitfields", show.new_order_return_bitfields, "Parse and add New Order Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_1 = Pref.bool("Show Order Acknowledgment Byte 1", show.order_acknowledgment_byte_1, "Parse and add Order Acknowledgment Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_10 = Pref.bool("Show Order Acknowledgment Byte 10", show.order_acknowledgment_byte_10, "Parse and add Order Acknowledgment Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_11 = Pref.bool("Show Order Acknowledgment Byte 11", show.order_acknowledgment_byte_11, "Parse and add Order Acknowledgment Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_12 = Pref.bool("Show Order Acknowledgment Byte 12", show.order_acknowledgment_byte_12, "Parse and add Order Acknowledgment Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_13 = Pref.bool("Show Order Acknowledgment Byte 13", show.order_acknowledgment_byte_13, "Parse and add Order Acknowledgment Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_14 = Pref.bool("Show Order Acknowledgment Byte 14", show.order_acknowledgment_byte_14, "Parse and add Order Acknowledgment Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_15 = Pref.bool("Show Order Acknowledgment Byte 15", show.order_acknowledgment_byte_15, "Parse and add Order Acknowledgment Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_16 = Pref.bool("Show Order Acknowledgment Byte 16", show.order_acknowledgment_byte_16, "Parse and add Order Acknowledgment Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_17 = Pref.bool("Show Order Acknowledgment Byte 17", show.order_acknowledgment_byte_17, "Parse and add Order Acknowledgment Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_2 = Pref.bool("Show Order Acknowledgment Byte 2", show.order_acknowledgment_byte_2, "Parse and add Order Acknowledgment Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_3 = Pref.bool("Show Order Acknowledgment Byte 3", show.order_acknowledgment_byte_3, "Parse and add Order Acknowledgment Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_4 = Pref.bool("Show Order Acknowledgment Byte 4", show.order_acknowledgment_byte_4, "Parse and add Order Acknowledgment Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_5 = Pref.bool("Show Order Acknowledgment Byte 5", show.order_acknowledgment_byte_5, "Parse and add Order Acknowledgment Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_6 = Pref.bool("Show Order Acknowledgment Byte 6", show.order_acknowledgment_byte_6, "Parse and add Order Acknowledgment Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_7 = Pref.bool("Show Order Acknowledgment Byte 7", show.order_acknowledgment_byte_7, "Parse and add Order Acknowledgment Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_8 = Pref.bool("Show Order Acknowledgment Byte 8", show.order_acknowledgment_byte_8, "Parse and add Order Acknowledgment Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_9 = Pref.bool("Show Order Acknowledgment Byte 9", show.order_acknowledgment_byte_9, "Parse and add Order Acknowledgment Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_message = Pref.bool("Show Order Acknowledgment Message", show.order_acknowledgment_message, "Parse and add Order Acknowledgment Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_optional_fields = Pref.bool("Show Order Acknowledgment Optional Fields", show.order_acknowledgment_optional_fields, "Parse and add Order Acknowledgment Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_return_bitfields = Pref.bool("Show Order Acknowledgment Return Bitfields", show.order_acknowledgment_return_bitfields, "Parse and add Order Acknowledgment Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_1 = Pref.bool("Show Order Cancelled Byte 1", show.order_cancelled_byte_1, "Parse and add Order Cancelled Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_10 = Pref.bool("Show Order Cancelled Byte 10", show.order_cancelled_byte_10, "Parse and add Order Cancelled Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_11 = Pref.bool("Show Order Cancelled Byte 11", show.order_cancelled_byte_11, "Parse and add Order Cancelled Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_12 = Pref.bool("Show Order Cancelled Byte 12", show.order_cancelled_byte_12, "Parse and add Order Cancelled Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_13 = Pref.bool("Show Order Cancelled Byte 13", show.order_cancelled_byte_13, "Parse and add Order Cancelled Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_14 = Pref.bool("Show Order Cancelled Byte 14", show.order_cancelled_byte_14, "Parse and add Order Cancelled Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_15 = Pref.bool("Show Order Cancelled Byte 15", show.order_cancelled_byte_15, "Parse and add Order Cancelled Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_16 = Pref.bool("Show Order Cancelled Byte 16", show.order_cancelled_byte_16, "Parse and add Order Cancelled Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_17 = Pref.bool("Show Order Cancelled Byte 17", show.order_cancelled_byte_17, "Parse and add Order Cancelled Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_2 = Pref.bool("Show Order Cancelled Byte 2", show.order_cancelled_byte_2, "Parse and add Order Cancelled Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_3 = Pref.bool("Show Order Cancelled Byte 3", show.order_cancelled_byte_3, "Parse and add Order Cancelled Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_4 = Pref.bool("Show Order Cancelled Byte 4", show.order_cancelled_byte_4, "Parse and add Order Cancelled Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_5 = Pref.bool("Show Order Cancelled Byte 5", show.order_cancelled_byte_5, "Parse and add Order Cancelled Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_6 = Pref.bool("Show Order Cancelled Byte 6", show.order_cancelled_byte_6, "Parse and add Order Cancelled Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_7 = Pref.bool("Show Order Cancelled Byte 7", show.order_cancelled_byte_7, "Parse and add Order Cancelled Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_8 = Pref.bool("Show Order Cancelled Byte 8", show.order_cancelled_byte_8, "Parse and add Order Cancelled Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_9 = Pref.bool("Show Order Cancelled Byte 9", show.order_cancelled_byte_9, "Parse and add Order Cancelled Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_message = Pref.bool("Show Order Cancelled Message", show.order_cancelled_message, "Parse and add Order Cancelled Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_optional_fields = Pref.bool("Show Order Cancelled Optional Fields", show.order_cancelled_optional_fields, "Parse and add Order Cancelled Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_return_bitfields = Pref.bool("Show Order Cancelled Return Bitfields", show.order_cancelled_return_bitfields, "Parse and add Order Cancelled Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_1 = Pref.bool("Show Order Execution Byte 1", show.order_execution_byte_1, "Parse and add Order Execution Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_10 = Pref.bool("Show Order Execution Byte 10", show.order_execution_byte_10, "Parse and add Order Execution Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_11 = Pref.bool("Show Order Execution Byte 11", show.order_execution_byte_11, "Parse and add Order Execution Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_12 = Pref.bool("Show Order Execution Byte 12", show.order_execution_byte_12, "Parse and add Order Execution Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_13 = Pref.bool("Show Order Execution Byte 13", show.order_execution_byte_13, "Parse and add Order Execution Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_14 = Pref.bool("Show Order Execution Byte 14", show.order_execution_byte_14, "Parse and add Order Execution Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_15 = Pref.bool("Show Order Execution Byte 15", show.order_execution_byte_15, "Parse and add Order Execution Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_16 = Pref.bool("Show Order Execution Byte 16", show.order_execution_byte_16, "Parse and add Order Execution Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_17 = Pref.bool("Show Order Execution Byte 17", show.order_execution_byte_17, "Parse and add Order Execution Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_2 = Pref.bool("Show Order Execution Byte 2", show.order_execution_byte_2, "Parse and add Order Execution Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_3 = Pref.bool("Show Order Execution Byte 3", show.order_execution_byte_3, "Parse and add Order Execution Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_4 = Pref.bool("Show Order Execution Byte 4", show.order_execution_byte_4, "Parse and add Order Execution Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_5 = Pref.bool("Show Order Execution Byte 5", show.order_execution_byte_5, "Parse and add Order Execution Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_6 = Pref.bool("Show Order Execution Byte 6", show.order_execution_byte_6, "Parse and add Order Execution Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_7 = Pref.bool("Show Order Execution Byte 7", show.order_execution_byte_7, "Parse and add Order Execution Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_8 = Pref.bool("Show Order Execution Byte 8", show.order_execution_byte_8, "Parse and add Order Execution Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_9 = Pref.bool("Show Order Execution Byte 9", show.order_execution_byte_9, "Parse and add Order Execution Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_message = Pref.bool("Show Order Execution Message", show.order_execution_message, "Parse and add Order Execution Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_optional_fields = Pref.bool("Show Order Execution Optional Fields", show.order_execution_optional_fields, "Parse and add Order Execution Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_return_bitfields = Pref.bool("Show Order Execution Return Bitfields", show.order_execution_return_bitfields, "Parse and add Order Execution Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_1 = Pref.bool("Show Order Modified Byte 1", show.order_modified_byte_1, "Parse and add Order Modified Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_10 = Pref.bool("Show Order Modified Byte 10", show.order_modified_byte_10, "Parse and add Order Modified Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_11 = Pref.bool("Show Order Modified Byte 11", show.order_modified_byte_11, "Parse and add Order Modified Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_12 = Pref.bool("Show Order Modified Byte 12", show.order_modified_byte_12, "Parse and add Order Modified Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_13 = Pref.bool("Show Order Modified Byte 13", show.order_modified_byte_13, "Parse and add Order Modified Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_14 = Pref.bool("Show Order Modified Byte 14", show.order_modified_byte_14, "Parse and add Order Modified Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_15 = Pref.bool("Show Order Modified Byte 15", show.order_modified_byte_15, "Parse and add Order Modified Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_16 = Pref.bool("Show Order Modified Byte 16", show.order_modified_byte_16, "Parse and add Order Modified Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_17 = Pref.bool("Show Order Modified Byte 17", show.order_modified_byte_17, "Parse and add Order Modified Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_2 = Pref.bool("Show Order Modified Byte 2", show.order_modified_byte_2, "Parse and add Order Modified Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_3 = Pref.bool("Show Order Modified Byte 3", show.order_modified_byte_3, "Parse and add Order Modified Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_4 = Pref.bool("Show Order Modified Byte 4", show.order_modified_byte_4, "Parse and add Order Modified Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_5 = Pref.bool("Show Order Modified Byte 5", show.order_modified_byte_5, "Parse and add Order Modified Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_6 = Pref.bool("Show Order Modified Byte 6", show.order_modified_byte_6, "Parse and add Order Modified Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_7 = Pref.bool("Show Order Modified Byte 7", show.order_modified_byte_7, "Parse and add Order Modified Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_8 = Pref.bool("Show Order Modified Byte 8", show.order_modified_byte_8, "Parse and add Order Modified Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_9 = Pref.bool("Show Order Modified Byte 9", show.order_modified_byte_9, "Parse and add Order Modified Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_message = Pref.bool("Show Order Modified Message", show.order_modified_message, "Parse and add Order Modified Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_optional_fields = Pref.bool("Show Order Modified Optional Fields", show.order_modified_optional_fields, "Parse and add Order Modified Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_return_bitfields = Pref.bool("Show Order Modified Return Bitfields", show.order_modified_return_bitfields, "Parse and add Order Modified Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_1 = Pref.bool("Show Order Rejected Byte 1", show.order_rejected_byte_1, "Parse and add Order Rejected Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_10 = Pref.bool("Show Order Rejected Byte 10", show.order_rejected_byte_10, "Parse and add Order Rejected Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_11 = Pref.bool("Show Order Rejected Byte 11", show.order_rejected_byte_11, "Parse and add Order Rejected Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_12 = Pref.bool("Show Order Rejected Byte 12", show.order_rejected_byte_12, "Parse and add Order Rejected Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_13 = Pref.bool("Show Order Rejected Byte 13", show.order_rejected_byte_13, "Parse and add Order Rejected Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_14 = Pref.bool("Show Order Rejected Byte 14", show.order_rejected_byte_14, "Parse and add Order Rejected Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_15 = Pref.bool("Show Order Rejected Byte 15", show.order_rejected_byte_15, "Parse and add Order Rejected Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_16 = Pref.bool("Show Order Rejected Byte 16", show.order_rejected_byte_16, "Parse and add Order Rejected Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_17 = Pref.bool("Show Order Rejected Byte 17", show.order_rejected_byte_17, "Parse and add Order Rejected Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_2 = Pref.bool("Show Order Rejected Byte 2", show.order_rejected_byte_2, "Parse and add Order Rejected Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_3 = Pref.bool("Show Order Rejected Byte 3", show.order_rejected_byte_3, "Parse and add Order Rejected Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_4 = Pref.bool("Show Order Rejected Byte 4", show.order_rejected_byte_4, "Parse and add Order Rejected Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_5 = Pref.bool("Show Order Rejected Byte 5", show.order_rejected_byte_5, "Parse and add Order Rejected Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_6 = Pref.bool("Show Order Rejected Byte 6", show.order_rejected_byte_6, "Parse and add Order Rejected Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_7 = Pref.bool("Show Order Rejected Byte 7", show.order_rejected_byte_7, "Parse and add Order Rejected Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_8 = Pref.bool("Show Order Rejected Byte 8", show.order_rejected_byte_8, "Parse and add Order Rejected Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_9 = Pref.bool("Show Order Rejected Byte 9", show.order_rejected_byte_9, "Parse and add Order Rejected Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_message = Pref.bool("Show Order Rejected Message", show.order_rejected_message, "Parse and add Order Rejected Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_optional_fields = Pref.bool("Show Order Rejected Optional Fields", show.order_rejected_optional_fields, "Parse and add Order Rejected Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_return_bitfields = Pref.bool("Show Order Rejected Return Bitfields", show.order_rejected_return_bitfields, "Parse and add Order Rejected Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_1 = Pref.bool("Show Order Restated Byte 1", show.order_restated_byte_1, "Parse and add Order Restated Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_10 = Pref.bool("Show Order Restated Byte 10", show.order_restated_byte_10, "Parse and add Order Restated Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_11 = Pref.bool("Show Order Restated Byte 11", show.order_restated_byte_11, "Parse and add Order Restated Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_12 = Pref.bool("Show Order Restated Byte 12", show.order_restated_byte_12, "Parse and add Order Restated Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_13 = Pref.bool("Show Order Restated Byte 13", show.order_restated_byte_13, "Parse and add Order Restated Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_14 = Pref.bool("Show Order Restated Byte 14", show.order_restated_byte_14, "Parse and add Order Restated Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_15 = Pref.bool("Show Order Restated Byte 15", show.order_restated_byte_15, "Parse and add Order Restated Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_16 = Pref.bool("Show Order Restated Byte 16", show.order_restated_byte_16, "Parse and add Order Restated Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_17 = Pref.bool("Show Order Restated Byte 17", show.order_restated_byte_17, "Parse and add Order Restated Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_2 = Pref.bool("Show Order Restated Byte 2", show.order_restated_byte_2, "Parse and add Order Restated Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_3 = Pref.bool("Show Order Restated Byte 3", show.order_restated_byte_3, "Parse and add Order Restated Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_4 = Pref.bool("Show Order Restated Byte 4", show.order_restated_byte_4, "Parse and add Order Restated Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_5 = Pref.bool("Show Order Restated Byte 5", show.order_restated_byte_5, "Parse and add Order Restated Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_6 = Pref.bool("Show Order Restated Byte 6", show.order_restated_byte_6, "Parse and add Order Restated Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_7 = Pref.bool("Show Order Restated Byte 7", show.order_restated_byte_7, "Parse and add Order Restated Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_8 = Pref.bool("Show Order Restated Byte 8", show.order_restated_byte_8, "Parse and add Order Restated Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_9 = Pref.bool("Show Order Restated Byte 9", show.order_restated_byte_9, "Parse and add Order Restated Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_message = Pref.bool("Show Order Restated Message", show.order_restated_message, "Parse and add Order Restated Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_optional_fields = Pref.bool("Show Order Restated Optional Fields", show.order_restated_optional_fields, "Parse and add Order Restated Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_return_bitfields = Pref.bool("Show Order Restated Return Bitfields", show.order_restated_return_bitfields, "Parse and add Order Restated Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_packet = Pref.bool("Show Packet", show.packet, "Parse and add Packet to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_group = Pref.bool("Show Param Group", show.param_group, "Parse and add Param Group to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_header = Pref.bool("Show Param Header", show.param_header, "Parse and add Param Header to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_1 = Pref.bool("Show Purge Order Byte 1", show.purge_order_byte_1, "Parse and add Purge Order Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_2 = Pref.bool("Show Purge Order Byte 2", show.purge_order_byte_2, "Parse and add Purge Order Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_message = Pref.bool("Show Purge Order Message", show.purge_order_message, "Parse and add Purge Order Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_optional_fields = Pref.bool("Show Purge Order Optional Fields", show.purge_order_optional_fields, "Parse and add Purge Order Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_return_bitfields = Pref.bool("Show Purge Order Return Bitfields", show.purge_order_return_bitfields, "Parse and add Purge Order Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_1 = Pref.bool("Show Purge Rejected Byte 1", show.purge_rejected_byte_1, "Parse and add Purge Rejected Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_10 = Pref.bool("Show Purge Rejected Byte 10", show.purge_rejected_byte_10, "Parse and add Purge Rejected Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_11 = Pref.bool("Show Purge Rejected Byte 11", show.purge_rejected_byte_11, "Parse and add Purge Rejected Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_12 = Pref.bool("Show Purge Rejected Byte 12", show.purge_rejected_byte_12, "Parse and add Purge Rejected Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_13 = Pref.bool("Show Purge Rejected Byte 13", show.purge_rejected_byte_13, "Parse and add Purge Rejected Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_14 = Pref.bool("Show Purge Rejected Byte 14", show.purge_rejected_byte_14, "Parse and add Purge Rejected Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_15 = Pref.bool("Show Purge Rejected Byte 15", show.purge_rejected_byte_15, "Parse and add Purge Rejected Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_16 = Pref.bool("Show Purge Rejected Byte 16", show.purge_rejected_byte_16, "Parse and add Purge Rejected Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_17 = Pref.bool("Show Purge Rejected Byte 17", show.purge_rejected_byte_17, "Parse and add Purge Rejected Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_2 = Pref.bool("Show Purge Rejected Byte 2", show.purge_rejected_byte_2, "Parse and add Purge Rejected Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_3 = Pref.bool("Show Purge Rejected Byte 3", show.purge_rejected_byte_3, "Parse and add Purge Rejected Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_4 = Pref.bool("Show Purge Rejected Byte 4", show.purge_rejected_byte_4, "Parse and add Purge Rejected Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_5 = Pref.bool("Show Purge Rejected Byte 5", show.purge_rejected_byte_5, "Parse and add Purge Rejected Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_6 = Pref.bool("Show Purge Rejected Byte 6", show.purge_rejected_byte_6, "Parse and add Purge Rejected Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_7 = Pref.bool("Show Purge Rejected Byte 7", show.purge_rejected_byte_7, "Parse and add Purge Rejected Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_8 = Pref.bool("Show Purge Rejected Byte 8", show.purge_rejected_byte_8, "Parse and add Purge Rejected Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_9 = Pref.bool("Show Purge Rejected Byte 9", show.purge_rejected_byte_9, "Parse and add Purge Rejected Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_message = Pref.bool("Show Purge Rejected Message", show.purge_rejected_message, "Parse and add Purge Rejected Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_optional_fields = Pref.bool("Show Purge Rejected Optional Fields", show.purge_rejected_optional_fields, "Parse and add Purge Rejected Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_return_bitfields = Pref.bool("Show Purge Rejected Return Bitfields", show.purge_rejected_return_bitfields, "Parse and add Purge Rejected Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_return_bitfields = Pref.bool("Show Return Bitfields", show.return_bitfields, "Parse and add Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_1 = Pref.bool("Show Trade Cancel Or Correct Byte 1", show.trade_cancel_or_correct_byte_1, "Parse and add Trade Cancel Or Correct Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_10 = Pref.bool("Show Trade Cancel Or Correct Byte 10", show.trade_cancel_or_correct_byte_10, "Parse and add Trade Cancel Or Correct Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_11 = Pref.bool("Show Trade Cancel Or Correct Byte 11", show.trade_cancel_or_correct_byte_11, "Parse and add Trade Cancel Or Correct Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_12 = Pref.bool("Show Trade Cancel Or Correct Byte 12", show.trade_cancel_or_correct_byte_12, "Parse and add Trade Cancel Or Correct Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_13 = Pref.bool("Show Trade Cancel Or Correct Byte 13", show.trade_cancel_or_correct_byte_13, "Parse and add Trade Cancel Or Correct Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_14 = Pref.bool("Show Trade Cancel Or Correct Byte 14", show.trade_cancel_or_correct_byte_14, "Parse and add Trade Cancel Or Correct Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_15 = Pref.bool("Show Trade Cancel Or Correct Byte 15", show.trade_cancel_or_correct_byte_15, "Parse and add Trade Cancel Or Correct Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_16 = Pref.bool("Show Trade Cancel Or Correct Byte 16", show.trade_cancel_or_correct_byte_16, "Parse and add Trade Cancel Or Correct Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_17 = Pref.bool("Show Trade Cancel Or Correct Byte 17", show.trade_cancel_or_correct_byte_17, "Parse and add Trade Cancel Or Correct Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_2 = Pref.bool("Show Trade Cancel Or Correct Byte 2", show.trade_cancel_or_correct_byte_2, "Parse and add Trade Cancel Or Correct Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_3 = Pref.bool("Show Trade Cancel Or Correct Byte 3", show.trade_cancel_or_correct_byte_3, "Parse and add Trade Cancel Or Correct Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_4 = Pref.bool("Show Trade Cancel Or Correct Byte 4", show.trade_cancel_or_correct_byte_4, "Parse and add Trade Cancel Or Correct Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_5 = Pref.bool("Show Trade Cancel Or Correct Byte 5", show.trade_cancel_or_correct_byte_5, "Parse and add Trade Cancel Or Correct Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_6 = Pref.bool("Show Trade Cancel Or Correct Byte 6", show.trade_cancel_or_correct_byte_6, "Parse and add Trade Cancel Or Correct Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_7 = Pref.bool("Show Trade Cancel Or Correct Byte 7", show.trade_cancel_or_correct_byte_7, "Parse and add Trade Cancel Or Correct Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_8 = Pref.bool("Show Trade Cancel Or Correct Byte 8", show.trade_cancel_or_correct_byte_8, "Parse and add Trade Cancel Or Correct Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_9 = Pref.bool("Show Trade Cancel Or Correct Byte 9", show.trade_cancel_or_correct_byte_9, "Parse and add Trade Cancel Or Correct Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_message = Pref.bool("Show Trade Cancel Or Correct Message", show.trade_cancel_or_correct_message, "Parse and add Trade Cancel Or Correct Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_optional_fields = Pref.bool("Show Trade Cancel Or Correct Optional Fields", show.trade_cancel_or_correct_optional_fields, "Parse and add Trade Cancel Or Correct Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_return_bitfields = Pref.bool("Show Trade Cancel Or Correct Return Bitfields", show.trade_cancel_or_correct_return_bitfields, "Parse and add Trade Cancel Or Correct Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequence = Pref.bool("Show Unit Sequence", show.unit_sequence, "Parse and add Unit Sequence to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequences = Pref.bool("Show Unit Sequences", show.unit_sequences, "Parse and add Unit Sequences to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_1 = Pref.bool("Show User Modify Rejected Byte 1", show.user_modify_rejected_byte_1, "Parse and add User Modify Rejected Byte 1 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_10 = Pref.bool("Show User Modify Rejected Byte 10", show.user_modify_rejected_byte_10, "Parse and add User Modify Rejected Byte 10 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_11 = Pref.bool("Show User Modify Rejected Byte 11", show.user_modify_rejected_byte_11, "Parse and add User Modify Rejected Byte 11 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_12 = Pref.bool("Show User Modify Rejected Byte 12", show.user_modify_rejected_byte_12, "Parse and add User Modify Rejected Byte 12 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_13 = Pref.bool("Show User Modify Rejected Byte 13", show.user_modify_rejected_byte_13, "Parse and add User Modify Rejected Byte 13 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_14 = Pref.bool("Show User Modify Rejected Byte 14", show.user_modify_rejected_byte_14, "Parse and add User Modify Rejected Byte 14 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_15 = Pref.bool("Show User Modify Rejected Byte 15", show.user_modify_rejected_byte_15, "Parse and add User Modify Rejected Byte 15 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_16 = Pref.bool("Show User Modify Rejected Byte 16", show.user_modify_rejected_byte_16, "Parse and add User Modify Rejected Byte 16 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_17 = Pref.bool("Show User Modify Rejected Byte 17", show.user_modify_rejected_byte_17, "Parse and add User Modify Rejected Byte 17 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_2 = Pref.bool("Show User Modify Rejected Byte 2", show.user_modify_rejected_byte_2, "Parse and add User Modify Rejected Byte 2 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_3 = Pref.bool("Show User Modify Rejected Byte 3", show.user_modify_rejected_byte_3, "Parse and add User Modify Rejected Byte 3 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_4 = Pref.bool("Show User Modify Rejected Byte 4", show.user_modify_rejected_byte_4, "Parse and add User Modify Rejected Byte 4 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_5 = Pref.bool("Show User Modify Rejected Byte 5", show.user_modify_rejected_byte_5, "Parse and add User Modify Rejected Byte 5 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_6 = Pref.bool("Show User Modify Rejected Byte 6", show.user_modify_rejected_byte_6, "Parse and add User Modify Rejected Byte 6 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_7 = Pref.bool("Show User Modify Rejected Byte 7", show.user_modify_rejected_byte_7, "Parse and add User Modify Rejected Byte 7 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_8 = Pref.bool("Show User Modify Rejected Byte 8", show.user_modify_rejected_byte_8, "Parse and add User Modify Rejected Byte 8 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_9 = Pref.bool("Show User Modify Rejected Byte 9", show.user_modify_rejected_byte_9, "Parse and add User Modify Rejected Byte 9 to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_message = Pref.bool("Show User Modify Rejected Message", show.user_modify_rejected_message, "Parse and add User Modify Rejected Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_optional_fields = Pref.bool("Show User Modify Rejected Optional Fields", show.user_modify_rejected_optional_fields, "Parse and add User Modify Rejected Optional Fields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_return_bitfields = Pref.bool("Show User Modify Rejected Return Bitfields", show.user_modify_rejected_return_bitfields, "Parse and add User Modify Rejected Return Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_bitfields = Pref.bool("Show Bitfields", show.bitfields, "Parse and add Bitfields to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message = Pref.bool("Show Message", show.message, "Parse and add Message to protocol tree")
omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_parameter = Pref.bool("Show Parameter", show.parameter, "Parse and add Parameter to protocol tree")

-- Handle changed preferences
function omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs_changed()
  local changed = false

  -- Check if show options have changed
  if show.cancel_order_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_1 then
    show.cancel_order_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_1
    changed = true
  end
  if show.cancel_order_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_2 then
    show.cancel_order_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_byte_2
    changed = true
  end
  if show.cancel_order_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_message then
    show.cancel_order_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_message
    changed = true
  end
  if show.cancel_order_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_optional_fields then
    show.cancel_order_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_optional_fields
    changed = true
  end
  if show.cancel_order_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_return_bitfields then
    show.cancel_order_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_order_return_bitfields
    changed = true
  end
  if show.cancel_rejected_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_1 then
    show.cancel_rejected_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_1
    changed = true
  end
  if show.cancel_rejected_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_10 then
    show.cancel_rejected_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_10
    changed = true
  end
  if show.cancel_rejected_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_11 then
    show.cancel_rejected_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_11
    changed = true
  end
  if show.cancel_rejected_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_12 then
    show.cancel_rejected_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_12
    changed = true
  end
  if show.cancel_rejected_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_13 then
    show.cancel_rejected_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_13
    changed = true
  end
  if show.cancel_rejected_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_14 then
    show.cancel_rejected_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_14
    changed = true
  end
  if show.cancel_rejected_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_15 then
    show.cancel_rejected_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_15
    changed = true
  end
  if show.cancel_rejected_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_16 then
    show.cancel_rejected_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_16
    changed = true
  end
  if show.cancel_rejected_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_17 then
    show.cancel_rejected_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_17
    changed = true
  end
  if show.cancel_rejected_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_2 then
    show.cancel_rejected_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_2
    changed = true
  end
  if show.cancel_rejected_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_3 then
    show.cancel_rejected_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_3
    changed = true
  end
  if show.cancel_rejected_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_4 then
    show.cancel_rejected_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_4
    changed = true
  end
  if show.cancel_rejected_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_5 then
    show.cancel_rejected_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_5
    changed = true
  end
  if show.cancel_rejected_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_6 then
    show.cancel_rejected_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_6
    changed = true
  end
  if show.cancel_rejected_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_7 then
    show.cancel_rejected_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_7
    changed = true
  end
  if show.cancel_rejected_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_8 then
    show.cancel_rejected_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_8
    changed = true
  end
  if show.cancel_rejected_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_9 then
    show.cancel_rejected_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_byte_9
    changed = true
  end
  if show.cancel_rejected_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_message then
    show.cancel_rejected_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_message
    changed = true
  end
  if show.cancel_rejected_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_optional_fields then
    show.cancel_rejected_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_optional_fields
    changed = true
  end
  if show.cancel_rejected_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_return_bitfields then
    show.cancel_rejected_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_cancel_rejected_return_bitfields
    changed = true
  end
  if show.login_request_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_request_message then
    show.login_request_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_request_message
    changed = true
  end
  if show.login_response_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_response_message then
    show.login_response_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_login_response_message
    changed = true
  end
  if show.logout_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_logout_message then
    show.logout_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_logout_message
    changed = true
  end
  if show.mass_cancel_acknowledgment_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_mass_cancel_acknowledgment_message then
    show.mass_cancel_acknowledgment_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_mass_cancel_acknowledgment_message
    changed = true
  end
  if show.message_header ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message_header then
    show.message_header = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message_header
    changed = true
  end
  if show.modify_order_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_1 then
    show.modify_order_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_1
    changed = true
  end
  if show.modify_order_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_2 then
    show.modify_order_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_byte_2
    changed = true
  end
  if show.modify_order_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_message then
    show.modify_order_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_message
    changed = true
  end
  if show.modify_order_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_optional_fields then
    show.modify_order_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_optional_fields
    changed = true
  end
  if show.modify_order_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_return_bitfields then
    show.modify_order_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_modify_order_return_bitfields
    changed = true
  end
  if show.new_order_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_1 then
    show.new_order_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_1
    changed = true
  end
  if show.new_order_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_2 then
    show.new_order_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_2
    changed = true
  end
  if show.new_order_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_3 then
    show.new_order_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_3
    changed = true
  end
  if show.new_order_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_4 then
    show.new_order_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_4
    changed = true
  end
  if show.new_order_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_5 then
    show.new_order_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_5
    changed = true
  end
  if show.new_order_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_6 then
    show.new_order_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_6
    changed = true
  end
  if show.new_order_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_7 then
    show.new_order_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_byte_7
    changed = true
  end
  if show.new_order_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_message then
    show.new_order_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_message
    changed = true
  end
  if show.new_order_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_optional_fields then
    show.new_order_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_optional_fields
    changed = true
  end
  if show.new_order_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_return_bitfields then
    show.new_order_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_new_order_return_bitfields
    changed = true
  end
  if show.order_acknowledgment_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_1 then
    show.order_acknowledgment_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_1
    changed = true
  end
  if show.order_acknowledgment_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_10 then
    show.order_acknowledgment_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_10
    changed = true
  end
  if show.order_acknowledgment_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_11 then
    show.order_acknowledgment_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_11
    changed = true
  end
  if show.order_acknowledgment_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_12 then
    show.order_acknowledgment_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_12
    changed = true
  end
  if show.order_acknowledgment_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_13 then
    show.order_acknowledgment_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_13
    changed = true
  end
  if show.order_acknowledgment_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_14 then
    show.order_acknowledgment_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_14
    changed = true
  end
  if show.order_acknowledgment_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_15 then
    show.order_acknowledgment_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_15
    changed = true
  end
  if show.order_acknowledgment_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_16 then
    show.order_acknowledgment_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_16
    changed = true
  end
  if show.order_acknowledgment_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_17 then
    show.order_acknowledgment_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_17
    changed = true
  end
  if show.order_acknowledgment_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_2 then
    show.order_acknowledgment_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_2
    changed = true
  end
  if show.order_acknowledgment_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_3 then
    show.order_acknowledgment_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_3
    changed = true
  end
  if show.order_acknowledgment_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_4 then
    show.order_acknowledgment_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_4
    changed = true
  end
  if show.order_acknowledgment_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_5 then
    show.order_acknowledgment_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_5
    changed = true
  end
  if show.order_acknowledgment_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_6 then
    show.order_acknowledgment_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_6
    changed = true
  end
  if show.order_acknowledgment_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_7 then
    show.order_acknowledgment_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_7
    changed = true
  end
  if show.order_acknowledgment_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_8 then
    show.order_acknowledgment_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_8
    changed = true
  end
  if show.order_acknowledgment_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_9 then
    show.order_acknowledgment_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_byte_9
    changed = true
  end
  if show.order_acknowledgment_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_message then
    show.order_acknowledgment_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_message
    changed = true
  end
  if show.order_acknowledgment_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_optional_fields then
    show.order_acknowledgment_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_optional_fields
    changed = true
  end
  if show.order_acknowledgment_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_return_bitfields then
    show.order_acknowledgment_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_acknowledgment_return_bitfields
    changed = true
  end
  if show.order_cancelled_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_1 then
    show.order_cancelled_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_1
    changed = true
  end
  if show.order_cancelled_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_10 then
    show.order_cancelled_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_10
    changed = true
  end
  if show.order_cancelled_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_11 then
    show.order_cancelled_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_11
    changed = true
  end
  if show.order_cancelled_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_12 then
    show.order_cancelled_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_12
    changed = true
  end
  if show.order_cancelled_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_13 then
    show.order_cancelled_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_13
    changed = true
  end
  if show.order_cancelled_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_14 then
    show.order_cancelled_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_14
    changed = true
  end
  if show.order_cancelled_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_15 then
    show.order_cancelled_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_15
    changed = true
  end
  if show.order_cancelled_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_16 then
    show.order_cancelled_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_16
    changed = true
  end
  if show.order_cancelled_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_17 then
    show.order_cancelled_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_17
    changed = true
  end
  if show.order_cancelled_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_2 then
    show.order_cancelled_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_2
    changed = true
  end
  if show.order_cancelled_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_3 then
    show.order_cancelled_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_3
    changed = true
  end
  if show.order_cancelled_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_4 then
    show.order_cancelled_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_4
    changed = true
  end
  if show.order_cancelled_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_5 then
    show.order_cancelled_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_5
    changed = true
  end
  if show.order_cancelled_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_6 then
    show.order_cancelled_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_6
    changed = true
  end
  if show.order_cancelled_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_7 then
    show.order_cancelled_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_7
    changed = true
  end
  if show.order_cancelled_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_8 then
    show.order_cancelled_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_8
    changed = true
  end
  if show.order_cancelled_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_9 then
    show.order_cancelled_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_byte_9
    changed = true
  end
  if show.order_cancelled_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_message then
    show.order_cancelled_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_message
    changed = true
  end
  if show.order_cancelled_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_optional_fields then
    show.order_cancelled_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_optional_fields
    changed = true
  end
  if show.order_cancelled_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_return_bitfields then
    show.order_cancelled_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_cancelled_return_bitfields
    changed = true
  end
  if show.order_execution_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_1 then
    show.order_execution_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_1
    changed = true
  end
  if show.order_execution_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_10 then
    show.order_execution_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_10
    changed = true
  end
  if show.order_execution_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_11 then
    show.order_execution_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_11
    changed = true
  end
  if show.order_execution_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_12 then
    show.order_execution_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_12
    changed = true
  end
  if show.order_execution_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_13 then
    show.order_execution_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_13
    changed = true
  end
  if show.order_execution_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_14 then
    show.order_execution_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_14
    changed = true
  end
  if show.order_execution_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_15 then
    show.order_execution_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_15
    changed = true
  end
  if show.order_execution_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_16 then
    show.order_execution_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_16
    changed = true
  end
  if show.order_execution_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_17 then
    show.order_execution_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_17
    changed = true
  end
  if show.order_execution_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_2 then
    show.order_execution_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_2
    changed = true
  end
  if show.order_execution_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_3 then
    show.order_execution_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_3
    changed = true
  end
  if show.order_execution_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_4 then
    show.order_execution_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_4
    changed = true
  end
  if show.order_execution_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_5 then
    show.order_execution_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_5
    changed = true
  end
  if show.order_execution_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_6 then
    show.order_execution_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_6
    changed = true
  end
  if show.order_execution_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_7 then
    show.order_execution_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_7
    changed = true
  end
  if show.order_execution_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_8 then
    show.order_execution_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_8
    changed = true
  end
  if show.order_execution_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_9 then
    show.order_execution_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_byte_9
    changed = true
  end
  if show.order_execution_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_message then
    show.order_execution_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_message
    changed = true
  end
  if show.order_execution_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_optional_fields then
    show.order_execution_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_optional_fields
    changed = true
  end
  if show.order_execution_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_return_bitfields then
    show.order_execution_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_execution_return_bitfields
    changed = true
  end
  if show.order_modified_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_1 then
    show.order_modified_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_1
    changed = true
  end
  if show.order_modified_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_10 then
    show.order_modified_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_10
    changed = true
  end
  if show.order_modified_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_11 then
    show.order_modified_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_11
    changed = true
  end
  if show.order_modified_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_12 then
    show.order_modified_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_12
    changed = true
  end
  if show.order_modified_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_13 then
    show.order_modified_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_13
    changed = true
  end
  if show.order_modified_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_14 then
    show.order_modified_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_14
    changed = true
  end
  if show.order_modified_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_15 then
    show.order_modified_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_15
    changed = true
  end
  if show.order_modified_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_16 then
    show.order_modified_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_16
    changed = true
  end
  if show.order_modified_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_17 then
    show.order_modified_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_17
    changed = true
  end
  if show.order_modified_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_2 then
    show.order_modified_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_2
    changed = true
  end
  if show.order_modified_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_3 then
    show.order_modified_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_3
    changed = true
  end
  if show.order_modified_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_4 then
    show.order_modified_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_4
    changed = true
  end
  if show.order_modified_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_5 then
    show.order_modified_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_5
    changed = true
  end
  if show.order_modified_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_6 then
    show.order_modified_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_6
    changed = true
  end
  if show.order_modified_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_7 then
    show.order_modified_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_7
    changed = true
  end
  if show.order_modified_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_8 then
    show.order_modified_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_8
    changed = true
  end
  if show.order_modified_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_9 then
    show.order_modified_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_byte_9
    changed = true
  end
  if show.order_modified_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_message then
    show.order_modified_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_message
    changed = true
  end
  if show.order_modified_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_optional_fields then
    show.order_modified_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_optional_fields
    changed = true
  end
  if show.order_modified_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_return_bitfields then
    show.order_modified_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_modified_return_bitfields
    changed = true
  end
  if show.order_rejected_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_1 then
    show.order_rejected_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_1
    changed = true
  end
  if show.order_rejected_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_10 then
    show.order_rejected_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_10
    changed = true
  end
  if show.order_rejected_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_11 then
    show.order_rejected_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_11
    changed = true
  end
  if show.order_rejected_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_12 then
    show.order_rejected_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_12
    changed = true
  end
  if show.order_rejected_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_13 then
    show.order_rejected_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_13
    changed = true
  end
  if show.order_rejected_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_14 then
    show.order_rejected_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_14
    changed = true
  end
  if show.order_rejected_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_15 then
    show.order_rejected_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_15
    changed = true
  end
  if show.order_rejected_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_16 then
    show.order_rejected_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_16
    changed = true
  end
  if show.order_rejected_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_17 then
    show.order_rejected_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_17
    changed = true
  end
  if show.order_rejected_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_2 then
    show.order_rejected_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_2
    changed = true
  end
  if show.order_rejected_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_3 then
    show.order_rejected_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_3
    changed = true
  end
  if show.order_rejected_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_4 then
    show.order_rejected_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_4
    changed = true
  end
  if show.order_rejected_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_5 then
    show.order_rejected_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_5
    changed = true
  end
  if show.order_rejected_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_6 then
    show.order_rejected_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_6
    changed = true
  end
  if show.order_rejected_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_7 then
    show.order_rejected_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_7
    changed = true
  end
  if show.order_rejected_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_8 then
    show.order_rejected_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_8
    changed = true
  end
  if show.order_rejected_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_9 then
    show.order_rejected_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_byte_9
    changed = true
  end
  if show.order_rejected_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_message then
    show.order_rejected_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_message
    changed = true
  end
  if show.order_rejected_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_optional_fields then
    show.order_rejected_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_optional_fields
    changed = true
  end
  if show.order_rejected_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_return_bitfields then
    show.order_rejected_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_rejected_return_bitfields
    changed = true
  end
  if show.order_restated_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_1 then
    show.order_restated_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_1
    changed = true
  end
  if show.order_restated_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_10 then
    show.order_restated_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_10
    changed = true
  end
  if show.order_restated_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_11 then
    show.order_restated_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_11
    changed = true
  end
  if show.order_restated_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_12 then
    show.order_restated_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_12
    changed = true
  end
  if show.order_restated_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_13 then
    show.order_restated_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_13
    changed = true
  end
  if show.order_restated_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_14 then
    show.order_restated_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_14
    changed = true
  end
  if show.order_restated_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_15 then
    show.order_restated_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_15
    changed = true
  end
  if show.order_restated_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_16 then
    show.order_restated_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_16
    changed = true
  end
  if show.order_restated_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_17 then
    show.order_restated_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_17
    changed = true
  end
  if show.order_restated_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_2 then
    show.order_restated_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_2
    changed = true
  end
  if show.order_restated_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_3 then
    show.order_restated_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_3
    changed = true
  end
  if show.order_restated_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_4 then
    show.order_restated_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_4
    changed = true
  end
  if show.order_restated_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_5 then
    show.order_restated_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_5
    changed = true
  end
  if show.order_restated_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_6 then
    show.order_restated_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_6
    changed = true
  end
  if show.order_restated_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_7 then
    show.order_restated_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_7
    changed = true
  end
  if show.order_restated_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_8 then
    show.order_restated_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_8
    changed = true
  end
  if show.order_restated_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_9 then
    show.order_restated_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_byte_9
    changed = true
  end
  if show.order_restated_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_message then
    show.order_restated_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_message
    changed = true
  end
  if show.order_restated_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_optional_fields then
    show.order_restated_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_optional_fields
    changed = true
  end
  if show.order_restated_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_return_bitfields then
    show.order_restated_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_order_restated_return_bitfields
    changed = true
  end
  if show.packet ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_packet then
    show.packet = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_packet
    changed = true
  end
  if show.param_group ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_group then
    show.param_group = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_group
    changed = true
  end
  if show.param_header ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_header then
    show.param_header = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_param_header
    changed = true
  end
  if show.purge_order_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_1 then
    show.purge_order_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_1
    changed = true
  end
  if show.purge_order_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_2 then
    show.purge_order_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_byte_2
    changed = true
  end
  if show.purge_order_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_message then
    show.purge_order_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_message
    changed = true
  end
  if show.purge_order_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_optional_fields then
    show.purge_order_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_optional_fields
    changed = true
  end
  if show.purge_order_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_return_bitfields then
    show.purge_order_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_order_return_bitfields
    changed = true
  end
  if show.purge_rejected_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_1 then
    show.purge_rejected_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_1
    changed = true
  end
  if show.purge_rejected_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_10 then
    show.purge_rejected_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_10
    changed = true
  end
  if show.purge_rejected_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_11 then
    show.purge_rejected_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_11
    changed = true
  end
  if show.purge_rejected_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_12 then
    show.purge_rejected_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_12
    changed = true
  end
  if show.purge_rejected_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_13 then
    show.purge_rejected_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_13
    changed = true
  end
  if show.purge_rejected_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_14 then
    show.purge_rejected_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_14
    changed = true
  end
  if show.purge_rejected_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_15 then
    show.purge_rejected_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_15
    changed = true
  end
  if show.purge_rejected_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_16 then
    show.purge_rejected_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_16
    changed = true
  end
  if show.purge_rejected_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_17 then
    show.purge_rejected_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_17
    changed = true
  end
  if show.purge_rejected_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_2 then
    show.purge_rejected_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_2
    changed = true
  end
  if show.purge_rejected_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_3 then
    show.purge_rejected_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_3
    changed = true
  end
  if show.purge_rejected_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_4 then
    show.purge_rejected_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_4
    changed = true
  end
  if show.purge_rejected_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_5 then
    show.purge_rejected_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_5
    changed = true
  end
  if show.purge_rejected_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_6 then
    show.purge_rejected_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_6
    changed = true
  end
  if show.purge_rejected_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_7 then
    show.purge_rejected_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_7
    changed = true
  end
  if show.purge_rejected_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_8 then
    show.purge_rejected_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_8
    changed = true
  end
  if show.purge_rejected_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_9 then
    show.purge_rejected_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_byte_9
    changed = true
  end
  if show.purge_rejected_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_message then
    show.purge_rejected_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_message
    changed = true
  end
  if show.purge_rejected_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_optional_fields then
    show.purge_rejected_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_optional_fields
    changed = true
  end
  if show.purge_rejected_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_return_bitfields then
    show.purge_rejected_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_purge_rejected_return_bitfields
    changed = true
  end
  if show.return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_return_bitfields then
    show.return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_return_bitfields
    changed = true
  end
  if show.trade_cancel_or_correct_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_1 then
    show.trade_cancel_or_correct_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_1
    changed = true
  end
  if show.trade_cancel_or_correct_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_10 then
    show.trade_cancel_or_correct_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_10
    changed = true
  end
  if show.trade_cancel_or_correct_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_11 then
    show.trade_cancel_or_correct_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_11
    changed = true
  end
  if show.trade_cancel_or_correct_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_12 then
    show.trade_cancel_or_correct_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_12
    changed = true
  end
  if show.trade_cancel_or_correct_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_13 then
    show.trade_cancel_or_correct_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_13
    changed = true
  end
  if show.trade_cancel_or_correct_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_14 then
    show.trade_cancel_or_correct_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_14
    changed = true
  end
  if show.trade_cancel_or_correct_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_15 then
    show.trade_cancel_or_correct_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_15
    changed = true
  end
  if show.trade_cancel_or_correct_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_16 then
    show.trade_cancel_or_correct_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_16
    changed = true
  end
  if show.trade_cancel_or_correct_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_17 then
    show.trade_cancel_or_correct_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_17
    changed = true
  end
  if show.trade_cancel_or_correct_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_2 then
    show.trade_cancel_or_correct_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_2
    changed = true
  end
  if show.trade_cancel_or_correct_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_3 then
    show.trade_cancel_or_correct_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_3
    changed = true
  end
  if show.trade_cancel_or_correct_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_4 then
    show.trade_cancel_or_correct_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_4
    changed = true
  end
  if show.trade_cancel_or_correct_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_5 then
    show.trade_cancel_or_correct_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_5
    changed = true
  end
  if show.trade_cancel_or_correct_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_6 then
    show.trade_cancel_or_correct_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_6
    changed = true
  end
  if show.trade_cancel_or_correct_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_7 then
    show.trade_cancel_or_correct_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_7
    changed = true
  end
  if show.trade_cancel_or_correct_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_8 then
    show.trade_cancel_or_correct_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_8
    changed = true
  end
  if show.trade_cancel_or_correct_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_9 then
    show.trade_cancel_or_correct_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_byte_9
    changed = true
  end
  if show.trade_cancel_or_correct_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_message then
    show.trade_cancel_or_correct_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_message
    changed = true
  end
  if show.trade_cancel_or_correct_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_optional_fields then
    show.trade_cancel_or_correct_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_optional_fields
    changed = true
  end
  if show.trade_cancel_or_correct_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_return_bitfields then
    show.trade_cancel_or_correct_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_trade_cancel_or_correct_return_bitfields
    changed = true
  end
  if show.unit_sequence ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequence then
    show.unit_sequence = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequence
    changed = true
  end
  if show.unit_sequences ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequences then
    show.unit_sequences = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_unit_sequences
    changed = true
  end
  if show.user_modify_rejected_byte_1 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_1 then
    show.user_modify_rejected_byte_1 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_1
    changed = true
  end
  if show.user_modify_rejected_byte_10 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_10 then
    show.user_modify_rejected_byte_10 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_10
    changed = true
  end
  if show.user_modify_rejected_byte_11 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_11 then
    show.user_modify_rejected_byte_11 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_11
    changed = true
  end
  if show.user_modify_rejected_byte_12 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_12 then
    show.user_modify_rejected_byte_12 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_12
    changed = true
  end
  if show.user_modify_rejected_byte_13 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_13 then
    show.user_modify_rejected_byte_13 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_13
    changed = true
  end
  if show.user_modify_rejected_byte_14 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_14 then
    show.user_modify_rejected_byte_14 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_14
    changed = true
  end
  if show.user_modify_rejected_byte_15 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_15 then
    show.user_modify_rejected_byte_15 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_15
    changed = true
  end
  if show.user_modify_rejected_byte_16 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_16 then
    show.user_modify_rejected_byte_16 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_16
    changed = true
  end
  if show.user_modify_rejected_byte_17 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_17 then
    show.user_modify_rejected_byte_17 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_17
    changed = true
  end
  if show.user_modify_rejected_byte_2 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_2 then
    show.user_modify_rejected_byte_2 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_2
    changed = true
  end
  if show.user_modify_rejected_byte_3 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_3 then
    show.user_modify_rejected_byte_3 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_3
    changed = true
  end
  if show.user_modify_rejected_byte_4 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_4 then
    show.user_modify_rejected_byte_4 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_4
    changed = true
  end
  if show.user_modify_rejected_byte_5 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_5 then
    show.user_modify_rejected_byte_5 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_5
    changed = true
  end
  if show.user_modify_rejected_byte_6 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_6 then
    show.user_modify_rejected_byte_6 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_6
    changed = true
  end
  if show.user_modify_rejected_byte_7 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_7 then
    show.user_modify_rejected_byte_7 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_7
    changed = true
  end
  if show.user_modify_rejected_byte_8 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_8 then
    show.user_modify_rejected_byte_8 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_8
    changed = true
  end
  if show.user_modify_rejected_byte_9 ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_9 then
    show.user_modify_rejected_byte_9 = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_byte_9
    changed = true
  end
  if show.user_modify_rejected_message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_message then
    show.user_modify_rejected_message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_message
    changed = true
  end
  if show.user_modify_rejected_optional_fields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_optional_fields then
    show.user_modify_rejected_optional_fields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_optional_fields
    changed = true
  end
  if show.user_modify_rejected_return_bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_return_bitfields then
    show.user_modify_rejected_return_bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_user_modify_rejected_return_bitfields
    changed = true
  end
  if show.bitfields ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_bitfields then
    show.bitfields = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_bitfields
    changed = true
  end
  if show.message ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message then
    show.message = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_message
    changed = true
  end
  if show.parameter ~= omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_parameter then
    show.parameter = omi_cboe_edgx_equities_orderentry_boe_v2_3.prefs.show_parameter
    changed = true
  end

  -- Reload on changed preference
  if changed then
    reload()
  end
end


-----------------------------------------------------------------------
-- Dissect Cboe Edgx Equities OrderEntry Boe 2.3
-----------------------------------------------------------------------

-- Mass Cancel Id
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id = {}

-- Size: Mass Cancel Id
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.size = 20

-- Display: Mass Cancel Id
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.display = function(value)
  return "Mass Cancel Id: "..value
end

-- Dissect: Mass Cancel Id
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_id, range, value, display)

  return offset + length, value
end

-- Sub Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator = {}

-- Size: Sub Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.size = 1

-- Display: Sub Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.display = function(value)
  if value == "H" then
    return "Sub Liquidity Indicator: Trade Added Hidden Liquidity (H)"
  end
  if value == "I" then
    return "Sub Liquidity Indicator: Trade Added Hidden Liquidity That Was Price Improved (I)"
  end
  if value == "J" then
    return "Sub Liquidity Indicator: Execution From First Order To Join The Nbbo (J)"
  end
  if value == "S" then
    return "Sub Liquidity Indicator: Execution From Order That Set The Nbbo (S)"
  end
  if value == "V" then
    return "Sub Liquidity Indicator: Visible Liquidity Add Trade That Was Price Improved (V)"
  end
  if value == "m" then
    return "Sub Liquidity Indicator: Midpoint Peg Order (m)"
  end

  return "Sub Liquidity Indicator: Unknown("..value..")"
end

-- Dissect: Sub Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.sub_liquidity_indicator, range, value, display)

  return offset + length, value
end

-- Purge Rejected Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_1_exists = {}

-- Purge Rejected Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_2_exists = {}

-- Purge Rejected Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_3_exists = {}

-- Purge Rejected Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_4_exists = {}

-- Purge Rejected Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_5_exists = {}

-- Purge Rejected Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_6_exists = {}

-- Purge Rejected Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_7_exists = {}

-- Purge Rejected Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_reserved_bit_8_exists = {}

-- Purge Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17 = {}

-- Size: Purge Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.size = 1

-- Display: Purge Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_17, range, display)

  if show.purge_rejected_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16 = {}

-- Size: Purge Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.size = 1

-- Display: Purge Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_16, range, display)

  if show.purge_rejected_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Mass Cancel Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_mass_cancel_id_exists = {}

-- Purge Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15 = {}

-- Size: Purge Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.size = 1

-- Display: Purge Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Mass Cancel Id Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Mass Cancel Id Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Mass Cancel Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_mass_cancel_id_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_15, range, display)

  if show.purge_rejected_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14 = {}

-- Size: Purge Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.size = 1

-- Display: Purge Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_14, range, display)

  if show.purge_rejected_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13 = {}

-- Size: Purge Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.size = 1

-- Display: Purge Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_13, range, display)

  if show.purge_rejected_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12 = {}

-- Size: Purge Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.size = 1

-- Display: Purge Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_12, range, display)

  if show.purge_rejected_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11 = {}

-- Size: Purge Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.size = 1

-- Display: Purge Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_11, range, display)

  if show.purge_rejected_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10 = {}

-- Size: Purge Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.size = 1

-- Display: Purge Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_10, range, display)

  if show.purge_rejected_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9 = {}

-- Size: Purge Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.size = 1

-- Display: Purge Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_9, range, display)

  if show.purge_rejected_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8 = {}

-- Size: Purge Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.size = 1

-- Display: Purge Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_8, range, display)

  if show.purge_rejected_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Sub Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_sub_liquidity_indicator_exists = {}

-- Purge Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7 = {}

-- Size: Purge Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.size = 1

-- Display: Purge Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Sub Liquidity Indicator Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Sub Liquidity Indicator Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Sub Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_sub_liquidity_indicator_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_7, range, display)

  if show.purge_rejected_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6 = {}

-- Size: Purge Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.size = 1

-- Display: Purge Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_6, range, display)

  if show.purge_rejected_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5 = {}

-- Size: Purge Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.size = 1

-- Display: Purge Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_5, range, display)

  if show.purge_rejected_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4 = {}

-- Size: Purge Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.size = 1

-- Display: Purge Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_4, range, display)

  if show.purge_rejected_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3 = {}

-- Size: Purge Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.size = 1

-- Display: Purge Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_3, range, display)

  if show.purge_rejected_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2 = {}

-- Size: Purge Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.size = 1

-- Display: Purge Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_2, range, display)

  if show.purge_rejected_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1 = {}

-- Size: Purge Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.size = 1

-- Display: Purge Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Rejected Reserved Bit 8 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Rejected Reserved Bit 7 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Rejected Reserved Bit 6 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Rejected Reserved Bit 5 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Rejected Reserved Bit 4 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Rejected Reserved Bit 3 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Rejected Reserved Bit 2 Exists|"
  end
  -- Is Purge Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.bits = function(buffer, offset, packet, parent)

  -- Purge Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Purge Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_byte_1, range, display)

  if show.purge_rejected_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count = {}

-- Size: Purge Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.size = 1

-- Display: Purge Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.display = function(value)
  return "Purge Rejected Bitfield Count: "..value
end

-- Dissect: Purge Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_bitfield_count, range, value, display)

  return offset + length, value
end

-- Purge Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields = {}

-- Display: Purge Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.fields = function(buffer, offset, packet, parent, size_of_purge_rejected_optional_fields)
  local index = offset

  -- Purge Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, purge_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Purge Rejected Byte 1
  local purge_rejected_byte_1_exists = purge_rejected_bitfield_count >= 1

  -- Runtime optional field: Purge Rejected Byte 1
  if purge_rejected_byte_1_exists then

    -- Purge Rejected Byte 1: Struct of 8 fields
    index, purge_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 2
  local purge_rejected_byte_2_exists = purge_rejected_bitfield_count >= 2

  -- Runtime optional field: Purge Rejected Byte 2
  if purge_rejected_byte_2_exists then

    -- Purge Rejected Byte 2: Struct of 8 fields
    index, purge_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 3
  local purge_rejected_byte_3_exists = purge_rejected_bitfield_count >= 3

  -- Runtime optional field: Purge Rejected Byte 3
  if purge_rejected_byte_3_exists then

    -- Purge Rejected Byte 3: Struct of 8 fields
    index, purge_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 4
  local purge_rejected_byte_4_exists = purge_rejected_bitfield_count >= 4

  -- Runtime optional field: Purge Rejected Byte 4
  if purge_rejected_byte_4_exists then

    -- Purge Rejected Byte 4: Struct of 8 fields
    index, purge_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 5
  local purge_rejected_byte_5_exists = purge_rejected_bitfield_count >= 5

  -- Runtime optional field: Purge Rejected Byte 5
  if purge_rejected_byte_5_exists then

    -- Purge Rejected Byte 5: Struct of 8 fields
    index, purge_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 6
  local purge_rejected_byte_6_exists = purge_rejected_bitfield_count >= 6

  -- Runtime optional field: Purge Rejected Byte 6
  if purge_rejected_byte_6_exists then

    -- Purge Rejected Byte 6: Struct of 8 fields
    index, purge_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 7
  local purge_rejected_byte_7_exists = purge_rejected_bitfield_count >= 7

  -- Runtime optional field: Purge Rejected Byte 7
  if purge_rejected_byte_7_exists then

    -- Purge Rejected Byte 7: Struct of 8 fields
    index, purge_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 8
  local purge_rejected_byte_8_exists = purge_rejected_bitfield_count >= 8

  -- Runtime optional field: Purge Rejected Byte 8
  if purge_rejected_byte_8_exists then

    -- Purge Rejected Byte 8: Struct of 8 fields
    index, purge_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 9
  local purge_rejected_byte_9_exists = purge_rejected_bitfield_count >= 9

  -- Runtime optional field: Purge Rejected Byte 9
  if purge_rejected_byte_9_exists then

    -- Purge Rejected Byte 9: Struct of 8 fields
    index, purge_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 10
  local purge_rejected_byte_10_exists = purge_rejected_bitfield_count >= 10

  -- Runtime optional field: Purge Rejected Byte 10
  if purge_rejected_byte_10_exists then

    -- Purge Rejected Byte 10: Struct of 8 fields
    index, purge_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 11
  local purge_rejected_byte_11_exists = purge_rejected_bitfield_count >= 11

  -- Runtime optional field: Purge Rejected Byte 11
  if purge_rejected_byte_11_exists then

    -- Purge Rejected Byte 11: Struct of 8 fields
    index, purge_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 12
  local purge_rejected_byte_12_exists = purge_rejected_bitfield_count >= 12

  -- Runtime optional field: Purge Rejected Byte 12
  if purge_rejected_byte_12_exists then

    -- Purge Rejected Byte 12: Struct of 8 fields
    index, purge_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 13
  local purge_rejected_byte_13_exists = purge_rejected_bitfield_count >= 13

  -- Runtime optional field: Purge Rejected Byte 13
  if purge_rejected_byte_13_exists then

    -- Purge Rejected Byte 13: Struct of 8 fields
    index, purge_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 14
  local purge_rejected_byte_14_exists = purge_rejected_bitfield_count >= 14

  -- Runtime optional field: Purge Rejected Byte 14
  if purge_rejected_byte_14_exists then

    -- Purge Rejected Byte 14: Struct of 8 fields
    index, purge_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 15
  local purge_rejected_byte_15_exists = purge_rejected_bitfield_count >= 15

  -- Runtime optional field: Purge Rejected Byte 15
  if purge_rejected_byte_15_exists then

    -- Purge Rejected Byte 15: Struct of 8 fields
    index, purge_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 16
  local purge_rejected_byte_16_exists = purge_rejected_bitfield_count >= 16

  -- Runtime optional field: Purge Rejected Byte 16
  if purge_rejected_byte_16_exists then

    -- Purge Rejected Byte 16: Struct of 8 fields
    index, purge_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 17
  local purge_rejected_byte_17_exists = purge_rejected_bitfield_count >= 17

  -- Runtime optional field: Purge Rejected Byte 17
  if purge_rejected_byte_17_exists then

    -- Purge Rejected Byte 17: Struct of 8 fields
    index, purge_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Sub Liquidity Indicator
  local sub_liquidity_indicator_exists = purge_rejected_bitfield_count >= 7 and purge_rejected_byte_7:bitfield(7) > 0

  -- Runtime optional field: Sub Liquidity Indicator
  if sub_liquidity_indicator_exists then
    index, sub_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Mass Cancel Id
  local mass_cancel_id_exists = purge_rejected_bitfield_count >= 15 and purge_rejected_byte_15:bitfield(4) > 0

  -- Runtime optional field: Mass Cancel Id
  if mass_cancel_id_exists then
    index, mass_cancel_id = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Purge Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_purge_rejected_optional_fields)
  local index = offset + size_of_purge_rejected_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.purge_rejected_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_purge_rejected_optional_fields)
    parent:set_len(size_of_purge_rejected_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_purge_rejected_optional_fields)

    return index
  end
end

-- Reserved Internal
cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal = {}

-- Size: Reserved Internal
cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.size = 1

-- Display: Reserved Internal
cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.display = function(value)
  return "Reserved Internal: "..value
end

-- Dissect: Reserved Internal
cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.reserved_internal, range, value, display)

  return offset + length, value
end

-- Text
cboe_edgx_equities_orderentry_boe_v2_3.text = {}

-- Size: Text
cboe_edgx_equities_orderentry_boe_v2_3.text.size = 60

-- Display: Text
cboe_edgx_equities_orderentry_boe_v2_3.text.display = function(value)
  return "Text: "..value
end

-- Dissect: Text
cboe_edgx_equities_orderentry_boe_v2_3.text.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.text.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.text.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.text, range, value, display)

  return offset + length, value
end

-- Purge Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason = {}

-- Size: Purge Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.size = 1

-- Display: Purge Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.display = function(value)
  if value == "A" then
    return "Purge Reject Reason: Admin (A)"
  end
  if value == "D" then
    return "Purge Reject Reason: Duplicate Identifier (D)"
  end
  if value == "E" then
    return "Purge Reject Reason: Size Reduction Due To Swp Restatement (E)"
  end
  if value == "F" then
    return "Purge Reject Reason: Failed To Quote (F)"
  end
  if value == "H" then
    return "Purge Reject Reason: Halted (H)"
  end
  if value == "I" then
    return "Purge Reject Reason: Incorrect Data Center (I)"
  end
  if value == "J" then
    return "Purge Reject Reason: Too Late To Cancel (J)"
  end
  if value == "K" then
    return "Purge Reject Reason: Order Rate Threshold Exceeded (K)"
  end
  if value == "L" then
    return "Purge Reject Reason: Order Would Lock Or Cross Nbbo (L)"
  end
  if value == "M" then
    return "Purge Reject Reason: Order Size Exceeded (M)"
  end
  if value == "N" then
    return "Purge Reject Reason: Ran Out Of Liquidity To Execute Against (N)"
  end
  if value == "O" then
    return "Purge Reject Reason: Cl Ord Id Doesnt Match A Known Order (O)"
  end
  if value == "P" then
    return "Purge Reject Reason: Cant Modify An Order That Is Pending Fill (P)"
  end
  if value == "Q" then
    return "Purge Reject Reason: Waiting For First Trade (Q)"
  end
  if value == "R" then
    return "Purge Reject Reason: Routing Unavailable (R)"
  end
  if value == "S" then
    return "Purge Reject Reason: Short Sale Price Violation (S)"
  end
  if value == "T" then
    return "Purge Reject Reason: Fill Would Trade Through The Nbbo (T)"
  end
  if value == "U" then
    return "Purge Reject Reason: User Requested (U)"
  end
  if value == "V" then
    return "Purge Reject Reason: Would Wash (V)"
  end
  if value == "W" then
    return "Purge Reject Reason: Add Liquidity Only Order Would Remove (W)"
  end
  if value == "X" then
    return "Purge Reject Reason: Order Expired (X)"
  end
  if value == "Y" then
    return "Purge Reject Reason: Symbol Not Supported (Y)"
  end
  if value == "Z" then
    return "Purge Reject Reason: Unforeseen Reason (Z)"
  end
  if value == "f" then
    return "Purge Reject Reason: Risk Management Mpid Or Custom Group Id Level (f)"
  end
  if value == "m" then
    return "Purge Reject Reason: Market Access Risk Limit Exceeded (m)"
  end
  if value == "o" then
    return "Purge Reject Reason: Max Open Orders Count Exceeded (o)"
  end
  if value == "r" then
    return "Purge Reject Reason: Reserve Reload (r)"
  end
  if value == "s" then
    return "Purge Reject Reason: Risk Management Risk Root Level (s)"
  end
  if value == "u" then
    return "Purge Reject Reason: Limit Up Limit Down (u)"
  end
  if value == "w" then
    return "Purge Reject Reason: Would Remove On Unslide (w)"
  end
  if value == "x" then
    return "Purge Reject Reason: Crossed Market (x)"
  end
  if value == "y" then
    return "Purge Reject Reason: Order Received By Cboe During Replay (y)"
  end

  return "Purge Reject Reason: Unknown("..value..")"
end

-- Dissect: Purge Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_reject_reason, range, value, display)

  return offset + length, value
end

-- Transaction Time
cboe_edgx_equities_orderentry_boe_v2_3.transaction_time = {}

-- Size: Transaction Time
cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.size = 8

-- Display: Transaction Time
cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.display = function(value)
  return "Transaction Time: "..value
end

-- Dissect: Transaction Time
cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.transaction_time, range, value, display)

  return offset + length, value
end

-- Purge Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message = {}

-- Read runtime size of: Purge Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Purge Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.fields = function(buffer, offset, packet, parent, size_of_purge_rejected_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Purge Reject Reason: 1 Byte Ascii String Enum with 32 values
  index, purge_reject_reason = cboe_edgx_equities_orderentry_boe_v2_3.purge_reject_reason.dissect(buffer, index, packet, parent)

  -- Text: 60 Byte Ascii String
  index, text = cboe_edgx_equities_orderentry_boe_v2_3.text.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Purge Rejected Optional Fields
  local size_of_purge_rejected_optional_fields = message_length - (index - offset) - 8

  -- Purge Rejected Optional Fields: Struct of 20 fields
  index, purge_rejected_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_optional_fields.dissect(buffer, index, packet, parent, size_of_purge_rejected_optional_fields)

  return index
end

-- Dissect: Purge Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_purge_rejected_message = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.purge_rejected_message then
    local range = buffer(offset, size_of_purge_rejected_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.fields(buffer, offset, packet, parent, size_of_purge_rejected_message)

  return offset + size_of_purge_rejected_message
end

-- Cancelled Order Count
cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count = {}

-- Size: Cancelled Order Count
cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.size = 4

-- Display: Cancelled Order Count
cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.display = function(value)
  return "Cancelled Order Count: "..value
end

-- Dissect: Cancelled Order Count
cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancelled_order_count, range, value, display)

  return offset + length, value
end

-- Mass Cancel Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message = {}

-- Read runtime size of: Mass Cancel Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Mass Cancel Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Mass Cancel Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.fields = function(buffer, offset, packet, parent, size_of_mass_cancel_acknowledgment_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Mass Cancel Id: 20 Byte Ascii String
  index, mass_cancel_id = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.dissect(buffer, index, packet, parent)

  -- Cancelled Order Count: 4 Byte Unsigned Fixed Width Integer
  index, cancelled_order_count = cboe_edgx_equities_orderentry_boe_v2_3.cancelled_order_count.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  return index
end

-- Dissect: Mass Cancel Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_mass_cancel_acknowledgment_message = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.mass_cancel_acknowledgment_message then
    local range = buffer(offset, size_of_mass_cancel_acknowledgment_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_acknowledgment_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.fields(buffer, offset, packet, parent, size_of_mass_cancel_acknowledgment_message)

  return offset + size_of_mass_cancel_acknowledgment_message
end

-- Capacity
cboe_edgx_equities_orderentry_boe_v2_3.capacity = {}

-- Size: Capacity
cboe_edgx_equities_orderentry_boe_v2_3.capacity.size = 1

-- Display: Capacity
cboe_edgx_equities_orderentry_boe_v2_3.capacity.display = function(value)
  if value == "A" then
    return "Capacity: Agency (A)"
  end
  if value == "P" then
    return "Capacity: Principal (P)"
  end
  if value == "R" then
    return "Capacity: Riskless Principal (R)"
  end

  return "Capacity: Unknown("..value..")"
end

-- Dissect: Capacity
cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.capacity.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.capacity.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.capacity, range, value, display)

  return offset + length, value
end

-- Symbol Sfx
cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx = {}

-- Size: Symbol Sfx
cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.size = 8

-- Display: Symbol Sfx
cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.display = function(value)
  return "Symbol Sfx: "..value
end

-- Dissect: Symbol Sfx
cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.symbol_sfx, range, value, display)

  return offset + length, value
end

-- Symbol
cboe_edgx_equities_orderentry_boe_v2_3.symbol = {}

-- Size: Symbol
cboe_edgx_equities_orderentry_boe_v2_3.symbol.size = 8

-- Display: Symbol
cboe_edgx_equities_orderentry_boe_v2_3.symbol.display = function(value)
  return "Symbol: "..value
end

-- Dissect: Symbol
cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.symbol.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.symbol.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.symbol, range, value, display)

  return offset + length, value
end

-- Trade Cancel Or Correct Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_1_exists = {}

-- Trade Cancel Or Correct Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_2_exists = {}

-- Trade Cancel Or Correct Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_3_exists = {}

-- Trade Cancel Or Correct Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_4_exists = {}

-- Trade Cancel Or Correct Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_5_exists = {}

-- Trade Cancel Or Correct Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_6_exists = {}

-- Trade Cancel Or Correct Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_7_exists = {}

-- Trade Cancel Or Correct Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_reserved_bit_8_exists = {}

-- Trade Cancel Or Correct Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17 = {}

-- Size: Trade Cancel Or Correct Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.size = 1

-- Display: Trade Cancel Or Correct Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_17, range, display)

  if show.trade_cancel_or_correct_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16 = {}

-- Size: Trade Cancel Or Correct Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.size = 1

-- Display: Trade Cancel Or Correct Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_16, range, display)

  if show.trade_cancel_or_correct_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15 = {}

-- Size: Trade Cancel Or Correct Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.size = 1

-- Display: Trade Cancel Or Correct Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_15, range, display)

  if show.trade_cancel_or_correct_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14 = {}

-- Size: Trade Cancel Or Correct Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.size = 1

-- Display: Trade Cancel Or Correct Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_14, range, display)

  if show.trade_cancel_or_correct_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13 = {}

-- Size: Trade Cancel Or Correct Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.size = 1

-- Display: Trade Cancel Or Correct Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_13, range, display)

  if show.trade_cancel_or_correct_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12 = {}

-- Size: Trade Cancel Or Correct Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.size = 1

-- Display: Trade Cancel Or Correct Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_12, range, display)

  if show.trade_cancel_or_correct_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11 = {}

-- Size: Trade Cancel Or Correct Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.size = 1

-- Display: Trade Cancel Or Correct Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_11, range, display)

  if show.trade_cancel_or_correct_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10 = {}

-- Size: Trade Cancel Or Correct Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.size = 1

-- Display: Trade Cancel Or Correct Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_10, range, display)

  if show.trade_cancel_or_correct_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9 = {}

-- Size: Trade Cancel Or Correct Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.size = 1

-- Display: Trade Cancel Or Correct Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_9, range, display)

  if show.trade_cancel_or_correct_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8 = {}

-- Size: Trade Cancel Or Correct Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.size = 1

-- Display: Trade Cancel Or Correct Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_8, range, display)

  if show.trade_cancel_or_correct_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Sub Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_sub_liquidity_indicator_exists = {}

-- Trade Cancel Or Correct Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7 = {}

-- Size: Trade Cancel Or Correct Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.size = 1

-- Display: Trade Cancel Or Correct Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Sub Liquidity Indicator Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Sub Liquidity Indicator Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Sub Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_sub_liquidity_indicator_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_7, range, display)

  if show.trade_cancel_or_correct_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6 = {}

-- Size: Trade Cancel Or Correct Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.size = 1

-- Display: Trade Cancel Or Correct Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_6, range, display)

  if show.trade_cancel_or_correct_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5 = {}

-- Size: Trade Cancel Or Correct Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.size = 1

-- Display: Trade Cancel Or Correct Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_5, range, display)

  if show.trade_cancel_or_correct_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4 = {}

-- Size: Trade Cancel Or Correct Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.size = 1

-- Display: Trade Cancel Or Correct Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_4, range, display)

  if show.trade_cancel_or_correct_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3 = {}

-- Size: Trade Cancel Or Correct Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.size = 1

-- Display: Trade Cancel Or Correct Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_3, range, display)

  if show.trade_cancel_or_correct_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_symbol_exists = {}

-- Trade Cancel Or Correct Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_symbol_sfx_exists = {}

-- Trade Cancel Or Correct Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_capacity_exists = {}

-- Trade Cancel Or Correct Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2 = {}

-- Size: Trade Cancel Or Correct Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.size = 1

-- Display: Trade Cancel Or Correct Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Capacity Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Symbol Sfx Exists|"
  end
  -- Is Trade Cancel Or Correct Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_capacity_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_symbol_sfx_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_symbol_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_2, range, display)

  if show.trade_cancel_or_correct_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1 = {}

-- Size: Trade Cancel Or Correct Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.size = 1

-- Display: Trade Cancel Or Correct Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Trade Cancel Or Correct Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 8 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 7 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 6 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 5 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 4 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 3 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 2 Exists|"
  end
  -- Is Trade Cancel Or Correct Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Trade Cancel Or Correct Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Trade Cancel Or Correct Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.bits = function(buffer, offset, packet, parent)

  -- Trade Cancel Or Correct Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_8_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_7_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_6_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_5_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_4_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_3_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_2_exists, buffer(offset, 1))

  -- Trade Cancel Or Correct Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Trade Cancel Or Correct Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_byte_1, range, display)

  if show.trade_cancel_or_correct_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Trade Cancel Or Correct Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count = {}

-- Size: Trade Cancel Or Correct Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.size = 1

-- Display: Trade Cancel Or Correct Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.display = function(value)
  return "Trade Cancel Or Correct Bitfield Count: "..value
end

-- Dissect: Trade Cancel Or Correct Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_bitfield_count, range, value, display)

  return offset + length, value
end

-- Trade Cancel Or Correct Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields = {}

-- Display: Trade Cancel Or Correct Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Trade Cancel Or Correct Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.fields = function(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_optional_fields)
  local index = offset

  -- Trade Cancel Or Correct Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, trade_cancel_or_correct_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 1
  local trade_cancel_or_correct_byte_1_exists = trade_cancel_or_correct_bitfield_count >= 1

  -- Runtime optional field: Trade Cancel Or Correct Byte 1
  if trade_cancel_or_correct_byte_1_exists then

    -- Trade Cancel Or Correct Byte 1: Struct of 8 fields
    index, trade_cancel_or_correct_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 2
  local trade_cancel_or_correct_byte_2_exists = trade_cancel_or_correct_bitfield_count >= 2

  -- Runtime optional field: Trade Cancel Or Correct Byte 2
  if trade_cancel_or_correct_byte_2_exists then

    -- Trade Cancel Or Correct Byte 2: Struct of 8 fields
    index, trade_cancel_or_correct_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 3
  local trade_cancel_or_correct_byte_3_exists = trade_cancel_or_correct_bitfield_count >= 3

  -- Runtime optional field: Trade Cancel Or Correct Byte 3
  if trade_cancel_or_correct_byte_3_exists then

    -- Trade Cancel Or Correct Byte 3: Struct of 8 fields
    index, trade_cancel_or_correct_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 4
  local trade_cancel_or_correct_byte_4_exists = trade_cancel_or_correct_bitfield_count >= 4

  -- Runtime optional field: Trade Cancel Or Correct Byte 4
  if trade_cancel_or_correct_byte_4_exists then

    -- Trade Cancel Or Correct Byte 4: Struct of 8 fields
    index, trade_cancel_or_correct_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 5
  local trade_cancel_or_correct_byte_5_exists = trade_cancel_or_correct_bitfield_count >= 5

  -- Runtime optional field: Trade Cancel Or Correct Byte 5
  if trade_cancel_or_correct_byte_5_exists then

    -- Trade Cancel Or Correct Byte 5: Struct of 8 fields
    index, trade_cancel_or_correct_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 6
  local trade_cancel_or_correct_byte_6_exists = trade_cancel_or_correct_bitfield_count >= 6

  -- Runtime optional field: Trade Cancel Or Correct Byte 6
  if trade_cancel_or_correct_byte_6_exists then

    -- Trade Cancel Or Correct Byte 6: Struct of 8 fields
    index, trade_cancel_or_correct_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 7
  local trade_cancel_or_correct_byte_7_exists = trade_cancel_or_correct_bitfield_count >= 7

  -- Runtime optional field: Trade Cancel Or Correct Byte 7
  if trade_cancel_or_correct_byte_7_exists then

    -- Trade Cancel Or Correct Byte 7: Struct of 8 fields
    index, trade_cancel_or_correct_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 8
  local trade_cancel_or_correct_byte_8_exists = trade_cancel_or_correct_bitfield_count >= 8

  -- Runtime optional field: Trade Cancel Or Correct Byte 8
  if trade_cancel_or_correct_byte_8_exists then

    -- Trade Cancel Or Correct Byte 8: Struct of 8 fields
    index, trade_cancel_or_correct_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 9
  local trade_cancel_or_correct_byte_9_exists = trade_cancel_or_correct_bitfield_count >= 9

  -- Runtime optional field: Trade Cancel Or Correct Byte 9
  if trade_cancel_or_correct_byte_9_exists then

    -- Trade Cancel Or Correct Byte 9: Struct of 8 fields
    index, trade_cancel_or_correct_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 10
  local trade_cancel_or_correct_byte_10_exists = trade_cancel_or_correct_bitfield_count >= 10

  -- Runtime optional field: Trade Cancel Or Correct Byte 10
  if trade_cancel_or_correct_byte_10_exists then

    -- Trade Cancel Or Correct Byte 10: Struct of 8 fields
    index, trade_cancel_or_correct_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 11
  local trade_cancel_or_correct_byte_11_exists = trade_cancel_or_correct_bitfield_count >= 11

  -- Runtime optional field: Trade Cancel Or Correct Byte 11
  if trade_cancel_or_correct_byte_11_exists then

    -- Trade Cancel Or Correct Byte 11: Struct of 8 fields
    index, trade_cancel_or_correct_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 12
  local trade_cancel_or_correct_byte_12_exists = trade_cancel_or_correct_bitfield_count >= 12

  -- Runtime optional field: Trade Cancel Or Correct Byte 12
  if trade_cancel_or_correct_byte_12_exists then

    -- Trade Cancel Or Correct Byte 12: Struct of 8 fields
    index, trade_cancel_or_correct_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 13
  local trade_cancel_or_correct_byte_13_exists = trade_cancel_or_correct_bitfield_count >= 13

  -- Runtime optional field: Trade Cancel Or Correct Byte 13
  if trade_cancel_or_correct_byte_13_exists then

    -- Trade Cancel Or Correct Byte 13: Struct of 8 fields
    index, trade_cancel_or_correct_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 14
  local trade_cancel_or_correct_byte_14_exists = trade_cancel_or_correct_bitfield_count >= 14

  -- Runtime optional field: Trade Cancel Or Correct Byte 14
  if trade_cancel_or_correct_byte_14_exists then

    -- Trade Cancel Or Correct Byte 14: Struct of 8 fields
    index, trade_cancel_or_correct_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 15
  local trade_cancel_or_correct_byte_15_exists = trade_cancel_or_correct_bitfield_count >= 15

  -- Runtime optional field: Trade Cancel Or Correct Byte 15
  if trade_cancel_or_correct_byte_15_exists then

    -- Trade Cancel Or Correct Byte 15: Struct of 8 fields
    index, trade_cancel_or_correct_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 16
  local trade_cancel_or_correct_byte_16_exists = trade_cancel_or_correct_bitfield_count >= 16

  -- Runtime optional field: Trade Cancel Or Correct Byte 16
  if trade_cancel_or_correct_byte_16_exists then

    -- Trade Cancel Or Correct Byte 16: Struct of 8 fields
    index, trade_cancel_or_correct_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 17
  local trade_cancel_or_correct_byte_17_exists = trade_cancel_or_correct_bitfield_count >= 17

  -- Runtime optional field: Trade Cancel Or Correct Byte 17
  if trade_cancel_or_correct_byte_17_exists then

    -- Trade Cancel Or Correct Byte 17: Struct of 8 fields
    index, trade_cancel_or_correct_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = trade_cancel_or_correct_bitfield_count >= 2 and trade_cancel_or_correct_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = trade_cancel_or_correct_bitfield_count >= 2 and trade_cancel_or_correct_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = trade_cancel_or_correct_bitfield_count >= 2 and trade_cancel_or_correct_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Sub Liquidity Indicator
  local sub_liquidity_indicator_exists = trade_cancel_or_correct_bitfield_count >= 7 and trade_cancel_or_correct_byte_7:bitfield(7) > 0

  -- Runtime optional field: Sub Liquidity Indicator
  if sub_liquidity_indicator_exists then
    index, sub_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Trade Cancel Or Correct Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_optional_fields)
  local index = offset + size_of_trade_cancel_or_correct_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.trade_cancel_or_correct_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.fields(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_optional_fields)
    parent:set_len(size_of_trade_cancel_or_correct_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.fields(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_optional_fields)

    return index
  end
end

-- Orig Time
cboe_edgx_equities_orderentry_boe_v2_3.orig_time = {}

-- Size: Orig Time
cboe_edgx_equities_orderentry_boe_v2_3.orig_time.size = 8

-- Display: Orig Time
cboe_edgx_equities_orderentry_boe_v2_3.orig_time.display = function(value)
  return "Orig Time: "..value
end

-- Dissect: Orig Time
cboe_edgx_equities_orderentry_boe_v2_3.orig_time.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.orig_time.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.orig_time.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.orig_time, range, value, display)

  return offset + length, value
end

-- Corrected Price
cboe_edgx_equities_orderentry_boe_v2_3.corrected_price = {}

-- Size: Corrected Price
cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.size = 8

-- Display: Corrected Price
cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.display = function(value)
  return "Corrected Price: "..value
end

-- Dissect: Corrected Price
cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.corrected_price, range, value, display)

  return offset + length, value
end

-- Last Px
cboe_edgx_equities_orderentry_boe_v2_3.last_px = {}

-- Size: Last Px
cboe_edgx_equities_orderentry_boe_v2_3.last_px.size = 8

-- Display: Last Px
cboe_edgx_equities_orderentry_boe_v2_3.last_px.display = function(value)
  return "Last Px: "..value
end

-- Dissect: Last Px
cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.last_px.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.last_px.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_px, range, value, display)

  return offset + length, value
end

-- Last Shares
cboe_edgx_equities_orderentry_boe_v2_3.last_shares = {}

-- Size: Last Shares
cboe_edgx_equities_orderentry_boe_v2_3.last_shares.size = 4

-- Display: Last Shares
cboe_edgx_equities_orderentry_boe_v2_3.last_shares.display = function(value)
  return "Last Shares: "..value
end

-- Dissect: Last Shares
cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_shares, range, value, display)

  return offset + length, value
end

-- Clearing Account
cboe_edgx_equities_orderentry_boe_v2_3.clearing_account = {}

-- Size: Clearing Account
cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.size = 4

-- Display: Clearing Account
cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.display = function(value)
  return "Clearing Account: "..value
end

-- Dissect: Clearing Account
cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.clearing_account, range, value, display)

  return offset + length, value
end

-- Clearing Firm
cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm = {}

-- Size: Clearing Firm
cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.size = 4

-- Display: Clearing Firm
cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.display = function(value)
  return "Clearing Firm: "..value
end

-- Dissect: Clearing Firm
cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.clearing_firm, range, value, display)

  return offset + length, value
end

-- Base Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator = {}

-- Size: Base Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.size = 1

-- Display: Base Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.display = function(value)
  if value == "A" then
    return "Base Liquidity Indicator: Added Liquidity (A)"
  end
  if value == "R" then
    return "Base Liquidity Indicator: Removed Liquidity (R)"
  end
  if value == "X" then
    return "Base Liquidity Indicator: Routed To Another Market (X)"
  end
  if value == "C" then
    return "Base Liquidity Indicator: Auction Or Uncrossing (C)"
  end

  return "Base Liquidity Indicator: Unknown("..value..")"
end

-- Dissect: Base Liquidity Indicator
cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.base_liquidity_indicator, range, value, display)

  return offset + length, value
end

-- Side
cboe_edgx_equities_orderentry_boe_v2_3.side = {}

-- Size: Side
cboe_edgx_equities_orderentry_boe_v2_3.side.size = 1

-- Display: Side
cboe_edgx_equities_orderentry_boe_v2_3.side.display = function(value)
  if value == "1" then
    return "Side: Buy (1)"
  end
  if value == "2" then
    return "Side: Sell (2)"
  end
  if value == "5" then
    return "Side: Short Sell (5)"
  end
  if value == "5" then
    return "Side: Short Sell Exempt (5)"
  end

  return "Side: Unknown("..value..")"
end

-- Dissect: Side
cboe_edgx_equities_orderentry_boe_v2_3.side.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.side.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.side.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.side, range, value, display)

  return offset + length, value
end

-- Exec Ref Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id = {}

-- Size: Exec Ref Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.size = 8

-- Display: Exec Ref Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.display = function(value)
  return "Exec Ref Id: "..value
end

-- Dissect: Exec Ref Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_ref_id, range, value, display)

  return offset + length, value
end

-- Order Id
cboe_edgx_equities_orderentry_boe_v2_3.order_id = {}

-- Size: Order Id
cboe_edgx_equities_orderentry_boe_v2_3.order_id.size = 8

-- Display: Order Id
cboe_edgx_equities_orderentry_boe_v2_3.order_id.display = function(value)
  return "Order Id: "..value
end

-- Dissect: Order Id
cboe_edgx_equities_orderentry_boe_v2_3.order_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_id.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_id, range, value, display)

  return offset + length, value
end

-- Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id = {}

-- Size: Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.size = 20

-- Display: Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.display = function(value)
  return "Cl Ord Id: "..value
end

-- Dissect: Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cl_ord_id, range, value, display)

  return offset + length, value
end

-- Trade Cancel Or Correct Message
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message = {}

-- Read runtime size of: Trade Cancel Or Correct Message
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Trade Cancel Or Correct Message
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Trade Cancel Or Correct Message
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.fields = function(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Order Id: 8 Byte Unsigned Fixed Width Integer
  index, order_id = cboe_edgx_equities_orderentry_boe_v2_3.order_id.dissect(buffer, index, packet, parent)

  -- Exec Ref Id: 8 Byte Unsigned Fixed Width Integer
  index, exec_ref_id = cboe_edgx_equities_orderentry_boe_v2_3.exec_ref_id.dissect(buffer, index, packet, parent)

  -- Side: 1 Byte Ascii String Enum with 4 values
  index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)

  -- Base Liquidity Indicator: 1 Byte Ascii String Enum with 4 values
  index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)

  -- Clearing Firm: 4 Byte Ascii String
  index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)

  -- Clearing Account: 4 Byte Ascii String
  index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)

  -- Last Shares: 4 Byte Unsigned Fixed Width Integer
  index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)

  -- Last Px: 8 Byte Signed Fixed Width Integer
  index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)

  -- Corrected Price: 8 Byte Signed Fixed Width Integer
  index, corrected_price = cboe_edgx_equities_orderentry_boe_v2_3.corrected_price.dissect(buffer, index, packet, parent)

  -- Orig Time: 8 Byte Unsigned Fixed Width Integer
  index, orig_time = cboe_edgx_equities_orderentry_boe_v2_3.orig_time.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Trade Cancel Or Correct Optional Fields
  local size_of_trade_cancel_or_correct_optional_fields = message_length - (index - offset) - 8

  -- Trade Cancel Or Correct Optional Fields: Struct of 22 fields
  index, trade_cancel_or_correct_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_optional_fields.dissect(buffer, index, packet, parent, size_of_trade_cancel_or_correct_optional_fields)

  return index
end

-- Dissect: Trade Cancel Or Correct Message
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_trade_cancel_or_correct_message = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.trade_cancel_or_correct_message then
    local range = buffer(offset, size_of_trade_cancel_or_correct_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.fields(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_message)

  return offset + size_of_trade_cancel_or_correct_message
end

-- Ex Destination
cboe_edgx_equities_orderentry_boe_v2_3.ex_destination = {}

-- Size: Ex Destination
cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.size = 1

-- Display: Ex Destination
cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.display = function(value)
  if value == "A" then
    return "Ex Destination: Nyse American (A)"
  end
  if value == "B" then
    return "Ex Destination: Nasdaq Bx (B)"
  end
  if value == "C" then
    return "Ex Destination: Nyse National (C)"
  end
  if value == "H" then
    return "Ex Destination: Miax Pearl (H)"
  end
  if value == "I" then
    return "Ex Destination: Investors Exchange (I)"
  end
  if value == "J" then
    return "Ex Destination: Edga (J)"
  end
  if value == "L" then
    return "Ex Destination: Long Term Stock Exchange (L)"
  end
  if value == "M" then
    return "Ex Destination: Chx (M)"
  end
  if value == "N" then
    return "Ex Destination: Nyse (N)"
  end
  if value == "U" then
    return "Ex Destination: Nyse Arca (U)"
  end
  if value == "Q" then
    return "Ex Destination: Nasdaq (Q)"
  end
  if value == "Q" then
    return "Ex Destination: Memx (Q)"
  end
  if value == "X" then
    return "Ex Destination: Nasdaq Psx (X)"
  end
  if value == "Y" then
    return "Ex Destination: Byx (Y)"
  end
  if value == "Y" then
    return "Ex Destination: Bzx (Y)"
  end

  return "Ex Destination: Unknown("..value..")"
end

-- Dissect: Ex Destination
cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ex_destination, range, value, display)

  return offset + length, value
end

-- Route Delivery Method
cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method = {}

-- Size: Route Delivery Method
cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.size = 3

-- Display: Route Delivery Method
cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.display = function(value)
  return "Route Delivery Method: "..value
end

-- Dissect: Route Delivery Method
cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.route_delivery_method, range, value, display)

  return offset + length, value
end

-- Rout Strategy
cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy = {}

-- Size: Rout Strategy
cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.size = 6

-- Display: Rout Strategy
cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.display = function(value)
  return "Rout Strategy: "..value
end

-- Dissect: Rout Strategy
cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.rout_strategy, range, value, display)

  return offset + length, value
end

-- Routing Inst
cboe_edgx_equities_orderentry_boe_v2_3.routing_inst = {}

-- Size: Routing Inst
cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.size = 4

-- Display: Routing Inst
cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.display = function(value)
  return "Routing Inst: "..value
end

-- Dissect: Routing Inst
cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.routing_inst, range, value, display)

  return offset + length, value
end

-- Stop Px
cboe_edgx_equities_orderentry_boe_v2_3.stop_px = {}

-- Size: Stop Px
cboe_edgx_equities_orderentry_boe_v2_3.stop_px.size = 8

-- Display: Stop Px
cboe_edgx_equities_orderentry_boe_v2_3.stop_px.display = function(value)
  return "Stop Px: "..value
end

-- Dissect: Stop Px
cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.stop_px, range, value, display)

  return offset + length, value
end

-- Echo Text
cboe_edgx_equities_orderentry_boe_v2_3.echo_text = {}

-- Size: Echo Text
cboe_edgx_equities_orderentry_boe_v2_3.echo_text.size = 64

-- Display: Echo Text
cboe_edgx_equities_orderentry_boe_v2_3.echo_text.display = function(value)
  return "Echo Text: "..value
end

-- Dissect: Echo Text
cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.echo_text, range, value, display)

  return offset + length, value
end

-- Fee Code
cboe_edgx_equities_orderentry_boe_v2_3.fee_code = {}

-- Size: Fee Code
cboe_edgx_equities_orderentry_boe_v2_3.fee_code.size = 2

-- Display: Fee Code
cboe_edgx_equities_orderentry_boe_v2_3.fee_code.display = function(value)
  return "Fee Code: "..value
end

-- Dissect: Fee Code
cboe_edgx_equities_orderentry_boe_v2_3.fee_code.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.fee_code.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.fee_code.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.fee_code, range, value, display)

  return offset + length, value
end

-- Ext Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst = {}

-- Size: Ext Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.size = 1

-- Display: Ext Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.display = function(value)
  if value == "N" then
    return "Ext Exec Inst: None (N)"
  end
  if value == "R" then
    return "Ext Exec Inst: Order Eligible For Retail Rebate (R)"
  end
  if value == "X" then
    return "Ext Exec Inst: Retail Priority Order (X)"
  end

  return "Ext Exec Inst: Unknown("..value..")"
end

-- Dissect: Ext Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ext_exec_inst, range, value, display)

  return offset + length, value
end

-- Attributed Quote
cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote = {}

-- Size: Attributed Quote
cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.size = 1

-- Display: Attributed Quote
cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.display = function(value)
  if value == "N" then
    return "Attributed Quote: Do Not Attribute Firm Mpid (N)"
  end
  if value == "Y" then
    return "Attributed Quote: Attribute Firm Mpid (Y)"
  end
  if value == "R" then
    return "Attributed Quote: Attribute Rtal (R)"
  end

  return "Attributed Quote: Unknown("..value..")"
end

-- Dissect: Attributed Quote
cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.attributed_quote, range, value, display)

  return offset + length, value
end

-- Prevent Match
cboe_edgx_equities_orderentry_boe_v2_3.prevent_match = {}

-- Size: Prevent Match
cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.size = 3

-- Display: Prevent Match
cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.display = function(value)
  return "Prevent Match: "..value
end

-- Dissect: Prevent Match
cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.prevent_match, range, value, display)

  return offset + length, value
end

-- Order Qty
cboe_edgx_equities_orderentry_boe_v2_3.order_qty = {}

-- Size: Order Qty
cboe_edgx_equities_orderentry_boe_v2_3.order_qty.size = 4

-- Display: Order Qty
cboe_edgx_equities_orderentry_boe_v2_3.order_qty.display = function(value)
  return "Order Qty: "..value
end

-- Dissect: Order Qty
cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_qty, range, value, display)

  return offset + length, value
end

-- Discretion Amount
cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount = {}

-- Size: Discretion Amount
cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.size = 2

-- Display: Discretion Amount
cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.display = function(value)
  return "Discretion Amount: "..value
end

-- Dissect: Discretion Amount
cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.discretion_amount, range, value, display)

  return offset + length, value
end

-- Max Floor
cboe_edgx_equities_orderentry_boe_v2_3.max_floor = {}

-- Size: Max Floor
cboe_edgx_equities_orderentry_boe_v2_3.max_floor.size = 4

-- Display: Max Floor
cboe_edgx_equities_orderentry_boe_v2_3.max_floor.display = function(value)
  return "Max Floor: "..value
end

-- Dissect: Max Floor
cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.max_floor, range, value, display)

  return offset + length, value
end

-- Display Indicator
cboe_edgx_equities_orderentry_boe_v2_3.display_indicator = {}

-- Size: Display Indicator
cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.size = 1

-- Display: Display Indicator
cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.display = function(value)
  if value == "V" then
    return "Display Indicator: Determined By Port Level Setting (V)"
  end
  if value == "P" then
    return "Display Indicator: Price Adjust (P)"
  end
  if value == "m" then
    return "Display Indicator: Multiple Price Adjust (m)"
  end
  if value == "m" then
    return "Display Indicator: Reject The Order If It Cannot Be Booked And Displayed Without Adjustment (m)"
  end
  if value == "R" then
    return "Display Indicator: Cancel Back The Order If It Cannot Be Booked And Displayed Without Adjustment (R)"
  end
  if value == "r" then
    return "Display Indicator: Hidden Cancel Back The Order If It Cannot Be Booked Without Adjustment (r)"
  end
  if value == "S" then
    return "Display Indicator: Display Price Sliding (S)"
  end
  if value == "L" then
    return "Display Indicator: Display Price Sliding But Reject If Order Crosses The Nbbo On Entry (L)"
  end
  if value == "M" then
    return "Display Indicator: Multiple Display Price Sliding (M)"
  end
  if value == "v" then
    return "Display Indicator: Visible (v)"
  end
  if value == "I" then
    return "Display Indicator: Invisible (I)"
  end
  if value == "N" then
    return "Display Indicator: No Rescrape At Limit (N)"
  end

  return "Display Indicator: Unknown("..value..")"
end

-- Dissect: Display Indicator
cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_indicator, range, value, display)

  return offset + length, value
end

-- Account
cboe_edgx_equities_orderentry_boe_v2_3.account = {}

-- Size: Account
cboe_edgx_equities_orderentry_boe_v2_3.account.size = 16

-- Display: Account
cboe_edgx_equities_orderentry_boe_v2_3.account.display = function(value)
  return "Account: "..value
end

-- Dissect: Account
cboe_edgx_equities_orderentry_boe_v2_3.account.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.account.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.account.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.account, range, value, display)

  return offset + length, value
end

-- Min Qty
cboe_edgx_equities_orderentry_boe_v2_3.min_qty = {}

-- Size: Min Qty
cboe_edgx_equities_orderentry_boe_v2_3.min_qty.size = 4

-- Display: Min Qty
cboe_edgx_equities_orderentry_boe_v2_3.min_qty.display = function(value)
  return "Min Qty: "..value
end

-- Dissect: Min Qty
cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.min_qty, range, value, display)

  return offset + length, value
end

-- Time In Force
cboe_edgx_equities_orderentry_boe_v2_3.time_in_force = {}

-- Size: Time In Force
cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.size = 1

-- Display: Time In Force
cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.display = function(value)
  if value == "0" then
    return "Time In Force: Day (0)"
  end
  if value == "1" then
    return "Time In Force: Gtc (1)"
  end
  if value == "3" then
    return "Time In Force: Ioc (3)"
  end
  if value == "4" then
    return "Time In Force: Fok (4)"
  end
  if value == "5" then
    return "Time In Force: Gtx (5)"
  end
  if value == "6" then
    return "Time In Force: Gtd (6)"
  end
  if value == "E" then
    return "Time In Force: Pre (E)"
  end
  if value == "R" then
    return "Time In Force: Rho (R)"
  end
  if value == "T" then
    return "Time In Force: Ptd (T)"
  end
  if value == "X" then
    return "Time In Force: Ptx (X)"
  end

  return "Time In Force: Unknown("..value..")"
end

-- Dissect: Time In Force
cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.time_in_force, range, value, display)

  return offset + length, value
end

-- Ord Type
cboe_edgx_equities_orderentry_boe_v2_3.ord_type = {}

-- Size: Ord Type
cboe_edgx_equities_orderentry_boe_v2_3.ord_type.size = 1

-- Display: Ord Type
cboe_edgx_equities_orderentry_boe_v2_3.ord_type.display = function(value)
  if value == "1" then
    return "Ord Type: Market (1)"
  end
  if value == "2" then
    return "Ord Type: Limit (2)"
  end
  if value == "3" then
    return "Ord Type: Stop (3)"
  end
  if value == "4" then
    return "Ord Type: Stop Limit (4)"
  end
  if value == "P" then
    return "Ord Type: Pegged (P)"
  end

  return "Ord Type: Unknown("..value..")"
end

-- Dissect: Ord Type
cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.ord_type, range, value, display)

  return offset + length, value
end

-- Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.exec_inst = {}

-- Size: Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.size = 1

-- Display: Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.display = function(value)
  if value == "f" then
    return "Exec Inst: Intermarket Sweep (f)"
  end
  if value == "P" then
    return "Exec Inst: Market Peg (P)"
  end
  if value == "Q" then
    return "Exec Inst: Market Marker Peg (Q)"
  end
  if value == "Q" then
    return "Exec Inst: Primary Peg (Q)"
  end
  if value == "U" then
    return "Exec Inst: Supplemental Peg Order (U)"
  end
  if value == "M" then
    return "Exec Inst: Midpoint Peg (M)"
  end
  if value == "m" then
    return "Exec Inst: Midpoint Peg But No Match On Nbbo Lock (m)"
  end
  if value == "L" then
    return "Exec Inst: Alternate Midpoint (L)"
  end
  if value == "d" then
    return "Exec Inst: Midpoint Discretionary Order (d)"
  end
  if value == "o" then
    return "Exec Inst: Listing Market Opening (o)"
  end
  if value == "c" then
    return "Exec Inst: Listing Market Close (c)"
  end
  if value == "a" then
    return "Exec Inst: Both Listing Market Open And Close (a)"
  end

  return "Exec Inst: Unknown("..value..")"
end

-- Dissect: Exec Inst
cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_inst, range, value, display)

  return offset + length, value
end

-- Price
cboe_edgx_equities_orderentry_boe_v2_3.price = {}

-- Size: Price
cboe_edgx_equities_orderentry_boe_v2_3.price.size = 8

-- Display: Price
cboe_edgx_equities_orderentry_boe_v2_3.price.display = function(value)
  return "Price: "..value
end

-- Dissect: Price
cboe_edgx_equities_orderentry_boe_v2_3.price.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.price.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.price.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.price, range, value, display)

  return offset + length, value
end

-- Peg Difference
cboe_edgx_equities_orderentry_boe_v2_3.peg_difference = {}

-- Size: Peg Difference
cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.size = 8

-- Display: Peg Difference
cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.display = function(value)
  return "Peg Difference: "..value
end

-- Dissect: Peg Difference
cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.peg_difference, range, value, display)

  return offset + length, value
end

-- Order Execution Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_1_exists = {}

-- Order Execution Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_2_exists = {}

-- Order Execution Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_3_exists = {}

-- Order Execution Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_4_exists = {}

-- Order Execution Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_5_exists = {}

-- Order Execution Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_6_exists = {}

-- Order Execution Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_7_exists = {}

-- Order Execution Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_reserved_bit_8_exists = {}

-- Order Execution Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17 = {}

-- Size: Order Execution Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.size = 1

-- Display: Order Execution Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_17, range, display)

  if show.order_execution_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16 = {}

-- Size: Order Execution Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.size = 1

-- Display: Order Execution Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_16, range, display)

  if show.order_execution_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15 = {}

-- Size: Order Execution Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.size = 1

-- Display: Order Execution Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_15, range, display)

  if show.order_execution_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14 = {}

-- Size: Order Execution Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.size = 1

-- Display: Order Execution Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_14, range, display)

  if show.order_execution_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13 = {}

-- Size: Order Execution Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.size = 1

-- Display: Order Execution Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_13, range, display)

  if show.order_execution_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12 = {}

-- Size: Order Execution Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.size = 1

-- Display: Order Execution Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_12, range, display)

  if show.order_execution_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11 = {}

-- Size: Order Execution Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.size = 1

-- Display: Order Execution Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_11, range, display)

  if show.order_execution_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10 = {}

-- Size: Order Execution Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.size = 1

-- Display: Order Execution Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_10, range, display)

  if show.order_execution_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9 = {}

-- Size: Order Execution Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.size = 1

-- Display: Order Execution Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_9, range, display)

  if show.order_execution_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Fee Code Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_fee_code_exists = {}

-- Order Execution Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_echo_text_exists = {}

-- Order Execution Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_stop_px_exists = {}

-- Order Execution Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_routing_inst_exists = {}

-- Order Execution Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_rout_strategy_exists = {}

-- Order Execution Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_route_delivery_method_exists = {}

-- Order Execution Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_ex_destination_exists = {}

-- Order Execution Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8 = {}

-- Size: Order Execution Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.size = 1

-- Display: Order Execution Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Ex Destination Exists|"
  end
  -- Is Order Execution Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Route Delivery Method Exists|"
  end
  -- Is Order Execution Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Rout Strategy Exists|"
  end
  -- Is Order Execution Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Routing Inst Exists|"
  end
  -- Is Order Execution Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Stop Px Exists|"
  end
  -- Is Order Execution Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Echo Text Exists|"
  end
  -- Is Order Execution Fee Code Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Fee Code Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ex_destination_exists, buffer(offset, 1))

  -- Order Execution Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_route_delivery_method_exists, buffer(offset, 1))

  -- Order Execution Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_rout_strategy_exists, buffer(offset, 1))

  -- Order Execution Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_routing_inst_exists, buffer(offset, 1))

  -- Order Execution Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_stop_px_exists, buffer(offset, 1))

  -- Order Execution Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_echo_text_exists, buffer(offset, 1))

  -- Order Execution Fee Code Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_fee_code_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_8, range, display)

  if show.order_execution_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7 = {}

-- Size: Order Execution Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.size = 1

-- Display: Order Execution Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_7, range, display)

  if show.order_execution_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_attributed_quote_exists = {}

-- Order Execution Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_ext_exec_inst_exists = {}

-- Order Execution Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6 = {}

-- Size: Order Execution Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.size = 1

-- Display: Order Execution Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Ext Exec Inst Exists|"
  end
  -- Is Order Execution Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Attributed Quote Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Execution Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_attributed_quote_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_6, range, display)

  if show.order_execution_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5 = {}

-- Size: Order Execution Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.size = 1

-- Display: Order Execution Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_5, range, display)

  if show.order_execution_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4 = {}

-- Size: Order Execution Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.size = 1

-- Display: Order Execution Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Reserved Bit 7 Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Reserved Bit 2 Exists|"
  end
  -- Is Order Execution Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_4, range, display)

  if show.order_execution_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_account_exists = {}

-- Order Execution Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_clearing_firm_exists = {}

-- Order Execution Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_clearing_account_exists = {}

-- Order Execution Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_display_indicator_exists = {}

-- Order Execution Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_max_floor_exists = {}

-- Order Execution Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_discretion_amount_exists = {}

-- Order Execution Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_order_qty_exists = {}

-- Order Execution Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_prevent_match_exists = {}

-- Order Execution Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3 = {}

-- Size: Order Execution Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.size = 1

-- Display: Order Execution Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Prevent Match Exists|"
  end
  -- Is Order Execution Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Order Qty Exists|"
  end
  -- Is Order Execution Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Discretion Amount Exists|"
  end
  -- Is Order Execution Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Max Floor Exists|"
  end
  -- Is Order Execution Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Display Indicator Exists|"
  end
  -- Is Order Execution Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Clearing Account Exists|"
  end
  -- Is Order Execution Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Clearing Firm Exists|"
  end
  -- Is Order Execution Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Execution Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_prevent_match_exists, buffer(offset, 1))

  -- Order Execution Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_order_qty_exists, buffer(offset, 1))

  -- Order Execution Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_discretion_amount_exists, buffer(offset, 1))

  -- Order Execution Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_max_floor_exists, buffer(offset, 1))

  -- Order Execution Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_display_indicator_exists, buffer(offset, 1))

  -- Order Execution Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_clearing_account_exists, buffer(offset, 1))

  -- Order Execution Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_clearing_firm_exists, buffer(offset, 1))

  -- Order Execution Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_account_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_3, range, display)

  if show.order_execution_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_symbol_exists = {}

-- Order Execution Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_symbol_sfx_exists = {}

-- Order Execution Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_capacity_exists = {}

-- Order Execution Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2 = {}

-- Size: Order Execution Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.size = 1

-- Display: Order Execution Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Capacity Exists|"
  end
  -- Is Order Execution Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Reserved Bit 6 Exists|"
  end
  -- Is Order Execution Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Reserved Bit 5 Exists|"
  end
  -- Is Order Execution Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Reserved Bit 4 Exists|"
  end
  -- Is Order Execution Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Reserved Bit 3 Exists|"
  end
  -- Is Order Execution Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Symbol Sfx Exists|"
  end
  -- Is Order Execution Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_capacity_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Execution Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Execution Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_symbol_sfx_exists, buffer(offset, 1))

  -- Order Execution Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_2, range, display)

  if show.order_execution_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_side_exists = {}

-- Order Execution Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_peg_difference_exists = {}

-- Order Execution Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_price_exists = {}

-- Order Execution Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_exec_inst_exists = {}

-- Order Execution Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_ord_type_exists = {}

-- Order Execution Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_time_in_force_exists = {}

-- Order Execution Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_min_qty_exists = {}

-- Order Execution Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1 = {}

-- Size: Order Execution Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.size = 1

-- Display: Order Execution Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Execution Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Execution Reserved Bit 8 Exists|"
  end
  -- Is Order Execution Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Execution Min Qty Exists|"
  end
  -- Is Order Execution Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Execution Time In Force Exists|"
  end
  -- Is Order Execution Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Execution Ord Type Exists|"
  end
  -- Is Order Execution Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Execution Exec Inst Exists|"
  end
  -- Is Order Execution Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Execution Price Exists|"
  end
  -- Is Order Execution Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Execution Peg Difference Exists|"
  end
  -- Is Order Execution Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Execution Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Execution Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Execution Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Execution Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_min_qty_exists, buffer(offset, 1))

  -- Order Execution Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_time_in_force_exists, buffer(offset, 1))

  -- Order Execution Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_ord_type_exists, buffer(offset, 1))

  -- Order Execution Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_exec_inst_exists, buffer(offset, 1))

  -- Order Execution Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_price_exists, buffer(offset, 1))

  -- Order Execution Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_peg_difference_exists, buffer(offset, 1))

  -- Order Execution Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_side_exists, buffer(offset, 1))
end

-- Dissect: Order Execution Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_byte_1, range, display)

  if show.order_execution_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Execution Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count = {}

-- Size: Order Execution Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.size = 1

-- Display: Order Execution Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.display = function(value)
  return "Order Execution Bitfield Count: "..value
end

-- Dissect: Order Execution Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Execution Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields = {}

-- Display: Order Execution Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Execution Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_execution_optional_fields)
  local index = offset

  -- Order Execution Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_execution_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Execution Byte 1
  local order_execution_byte_1_exists = order_execution_bitfield_count >= 1

  -- Runtime optional field: Order Execution Byte 1
  if order_execution_byte_1_exists then

    -- Order Execution Byte 1: Struct of 8 fields
    index, order_execution_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 2
  local order_execution_byte_2_exists = order_execution_bitfield_count >= 2

  -- Runtime optional field: Order Execution Byte 2
  if order_execution_byte_2_exists then

    -- Order Execution Byte 2: Struct of 8 fields
    index, order_execution_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 3
  local order_execution_byte_3_exists = order_execution_bitfield_count >= 3

  -- Runtime optional field: Order Execution Byte 3
  if order_execution_byte_3_exists then

    -- Order Execution Byte 3: Struct of 8 fields
    index, order_execution_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 4
  local order_execution_byte_4_exists = order_execution_bitfield_count >= 4

  -- Runtime optional field: Order Execution Byte 4
  if order_execution_byte_4_exists then

    -- Order Execution Byte 4: Struct of 8 fields
    index, order_execution_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 5
  local order_execution_byte_5_exists = order_execution_bitfield_count >= 5

  -- Runtime optional field: Order Execution Byte 5
  if order_execution_byte_5_exists then

    -- Order Execution Byte 5: Struct of 8 fields
    index, order_execution_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 6
  local order_execution_byte_6_exists = order_execution_bitfield_count >= 6

  -- Runtime optional field: Order Execution Byte 6
  if order_execution_byte_6_exists then

    -- Order Execution Byte 6: Struct of 8 fields
    index, order_execution_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 7
  local order_execution_byte_7_exists = order_execution_bitfield_count >= 7

  -- Runtime optional field: Order Execution Byte 7
  if order_execution_byte_7_exists then

    -- Order Execution Byte 7: Struct of 8 fields
    index, order_execution_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 8
  local order_execution_byte_8_exists = order_execution_bitfield_count >= 8

  -- Runtime optional field: Order Execution Byte 8
  if order_execution_byte_8_exists then

    -- Order Execution Byte 8: Struct of 8 fields
    index, order_execution_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 9
  local order_execution_byte_9_exists = order_execution_bitfield_count >= 9

  -- Runtime optional field: Order Execution Byte 9
  if order_execution_byte_9_exists then

    -- Order Execution Byte 9: Struct of 8 fields
    index, order_execution_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 10
  local order_execution_byte_10_exists = order_execution_bitfield_count >= 10

  -- Runtime optional field: Order Execution Byte 10
  if order_execution_byte_10_exists then

    -- Order Execution Byte 10: Struct of 8 fields
    index, order_execution_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 11
  local order_execution_byte_11_exists = order_execution_bitfield_count >= 11

  -- Runtime optional field: Order Execution Byte 11
  if order_execution_byte_11_exists then

    -- Order Execution Byte 11: Struct of 8 fields
    index, order_execution_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 12
  local order_execution_byte_12_exists = order_execution_bitfield_count >= 12

  -- Runtime optional field: Order Execution Byte 12
  if order_execution_byte_12_exists then

    -- Order Execution Byte 12: Struct of 8 fields
    index, order_execution_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 13
  local order_execution_byte_13_exists = order_execution_bitfield_count >= 13

  -- Runtime optional field: Order Execution Byte 13
  if order_execution_byte_13_exists then

    -- Order Execution Byte 13: Struct of 8 fields
    index, order_execution_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 14
  local order_execution_byte_14_exists = order_execution_bitfield_count >= 14

  -- Runtime optional field: Order Execution Byte 14
  if order_execution_byte_14_exists then

    -- Order Execution Byte 14: Struct of 8 fields
    index, order_execution_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 15
  local order_execution_byte_15_exists = order_execution_bitfield_count >= 15

  -- Runtime optional field: Order Execution Byte 15
  if order_execution_byte_15_exists then

    -- Order Execution Byte 15: Struct of 8 fields
    index, order_execution_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 16
  local order_execution_byte_16_exists = order_execution_bitfield_count >= 16

  -- Runtime optional field: Order Execution Byte 16
  if order_execution_byte_16_exists then

    -- Order Execution Byte 16: Struct of 8 fields
    index, order_execution_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 17
  local order_execution_byte_17_exists = order_execution_bitfield_count >= 17

  -- Runtime optional field: Order Execution Byte 17
  if order_execution_byte_17_exists then

    -- Order Execution Byte 17: Struct of 8 fields
    index, order_execution_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_execution_bitfield_count >= 1 and order_execution_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_execution_bitfield_count >= 2 and order_execution_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_execution_bitfield_count >= 2 and order_execution_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = order_execution_bitfield_count >= 2 and order_execution_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_execution_bitfield_count >= 3 and order_execution_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_execution_bitfield_count >= 6 and order_execution_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_execution_bitfield_count >= 6 and order_execution_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Fee Code
  local fee_code_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(7) > 0

  -- Runtime optional field: Fee Code
  if fee_code_exists then
    index, fee_code = cboe_edgx_equities_orderentry_boe_v2_3.fee_code.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_execution_bitfield_count >= 8 and order_execution_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Execution Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_execution_optional_fields)
  local index = offset + size_of_order_execution_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_execution_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.fields(buffer, offset, packet, parent, size_of_order_execution_optional_fields)
    parent:set_len(size_of_order_execution_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.fields(buffer, offset, packet, parent, size_of_order_execution_optional_fields)

    return index
  end
end

-- Contra Broker
cboe_edgx_equities_orderentry_boe_v2_3.contra_broker = {}

-- Size: Contra Broker
cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.size = 4

-- Display: Contra Broker
cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.display = function(value)
  return "Contra Broker: "..value
end

-- Dissect: Contra Broker
cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.contra_broker, range, value, display)

  return offset + length, value
end

-- Leaves Qty
cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty = {}

-- Size: Leaves Qty
cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.size = 4

-- Display: Leaves Qty
cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.display = function(value)
  return "Leaves Qty: "..value
end

-- Dissect: Leaves Qty
cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.leaves_qty, range, value, display)

  return offset + length, value
end

-- Exec Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_id = {}

-- Size: Exec Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_id.size = 8

-- Display: Exec Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_id.display = function(value)
  return "Exec Id: "..value
end

-- Dissect: Exec Id
cboe_edgx_equities_orderentry_boe_v2_3.exec_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.exec_id.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.exec_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.exec_id, range, value, display)

  return offset + length, value
end

-- Order Execution Message
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message = {}

-- Read runtime size of: Order Execution Message
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Execution Message
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Execution Message
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.fields = function(buffer, offset, packet, parent, size_of_order_execution_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Exec Id: 8 Byte Unsigned Fixed Width Integer
  index, exec_id = cboe_edgx_equities_orderentry_boe_v2_3.exec_id.dissect(buffer, index, packet, parent)

  -- Last Shares: 4 Byte Unsigned Fixed Width Integer
  index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)

  -- Last Px: 8 Byte Signed Fixed Width Integer
  index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)

  -- Leaves Qty: 4 Byte Unsigned Fixed Width Integer
  index, leaves_qty = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect(buffer, index, packet, parent)

  -- Base Liquidity Indicator: 1 Byte Ascii String Enum with 4 values
  index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)

  -- Sub Liquidity Indicator: 1 Byte Ascii String Enum with 6 values
  index, sub_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect(buffer, index, packet, parent)

  -- Contra Broker: 4 Byte Ascii String
  index, contra_broker = cboe_edgx_equities_orderentry_boe_v2_3.contra_broker.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Execution Optional Fields
  local size_of_order_execution_optional_fields = message_length - (index - offset) - 8

  -- Order Execution Optional Fields: Struct of 45 fields
  index, order_execution_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_optional_fields.dissect(buffer, index, packet, parent, size_of_order_execution_optional_fields)

  return index
end

-- Dissect: Order Execution Message
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_execution_message = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_execution_message then
    local range = buffer(offset, size_of_order_execution_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.fields(buffer, offset, packet, parent, size_of_order_execution_message)

  return offset + size_of_order_execution_message
end

-- Cancel Rejected Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_1_exists = {}

-- Cancel Rejected Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_2_exists = {}

-- Cancel Rejected Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_3_exists = {}

-- Cancel Rejected Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_4_exists = {}

-- Cancel Rejected Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_5_exists = {}

-- Cancel Rejected Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_6_exists = {}

-- Cancel Rejected Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_7_exists = {}

-- Cancel Rejected Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_reserved_bit_8_exists = {}

-- Cancel Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17 = {}

-- Size: Cancel Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.size = 1

-- Display: Cancel Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_17, range, display)

  if show.cancel_rejected_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16 = {}

-- Size: Cancel Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.size = 1

-- Display: Cancel Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_16, range, display)

  if show.cancel_rejected_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15 = {}

-- Size: Cancel Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.size = 1

-- Display: Cancel Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_15, range, display)

  if show.cancel_rejected_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14 = {}

-- Size: Cancel Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.size = 1

-- Display: Cancel Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_14, range, display)

  if show.cancel_rejected_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13 = {}

-- Size: Cancel Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.size = 1

-- Display: Cancel Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_13, range, display)

  if show.cancel_rejected_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12 = {}

-- Size: Cancel Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.size = 1

-- Display: Cancel Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_12, range, display)

  if show.cancel_rejected_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11 = {}

-- Size: Cancel Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.size = 1

-- Display: Cancel Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_11, range, display)

  if show.cancel_rejected_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10 = {}

-- Size: Cancel Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.size = 1

-- Display: Cancel Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_10, range, display)

  if show.cancel_rejected_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9 = {}

-- Size: Cancel Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.size = 1

-- Display: Cancel Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_9, range, display)

  if show.cancel_rejected_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_echo_text_exists = {}

-- Cancel Rejected Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_stop_px_exists = {}

-- Cancel Rejected Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_rout_strategy_exists = {}

-- Cancel Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8 = {}

-- Size: Cancel Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.size = 1

-- Display: Cancel Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Rout Strategy Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Stop Px Exists|"
  end
  -- Is Cancel Rejected Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Echo Text Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_rout_strategy_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_stop_px_exists, buffer(offset, 1))

  -- Cancel Rejected Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_echo_text_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_8, range, display)

  if show.cancel_rejected_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7 = {}

-- Size: Cancel Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.size = 1

-- Display: Cancel Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_7, range, display)

  if show.cancel_rejected_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6 = {}

-- Size: Cancel Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.size = 1

-- Display: Cancel Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_6, range, display)

  if show.cancel_rejected_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5 = {}

-- Size: Cancel Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.size = 1

-- Display: Cancel Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_5, range, display)

  if show.cancel_rejected_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4 = {}

-- Size: Cancel Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.size = 1

-- Display: Cancel Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_4, range, display)

  if show.cancel_rejected_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3 = {}

-- Size: Cancel Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.size = 1

-- Display: Cancel Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Reserved Bit 7 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Reserved Bit 2 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_3, range, display)

  if show.cancel_rejected_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_symbol_exists = {}

-- Cancel Rejected Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_symbol_sfx_exists = {}

-- Cancel Rejected Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_capacity_exists = {}

-- Cancel Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2 = {}

-- Size: Cancel Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.size = 1

-- Display: Cancel Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Capacity Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Reserved Bit 6 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Reserved Bit 5 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Reserved Bit 4 Exists|"
  end
  -- Is Cancel Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Reserved Bit 3 Exists|"
  end
  -- Is Cancel Rejected Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Symbol Sfx Exists|"
  end
  -- Is Cancel Rejected Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_capacity_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Rejected Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_symbol_sfx_exists, buffer(offset, 1))

  -- Cancel Rejected Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_symbol_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_2, range, display)

  if show.cancel_rejected_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_side_exists = {}

-- Cancel Rejected Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_peg_difference_exists = {}

-- Cancel Rejected Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_price_exists = {}

-- Cancel Rejected Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_exec_inst_exists = {}

-- Cancel Rejected Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_ord_type_exists = {}

-- Cancel Rejected Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_time_in_force_exists = {}

-- Cancel Rejected Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_min_qty_exists = {}

-- Cancel Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1 = {}

-- Size: Cancel Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.size = 1

-- Display: Cancel Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Rejected Reserved Bit 8 Exists|"
  end
  -- Is Cancel Rejected Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Rejected Min Qty Exists|"
  end
  -- Is Cancel Rejected Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Rejected Time In Force Exists|"
  end
  -- Is Cancel Rejected Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Rejected Ord Type Exists|"
  end
  -- Is Cancel Rejected Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Rejected Exec Inst Exists|"
  end
  -- Is Cancel Rejected Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Rejected Price Exists|"
  end
  -- Is Cancel Rejected Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Rejected Peg Difference Exists|"
  end
  -- Is Cancel Rejected Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Rejected Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.bits = function(buffer, offset, packet, parent)

  -- Cancel Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Rejected Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_min_qty_exists, buffer(offset, 1))

  -- Cancel Rejected Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_time_in_force_exists, buffer(offset, 1))

  -- Cancel Rejected Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_ord_type_exists, buffer(offset, 1))

  -- Cancel Rejected Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_exec_inst_exists, buffer(offset, 1))

  -- Cancel Rejected Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_price_exists, buffer(offset, 1))

  -- Cancel Rejected Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_peg_difference_exists, buffer(offset, 1))

  -- Cancel Rejected Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_side_exists, buffer(offset, 1))
end

-- Dissect: Cancel Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_byte_1, range, display)

  if show.cancel_rejected_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count = {}

-- Size: Cancel Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.size = 1

-- Display: Cancel Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.display = function(value)
  return "Cancel Rejected Bitfield Count: "..value
end

-- Dissect: Cancel Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_bitfield_count, range, value, display)

  return offset + length, value
end

-- Cancel Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields = {}

-- Display: Cancel Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.fields = function(buffer, offset, packet, parent, size_of_cancel_rejected_optional_fields)
  local index = offset

  -- Cancel Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, cancel_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Cancel Rejected Byte 1
  local cancel_rejected_byte_1_exists = cancel_rejected_bitfield_count >= 1

  -- Runtime optional field: Cancel Rejected Byte 1
  if cancel_rejected_byte_1_exists then

    -- Cancel Rejected Byte 1: Struct of 8 fields
    index, cancel_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 2
  local cancel_rejected_byte_2_exists = cancel_rejected_bitfield_count >= 2

  -- Runtime optional field: Cancel Rejected Byte 2
  if cancel_rejected_byte_2_exists then

    -- Cancel Rejected Byte 2: Struct of 8 fields
    index, cancel_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 3
  local cancel_rejected_byte_3_exists = cancel_rejected_bitfield_count >= 3

  -- Runtime optional field: Cancel Rejected Byte 3
  if cancel_rejected_byte_3_exists then

    -- Cancel Rejected Byte 3: Struct of 8 fields
    index, cancel_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 4
  local cancel_rejected_byte_4_exists = cancel_rejected_bitfield_count >= 4

  -- Runtime optional field: Cancel Rejected Byte 4
  if cancel_rejected_byte_4_exists then

    -- Cancel Rejected Byte 4: Struct of 8 fields
    index, cancel_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 5
  local cancel_rejected_byte_5_exists = cancel_rejected_bitfield_count >= 5

  -- Runtime optional field: Cancel Rejected Byte 5
  if cancel_rejected_byte_5_exists then

    -- Cancel Rejected Byte 5: Struct of 8 fields
    index, cancel_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 6
  local cancel_rejected_byte_6_exists = cancel_rejected_bitfield_count >= 6

  -- Runtime optional field: Cancel Rejected Byte 6
  if cancel_rejected_byte_6_exists then

    -- Cancel Rejected Byte 6: Struct of 8 fields
    index, cancel_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 7
  local cancel_rejected_byte_7_exists = cancel_rejected_bitfield_count >= 7

  -- Runtime optional field: Cancel Rejected Byte 7
  if cancel_rejected_byte_7_exists then

    -- Cancel Rejected Byte 7: Struct of 8 fields
    index, cancel_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 8
  local cancel_rejected_byte_8_exists = cancel_rejected_bitfield_count >= 8

  -- Runtime optional field: Cancel Rejected Byte 8
  if cancel_rejected_byte_8_exists then

    -- Cancel Rejected Byte 8: Struct of 8 fields
    index, cancel_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 9
  local cancel_rejected_byte_9_exists = cancel_rejected_bitfield_count >= 9

  -- Runtime optional field: Cancel Rejected Byte 9
  if cancel_rejected_byte_9_exists then

    -- Cancel Rejected Byte 9: Struct of 8 fields
    index, cancel_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 10
  local cancel_rejected_byte_10_exists = cancel_rejected_bitfield_count >= 10

  -- Runtime optional field: Cancel Rejected Byte 10
  if cancel_rejected_byte_10_exists then

    -- Cancel Rejected Byte 10: Struct of 8 fields
    index, cancel_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 11
  local cancel_rejected_byte_11_exists = cancel_rejected_bitfield_count >= 11

  -- Runtime optional field: Cancel Rejected Byte 11
  if cancel_rejected_byte_11_exists then

    -- Cancel Rejected Byte 11: Struct of 8 fields
    index, cancel_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 12
  local cancel_rejected_byte_12_exists = cancel_rejected_bitfield_count >= 12

  -- Runtime optional field: Cancel Rejected Byte 12
  if cancel_rejected_byte_12_exists then

    -- Cancel Rejected Byte 12: Struct of 8 fields
    index, cancel_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 13
  local cancel_rejected_byte_13_exists = cancel_rejected_bitfield_count >= 13

  -- Runtime optional field: Cancel Rejected Byte 13
  if cancel_rejected_byte_13_exists then

    -- Cancel Rejected Byte 13: Struct of 8 fields
    index, cancel_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 14
  local cancel_rejected_byte_14_exists = cancel_rejected_bitfield_count >= 14

  -- Runtime optional field: Cancel Rejected Byte 14
  if cancel_rejected_byte_14_exists then

    -- Cancel Rejected Byte 14: Struct of 8 fields
    index, cancel_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 15
  local cancel_rejected_byte_15_exists = cancel_rejected_bitfield_count >= 15

  -- Runtime optional field: Cancel Rejected Byte 15
  if cancel_rejected_byte_15_exists then

    -- Cancel Rejected Byte 15: Struct of 8 fields
    index, cancel_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 16
  local cancel_rejected_byte_16_exists = cancel_rejected_bitfield_count >= 16

  -- Runtime optional field: Cancel Rejected Byte 16
  if cancel_rejected_byte_16_exists then

    -- Cancel Rejected Byte 16: Struct of 8 fields
    index, cancel_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 17
  local cancel_rejected_byte_17_exists = cancel_rejected_bitfield_count >= 17

  -- Runtime optional field: Cancel Rejected Byte 17
  if cancel_rejected_byte_17_exists then

    -- Cancel Rejected Byte 17: Struct of 8 fields
    index, cancel_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = cancel_rejected_bitfield_count >= 1 and cancel_rejected_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = cancel_rejected_bitfield_count >= 2 and cancel_rejected_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = cancel_rejected_bitfield_count >= 2 and cancel_rejected_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = cancel_rejected_bitfield_count >= 2 and cancel_rejected_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = cancel_rejected_bitfield_count >= 8 and cancel_rejected_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = cancel_rejected_bitfield_count >= 8 and cancel_rejected_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = cancel_rejected_bitfield_count >= 8 and cancel_rejected_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Cancel Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_cancel_rejected_optional_fields)
  local index = offset + size_of_cancel_rejected_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.cancel_rejected_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_cancel_rejected_optional_fields)
    parent:set_len(size_of_cancel_rejected_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_cancel_rejected_optional_fields)

    return index
  end
end

-- Cancel Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason = {}

-- Size: Cancel Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.size = 1

-- Display: Cancel Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.display = function(value)
  if value == "A" then
    return "Cancel Reject Reason: Admin (A)"
  end
  if value == "D" then
    return "Cancel Reject Reason: Duplicate Identifier (D)"
  end
  if value == "E" then
    return "Cancel Reject Reason: Size Reduction Due To Swp Restatement (E)"
  end
  if value == "F" then
    return "Cancel Reject Reason: Failed To Quote (F)"
  end
  if value == "H" then
    return "Cancel Reject Reason: Halted (H)"
  end
  if value == "I" then
    return "Cancel Reject Reason: Incorrect Data Center (I)"
  end
  if value == "J" then
    return "Cancel Reject Reason: Too Late To Cancel (J)"
  end
  if value == "K" then
    return "Cancel Reject Reason: Order Rate Threshold Exceeded (K)"
  end
  if value == "L" then
    return "Cancel Reject Reason: Order Would Lock Or Cross Nbbo (L)"
  end
  if value == "M" then
    return "Cancel Reject Reason: Order Size Exceeded (M)"
  end
  if value == "N" then
    return "Cancel Reject Reason: Ran Out Of Liquidity To Execute Against (N)"
  end
  if value == "O" then
    return "Cancel Reject Reason: Cl Ord Id Doesnt Match A Known Order (O)"
  end
  if value == "P" then
    return "Cancel Reject Reason: Cant Modify An Order That Is Pending Fill (P)"
  end
  if value == "Q" then
    return "Cancel Reject Reason: Waiting For First Trade (Q)"
  end
  if value == "R" then
    return "Cancel Reject Reason: Routing Unavailable (R)"
  end
  if value == "S" then
    return "Cancel Reject Reason: Short Sale Price Violation (S)"
  end
  if value == "T" then
    return "Cancel Reject Reason: Fill Would Trade Through The Nbbo (T)"
  end
  if value == "U" then
    return "Cancel Reject Reason: User Requested (U)"
  end
  if value == "V" then
    return "Cancel Reject Reason: Would Wash (V)"
  end
  if value == "W" then
    return "Cancel Reject Reason: Add Liquidity Only Order Would Remove (W)"
  end
  if value == "X" then
    return "Cancel Reject Reason: Order Expired (X)"
  end
  if value == "Y" then
    return "Cancel Reject Reason: Symbol Not Supported (Y)"
  end
  if value == "Z" then
    return "Cancel Reject Reason: Unforeseen Reason (Z)"
  end
  if value == "f" then
    return "Cancel Reject Reason: Risk Management Mpid Or Custom Group Id Level (f)"
  end
  if value == "m" then
    return "Cancel Reject Reason: Market Access Risk Limit Exceeded (m)"
  end
  if value == "o" then
    return "Cancel Reject Reason: Max Open Orders Count Exceeded (o)"
  end
  if value == "r" then
    return "Cancel Reject Reason: Reserve Reload (r)"
  end
  if value == "s" then
    return "Cancel Reject Reason: Risk Management Risk Root Level (s)"
  end
  if value == "u" then
    return "Cancel Reject Reason: Limit Up Limit Down (u)"
  end
  if value == "w" then
    return "Cancel Reject Reason: Would Remove On Unslide (w)"
  end
  if value == "x" then
    return "Cancel Reject Reason: Crossed Market (x)"
  end
  if value == "y" then
    return "Cancel Reject Reason: Order Received By Cboe During Replay (y)"
  end

  return "Cancel Reject Reason: Unknown("..value..")"
end

-- Dissect: Cancel Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_reject_reason, range, value, display)

  return offset + length, value
end

-- Cancel Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message = {}

-- Read runtime size of: Cancel Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Cancel Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.fields = function(buffer, offset, packet, parent, size_of_cancel_rejected_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Cancel Reject Reason: 1 Byte Ascii String Enum with 32 values
  index, cancel_reject_reason = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reject_reason.dissect(buffer, index, packet, parent)

  -- Text: 60 Byte Ascii String
  index, text = cboe_edgx_equities_orderentry_boe_v2_3.text.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Cancel Rejected Optional Fields
  local size_of_cancel_rejected_optional_fields = message_length - (index - offset) - 8

  -- Cancel Rejected Optional Fields: Struct of 31 fields
  index, cancel_rejected_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_optional_fields.dissect(buffer, index, packet, parent, size_of_cancel_rejected_optional_fields)

  return index
end

-- Dissect: Cancel Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_cancel_rejected_message = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.cancel_rejected_message then
    local range = buffer(offset, size_of_cancel_rejected_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.fields(buffer, offset, packet, parent, size_of_cancel_rejected_message)

  return offset + size_of_cancel_rejected_message
end

-- Secondary Order Id
cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id = {}

-- Size: Secondary Order Id
cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.size = 8

-- Display: Secondary Order Id
cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.display = function(value)
  return "Secondary Order Id: "..value
end

-- Dissect: Secondary Order Id
cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.secondary_order_id, range, value, display)

  return offset + length, value
end

-- Expire Time
cboe_edgx_equities_orderentry_boe_v2_3.expire_time = {}

-- Size: Expire Time
cboe_edgx_equities_orderentry_boe_v2_3.expire_time.size = 8

-- Display: Expire Time
cboe_edgx_equities_orderentry_boe_v2_3.expire_time.display = function(value)
  return "Expire Time: "..value
end

-- Dissect: Expire Time
cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.expire_time, range, value, display)

  return offset + length, value
end

-- Working Price
cboe_edgx_equities_orderentry_boe_v2_3.working_price = {}

-- Size: Working Price
cboe_edgx_equities_orderentry_boe_v2_3.working_price.size = 8

-- Display: Working Price
cboe_edgx_equities_orderentry_boe_v2_3.working_price.display = function(value)
  return "Working Price: "..value
end

-- Dissect: Working Price
cboe_edgx_equities_orderentry_boe_v2_3.working_price.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.working_price.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.working_price.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.working_price, range, value, display)

  return offset + length, value
end

-- Display Price
cboe_edgx_equities_orderentry_boe_v2_3.display_price = {}

-- Size: Display Price
cboe_edgx_equities_orderentry_boe_v2_3.display_price.size = 8

-- Display: Display Price
cboe_edgx_equities_orderentry_boe_v2_3.display_price.display = function(value)
  return "Display Price: "..value
end

-- Dissect: Display Price
cboe_edgx_equities_orderentry_boe_v2_3.display_price.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.display_price.size
  local range = buffer(offset, length)
  local value = range:le_int64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.display_price.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_price, range, value, display)

  return offset + length, value
end

-- Orig Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id = {}

-- Size: Orig Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.size = 20

-- Display: Orig Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.display = function(value)
  return "Orig Cl Ord Id: "..value
end

-- Dissect: Orig Cl Ord Id
cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.orig_cl_ord_id, range, value, display)

  return offset + length, value
end

-- Order Cancelled Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_1_exists = {}

-- Order Cancelled Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_2_exists = {}

-- Order Cancelled Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_3_exists = {}

-- Order Cancelled Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_4_exists = {}

-- Order Cancelled Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_5_exists = {}

-- Order Cancelled Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_6_exists = {}

-- Order Cancelled Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_7_exists = {}

-- Order Cancelled Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_reserved_bit_8_exists = {}

-- Order Cancelled Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17 = {}

-- Size: Order Cancelled Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.size = 1

-- Display: Order Cancelled Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_17, range, display)

  if show.order_cancelled_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Mass Cancelled Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_mass_cancelled_exists = {}

-- Order Cancelled Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16 = {}

-- Size: Order Cancelled Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.size = 1

-- Display: Order Cancelled Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Mass Cancelled Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_mass_cancelled_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_16, range, display)

  if show.order_cancelled_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15 = {}

-- Size: Order Cancelled Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.size = 1

-- Display: Order Cancelled Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Mass Cancelled Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_mass_cancelled_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_15, range, display)

  if show.order_cancelled_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14 = {}

-- Size: Order Cancelled Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.size = 1

-- Display: Order Cancelled Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_14, range, display)

  if show.order_cancelled_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13 = {}

-- Size: Order Cancelled Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.size = 1

-- Display: Order Cancelled Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_13, range, display)

  if show.order_cancelled_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12 = {}

-- Size: Order Cancelled Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.size = 1

-- Display: Order Cancelled Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_12, range, display)

  if show.order_cancelled_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11 = {}

-- Size: Order Cancelled Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.size = 1

-- Display: Order Cancelled Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_11, range, display)

  if show.order_cancelled_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10 = {}

-- Size: Order Cancelled Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.size = 1

-- Display: Order Cancelled Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_10, range, display)

  if show.order_cancelled_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9 = {}

-- Size: Order Cancelled Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.size = 1

-- Display: Order Cancelled Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_9, range, display)

  if show.order_cancelled_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_echo_text_exists = {}

-- Order Cancelled Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_stop_px_exists = {}

-- Order Cancelled Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_routing_inst_exists = {}

-- Order Cancelled Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_rout_strategy_exists = {}

-- Order Cancelled Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_route_delivery_method_exists = {}

-- Order Cancelled Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_ex_destination_exists = {}

-- Order Cancelled Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8 = {}

-- Size: Order Cancelled Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.size = 1

-- Display: Order Cancelled Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Ex Destination Exists|"
  end
  -- Is Order Cancelled Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Route Delivery Method Exists|"
  end
  -- Is Order Cancelled Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Rout Strategy Exists|"
  end
  -- Is Order Cancelled Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Routing Inst Exists|"
  end
  -- Is Order Cancelled Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Stop Px Exists|"
  end
  -- Is Order Cancelled Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Echo Text Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ex_destination_exists, buffer(offset, 1))

  -- Order Cancelled Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_route_delivery_method_exists, buffer(offset, 1))

  -- Order Cancelled Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_rout_strategy_exists, buffer(offset, 1))

  -- Order Cancelled Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_routing_inst_exists, buffer(offset, 1))

  -- Order Cancelled Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_stop_px_exists, buffer(offset, 1))

  -- Order Cancelled Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_echo_text_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_8, range, display)

  if show.order_cancelled_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7 = {}

-- Size: Order Cancelled Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.size = 1

-- Display: Order Cancelled Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_7, range, display)

  if show.order_cancelled_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Secondary Order Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_secondary_order_id_exists = {}

-- Order Cancelled Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_attributed_quote_exists = {}

-- Order Cancelled Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_ext_exec_inst_exists = {}

-- Order Cancelled Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6 = {}

-- Size: Order Cancelled Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.size = 1

-- Display: Order Cancelled Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Ext Exec Inst Exists|"
  end
  -- Is Order Cancelled Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Attributed Quote Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Secondary Order Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Secondary Order Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Cancelled Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_attributed_quote_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Secondary Order Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_secondary_order_id_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_6, range, display)

  if show.order_cancelled_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Orig Cl Ord Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_orig_cl_ord_id_exists = {}

-- Order Cancelled Leaves Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_leaves_qty_exists = {}

-- Order Cancelled Last Shares Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_last_shares_exists = {}

-- Order Cancelled Last Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_last_px_exists = {}

-- Order Cancelled Display Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_display_price_exists = {}

-- Order Cancelled Working Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_working_price_exists = {}

-- Order Cancelled Base Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_base_liquidity_indicator_exists = {}

-- Order Cancelled Expire Time Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_expire_time_exists = {}

-- Order Cancelled Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5 = {}

-- Size: Order Cancelled Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.size = 1

-- Display: Order Cancelled Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Expire Time Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Expire Time Exists|"
  end
  -- Is Order Cancelled Base Liquidity Indicator Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Base Liquidity Indicator Exists|"
  end
  -- Is Order Cancelled Working Price Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Working Price Exists|"
  end
  -- Is Order Cancelled Display Price Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Display Price Exists|"
  end
  -- Is Order Cancelled Last Px Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Last Px Exists|"
  end
  -- Is Order Cancelled Last Shares Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Last Shares Exists|"
  end
  -- Is Order Cancelled Leaves Qty Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Leaves Qty Exists|"
  end
  -- Is Order Cancelled Orig Cl Ord Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Orig Cl Ord Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Expire Time Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_expire_time_exists, buffer(offset, 1))

  -- Order Cancelled Base Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_base_liquidity_indicator_exists, buffer(offset, 1))

  -- Order Cancelled Working Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_working_price_exists, buffer(offset, 1))

  -- Order Cancelled Display Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_display_price_exists, buffer(offset, 1))

  -- Order Cancelled Last Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_last_px_exists, buffer(offset, 1))

  -- Order Cancelled Last Shares Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_last_shares_exists, buffer(offset, 1))

  -- Order Cancelled Leaves Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_leaves_qty_exists, buffer(offset, 1))

  -- Order Cancelled Orig Cl Ord Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_orig_cl_ord_id_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_5, range, display)

  if show.order_cancelled_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4 = {}

-- Size: Order Cancelled Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.size = 1

-- Display: Order Cancelled Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Reserved Bit 7 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Reserved Bit 2 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_4, range, display)

  if show.order_cancelled_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_account_exists = {}

-- Order Cancelled Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_clearing_firm_exists = {}

-- Order Cancelled Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_clearing_account_exists = {}

-- Order Cancelled Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_display_indicator_exists = {}

-- Order Cancelled Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_max_floor_exists = {}

-- Order Cancelled Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_discretion_amount_exists = {}

-- Order Cancelled Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_order_qty_exists = {}

-- Order Cancelled Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_prevent_match_exists = {}

-- Order Cancelled Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3 = {}

-- Size: Order Cancelled Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.size = 1

-- Display: Order Cancelled Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Prevent Match Exists|"
  end
  -- Is Order Cancelled Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Order Qty Exists|"
  end
  -- Is Order Cancelled Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Discretion Amount Exists|"
  end
  -- Is Order Cancelled Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Max Floor Exists|"
  end
  -- Is Order Cancelled Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Display Indicator Exists|"
  end
  -- Is Order Cancelled Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Clearing Account Exists|"
  end
  -- Is Order Cancelled Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Clearing Firm Exists|"
  end
  -- Is Order Cancelled Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_prevent_match_exists, buffer(offset, 1))

  -- Order Cancelled Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_order_qty_exists, buffer(offset, 1))

  -- Order Cancelled Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_discretion_amount_exists, buffer(offset, 1))

  -- Order Cancelled Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_max_floor_exists, buffer(offset, 1))

  -- Order Cancelled Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_display_indicator_exists, buffer(offset, 1))

  -- Order Cancelled Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_clearing_account_exists, buffer(offset, 1))

  -- Order Cancelled Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_clearing_firm_exists, buffer(offset, 1))

  -- Order Cancelled Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_account_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_3, range, display)

  if show.order_cancelled_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_symbol_exists = {}

-- Order Cancelled Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_symbol_sfx_exists = {}

-- Order Cancelled Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_capacity_exists = {}

-- Order Cancelled Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2 = {}

-- Size: Order Cancelled Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.size = 1

-- Display: Order Cancelled Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Capacity Exists|"
  end
  -- Is Order Cancelled Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Reserved Bit 6 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Reserved Bit 5 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Reserved Bit 4 Exists|"
  end
  -- Is Order Cancelled Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Reserved Bit 3 Exists|"
  end
  -- Is Order Cancelled Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Symbol Sfx Exists|"
  end
  -- Is Order Cancelled Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_capacity_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Cancelled Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Cancelled Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_symbol_sfx_exists, buffer(offset, 1))

  -- Order Cancelled Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_2, range, display)

  if show.order_cancelled_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_side_exists = {}

-- Order Cancelled Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_peg_difference_exists = {}

-- Order Cancelled Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_price_exists = {}

-- Order Cancelled Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_exec_inst_exists = {}

-- Order Cancelled Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_ord_type_exists = {}

-- Order Cancelled Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_time_in_force_exists = {}

-- Order Cancelled Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_min_qty_exists = {}

-- Order Cancelled Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1 = {}

-- Size: Order Cancelled Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.size = 1

-- Display: Order Cancelled Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Cancelled Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Cancelled Reserved Bit 8 Exists|"
  end
  -- Is Order Cancelled Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Cancelled Min Qty Exists|"
  end
  -- Is Order Cancelled Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Cancelled Time In Force Exists|"
  end
  -- Is Order Cancelled Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Cancelled Ord Type Exists|"
  end
  -- Is Order Cancelled Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Cancelled Exec Inst Exists|"
  end
  -- Is Order Cancelled Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Cancelled Price Exists|"
  end
  -- Is Order Cancelled Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Cancelled Peg Difference Exists|"
  end
  -- Is Order Cancelled Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Cancelled Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Cancelled Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Cancelled Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Cancelled Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_min_qty_exists, buffer(offset, 1))

  -- Order Cancelled Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_time_in_force_exists, buffer(offset, 1))

  -- Order Cancelled Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_ord_type_exists, buffer(offset, 1))

  -- Order Cancelled Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_exec_inst_exists, buffer(offset, 1))

  -- Order Cancelled Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_price_exists, buffer(offset, 1))

  -- Order Cancelled Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_peg_difference_exists, buffer(offset, 1))

  -- Order Cancelled Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_side_exists, buffer(offset, 1))
end

-- Dissect: Order Cancelled Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_byte_1, range, display)

  if show.order_cancelled_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Cancelled Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count = {}

-- Size: Order Cancelled Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.size = 1

-- Display: Order Cancelled Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.display = function(value)
  return "Order Cancelled Bitfield Count: "..value
end

-- Dissect: Order Cancelled Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Cancelled Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields = {}

-- Display: Order Cancelled Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Cancelled Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_cancelled_optional_fields)
  local index = offset

  -- Order Cancelled Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_cancelled_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Cancelled Byte 1
  local order_cancelled_byte_1_exists = order_cancelled_bitfield_count >= 1

  -- Runtime optional field: Order Cancelled Byte 1
  if order_cancelled_byte_1_exists then

    -- Order Cancelled Byte 1: Struct of 8 fields
    index, order_cancelled_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 2
  local order_cancelled_byte_2_exists = order_cancelled_bitfield_count >= 2

  -- Runtime optional field: Order Cancelled Byte 2
  if order_cancelled_byte_2_exists then

    -- Order Cancelled Byte 2: Struct of 8 fields
    index, order_cancelled_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 3
  local order_cancelled_byte_3_exists = order_cancelled_bitfield_count >= 3

  -- Runtime optional field: Order Cancelled Byte 3
  if order_cancelled_byte_3_exists then

    -- Order Cancelled Byte 3: Struct of 8 fields
    index, order_cancelled_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 4
  local order_cancelled_byte_4_exists = order_cancelled_bitfield_count >= 4

  -- Runtime optional field: Order Cancelled Byte 4
  if order_cancelled_byte_4_exists then

    -- Order Cancelled Byte 4: Struct of 8 fields
    index, order_cancelled_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 5
  local order_cancelled_byte_5_exists = order_cancelled_bitfield_count >= 5

  -- Runtime optional field: Order Cancelled Byte 5
  if order_cancelled_byte_5_exists then

    -- Order Cancelled Byte 5: Struct of 8 fields
    index, order_cancelled_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 6
  local order_cancelled_byte_6_exists = order_cancelled_bitfield_count >= 6

  -- Runtime optional field: Order Cancelled Byte 6
  if order_cancelled_byte_6_exists then

    -- Order Cancelled Byte 6: Struct of 8 fields
    index, order_cancelled_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 7
  local order_cancelled_byte_7_exists = order_cancelled_bitfield_count >= 7

  -- Runtime optional field: Order Cancelled Byte 7
  if order_cancelled_byte_7_exists then

    -- Order Cancelled Byte 7: Struct of 8 fields
    index, order_cancelled_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 8
  local order_cancelled_byte_8_exists = order_cancelled_bitfield_count >= 8

  -- Runtime optional field: Order Cancelled Byte 8
  if order_cancelled_byte_8_exists then

    -- Order Cancelled Byte 8: Struct of 8 fields
    index, order_cancelled_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 9
  local order_cancelled_byte_9_exists = order_cancelled_bitfield_count >= 9

  -- Runtime optional field: Order Cancelled Byte 9
  if order_cancelled_byte_9_exists then

    -- Order Cancelled Byte 9: Struct of 8 fields
    index, order_cancelled_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 10
  local order_cancelled_byte_10_exists = order_cancelled_bitfield_count >= 10

  -- Runtime optional field: Order Cancelled Byte 10
  if order_cancelled_byte_10_exists then

    -- Order Cancelled Byte 10: Struct of 8 fields
    index, order_cancelled_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 11
  local order_cancelled_byte_11_exists = order_cancelled_bitfield_count >= 11

  -- Runtime optional field: Order Cancelled Byte 11
  if order_cancelled_byte_11_exists then

    -- Order Cancelled Byte 11: Struct of 8 fields
    index, order_cancelled_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 12
  local order_cancelled_byte_12_exists = order_cancelled_bitfield_count >= 12

  -- Runtime optional field: Order Cancelled Byte 12
  if order_cancelled_byte_12_exists then

    -- Order Cancelled Byte 12: Struct of 8 fields
    index, order_cancelled_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 13
  local order_cancelled_byte_13_exists = order_cancelled_bitfield_count >= 13

  -- Runtime optional field: Order Cancelled Byte 13
  if order_cancelled_byte_13_exists then

    -- Order Cancelled Byte 13: Struct of 8 fields
    index, order_cancelled_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 14
  local order_cancelled_byte_14_exists = order_cancelled_bitfield_count >= 14

  -- Runtime optional field: Order Cancelled Byte 14
  if order_cancelled_byte_14_exists then

    -- Order Cancelled Byte 14: Struct of 8 fields
    index, order_cancelled_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 15
  local order_cancelled_byte_15_exists = order_cancelled_bitfield_count >= 15

  -- Runtime optional field: Order Cancelled Byte 15
  if order_cancelled_byte_15_exists then

    -- Order Cancelled Byte 15: Struct of 8 fields
    index, order_cancelled_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 16
  local order_cancelled_byte_16_exists = order_cancelled_bitfield_count >= 16

  -- Runtime optional field: Order Cancelled Byte 16
  if order_cancelled_byte_16_exists then

    -- Order Cancelled Byte 16: Struct of 8 fields
    index, order_cancelled_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 17
  local order_cancelled_byte_17_exists = order_cancelled_bitfield_count >= 17

  -- Runtime optional field: Order Cancelled Byte 17
  if order_cancelled_byte_17_exists then

    -- Order Cancelled Byte 17: Struct of 8 fields
    index, order_cancelled_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_cancelled_bitfield_count >= 1 and order_cancelled_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_cancelled_bitfield_count >= 2 and order_cancelled_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_cancelled_bitfield_count >= 2 and order_cancelled_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = order_cancelled_bitfield_count >= 2 and order_cancelled_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_cancelled_bitfield_count >= 3 and order_cancelled_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Orig Cl Ord Id
  local orig_cl_ord_id_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(7) > 0

  -- Runtime optional field: Orig Cl Ord Id
  if orig_cl_ord_id_exists then
    index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Leaves Qty
  local leaves_qty_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(6) > 0

  -- Runtime optional field: Leaves Qty
  if leaves_qty_exists then
    index, leaves_qty = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Shares
  local last_shares_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(5) > 0

  -- Runtime optional field: Last Shares
  if last_shares_exists then
    index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Px
  local last_px_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(4) > 0

  -- Runtime optional field: Last Px
  if last_px_exists then
    index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Price
  local display_price_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(3) > 0

  -- Runtime optional field: Display Price
  if display_price_exists then
    index, display_price = cboe_edgx_equities_orderentry_boe_v2_3.display_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Working Price
  local working_price_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(2) > 0

  -- Runtime optional field: Working Price
  if working_price_exists then
    index, working_price = cboe_edgx_equities_orderentry_boe_v2_3.working_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Base Liquidity Indicator
  local base_liquidity_indicator_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(1) > 0

  -- Runtime optional field: Base Liquidity Indicator
  if base_liquidity_indicator_exists then
    index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Expire Time
  local expire_time_exists = order_cancelled_bitfield_count >= 5 and order_cancelled_byte_5:bitfield(0) > 0

  -- Runtime optional field: Expire Time
  if expire_time_exists then
    index, expire_time = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Secondary Order Id
  local secondary_order_id_exists = order_cancelled_bitfield_count >= 6 and order_cancelled_byte_6:bitfield(7) > 0

  -- Runtime optional field: Secondary Order Id
  if secondary_order_id_exists then
    index, secondary_order_id = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_cancelled_bitfield_count >= 6 and order_cancelled_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_cancelled_bitfield_count >= 6 and order_cancelled_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_cancelled_bitfield_count >= 8 and order_cancelled_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Cancelled Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_cancelled_optional_fields)
  local index = offset + size_of_order_cancelled_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_cancelled_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.fields(buffer, offset, packet, parent, size_of_order_cancelled_optional_fields)
    parent:set_len(size_of_order_cancelled_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.fields(buffer, offset, packet, parent, size_of_order_cancelled_optional_fields)

    return index
  end
end

-- Cancel Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason = {}

-- Size: Cancel Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.size = 1

-- Display: Cancel Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.display = function(value)
  if value == "A" then
    return "Cancel Reason: Admin (A)"
  end
  if value == "D" then
    return "Cancel Reason: Duplicate Identifier (D)"
  end
  if value == "E" then
    return "Cancel Reason: Size Reduction Due To Swp Restatement (E)"
  end
  if value == "F" then
    return "Cancel Reason: Failed To Quote (F)"
  end
  if value == "H" then
    return "Cancel Reason: Halted (H)"
  end
  if value == "I" then
    return "Cancel Reason: Incorrect Data Center (I)"
  end
  if value == "J" then
    return "Cancel Reason: Too Late To Cancel (J)"
  end
  if value == "K" then
    return "Cancel Reason: Order Rate Threshold Exceeded (K)"
  end
  if value == "L" then
    return "Cancel Reason: Order Would Lock Or Cross Nbbo (L)"
  end
  if value == "M" then
    return "Cancel Reason: Order Size Exceeded (M)"
  end
  if value == "N" then
    return "Cancel Reason: Ran Out Of Liquidity To Execute Against (N)"
  end
  if value == "O" then
    return "Cancel Reason: Cl Ord Id Doesnt Match A Known Order (O)"
  end
  if value == "P" then
    return "Cancel Reason: Cant Modify An Order That Is Pending Fill (P)"
  end
  if value == "Q" then
    return "Cancel Reason: Waiting For First Trade (Q)"
  end
  if value == "R" then
    return "Cancel Reason: Routing Unavailable (R)"
  end
  if value == "S" then
    return "Cancel Reason: Short Sale Price Violation (S)"
  end
  if value == "T" then
    return "Cancel Reason: Fill Would Trade Through The Nbbo (T)"
  end
  if value == "U" then
    return "Cancel Reason: User Requested (U)"
  end
  if value == "V" then
    return "Cancel Reason: Would Wash (V)"
  end
  if value == "W" then
    return "Cancel Reason: Add Liquidity Only Order Would Remove (W)"
  end
  if value == "X" then
    return "Cancel Reason: Order Expired (X)"
  end
  if value == "Y" then
    return "Cancel Reason: Symbol Not Supported (Y)"
  end
  if value == "Z" then
    return "Cancel Reason: Unforeseen Reason (Z)"
  end
  if value == "f" then
    return "Cancel Reason: Risk Management Mpid Or Custom Group Id Level (f)"
  end
  if value == "m" then
    return "Cancel Reason: Market Access Risk Limit Exceeded (m)"
  end
  if value == "o" then
    return "Cancel Reason: Max Open Orders Count Exceeded (o)"
  end
  if value == "r" then
    return "Cancel Reason: Reserve Reload (r)"
  end
  if value == "s" then
    return "Cancel Reason: Risk Management Risk Root Level (s)"
  end
  if value == "u" then
    return "Cancel Reason: Limit Up Limit Down (u)"
  end
  if value == "w" then
    return "Cancel Reason: Would Remove On Unslide (w)"
  end
  if value == "x" then
    return "Cancel Reason: Crossed Market (x)"
  end
  if value == "y" then
    return "Cancel Reason: Order Received By Cboe During Replay (y)"
  end

  return "Cancel Reason: Unknown("..value..")"
end

-- Dissect: Cancel Reason
cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_reason, range, value, display)

  return offset + length, value
end

-- Transact Time
cboe_edgx_equities_orderentry_boe_v2_3.transact_time = {}

-- Size: Transact Time
cboe_edgx_equities_orderentry_boe_v2_3.transact_time.size = 8

-- Display: Transact Time
cboe_edgx_equities_orderentry_boe_v2_3.transact_time.display = function(value)
  return "Transact Time: "..value
end

-- Dissect: Transact Time
cboe_edgx_equities_orderentry_boe_v2_3.transact_time.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.transact_time.size
  local range = buffer(offset, length)
  local value = range:le_uint64()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.transact_time.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.transact_time, range, value, display)

  return offset + length, value
end

-- Order Cancelled Message
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message = {}

-- Read runtime size of: Order Cancelled Message
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Cancelled Message
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Cancelled Message
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.fields = function(buffer, offset, packet, parent, size_of_order_cancelled_message)
  local index = offset

  -- Transact Time: 8 Byte Unsigned Fixed Width Integer
  index, transact_time = cboe_edgx_equities_orderentry_boe_v2_3.transact_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Cancel Reason: 1 Byte Ascii String Enum with 32 values
  index, cancel_reason = cboe_edgx_equities_orderentry_boe_v2_3.cancel_reason.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Cancelled Optional Fields
  local size_of_order_cancelled_optional_fields = message_length - (index - offset) - 8

  -- Order Cancelled Optional Fields: Struct of 53 fields
  index, order_cancelled_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_optional_fields.dissect(buffer, index, packet, parent, size_of_order_cancelled_optional_fields)

  return index
end

-- Dissect: Order Cancelled Message
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_cancelled_message = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_cancelled_message then
    local range = buffer(offset, size_of_order_cancelled_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.fields(buffer, offset, packet, parent, size_of_order_cancelled_message)

  return offset + size_of_order_cancelled_message
end

-- User Modify Rejected Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_1_exists = {}

-- User Modify Rejected Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_2_exists = {}

-- User Modify Rejected Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_3_exists = {}

-- User Modify Rejected Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_4_exists = {}

-- User Modify Rejected Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_5_exists = {}

-- User Modify Rejected Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_6_exists = {}

-- User Modify Rejected Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_7_exists = {}

-- User Modify Rejected Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_reserved_bit_8_exists = {}

-- User Modify Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17 = {}

-- Size: User Modify Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.size = 1

-- Display: User Modify Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_17, range, display)

  if show.user_modify_rejected_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16 = {}

-- Size: User Modify Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.size = 1

-- Display: User Modify Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_16, range, display)

  if show.user_modify_rejected_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15 = {}

-- Size: User Modify Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.size = 1

-- Display: User Modify Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_15, range, display)

  if show.user_modify_rejected_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14 = {}

-- Size: User Modify Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.size = 1

-- Display: User Modify Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_14, range, display)

  if show.user_modify_rejected_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13 = {}

-- Size: User Modify Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.size = 1

-- Display: User Modify Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_13, range, display)

  if show.user_modify_rejected_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12 = {}

-- Size: User Modify Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.size = 1

-- Display: User Modify Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_12, range, display)

  if show.user_modify_rejected_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11 = {}

-- Size: User Modify Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.size = 1

-- Display: User Modify Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_11, range, display)

  if show.user_modify_rejected_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10 = {}

-- Size: User Modify Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.size = 1

-- Display: User Modify Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_10, range, display)

  if show.user_modify_rejected_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9 = {}

-- Size: User Modify Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.size = 1

-- Display: User Modify Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_9, range, display)

  if show.user_modify_rejected_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8 = {}

-- Size: User Modify Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.size = 1

-- Display: User Modify Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_8, range, display)

  if show.user_modify_rejected_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Sub Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_sub_liquidity_indicator_exists = {}

-- User Modify Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7 = {}

-- Size: User Modify Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.size = 1

-- Display: User Modify Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Sub Liquidity Indicator Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Sub Liquidity Indicator Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Sub Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_sub_liquidity_indicator_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_7, range, display)

  if show.user_modify_rejected_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6 = {}

-- Size: User Modify Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.size = 1

-- Display: User Modify Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_6, range, display)

  if show.user_modify_rejected_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5 = {}

-- Size: User Modify Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.size = 1

-- Display: User Modify Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_5, range, display)

  if show.user_modify_rejected_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4 = {}

-- Size: User Modify Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.size = 1

-- Display: User Modify Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_4, range, display)

  if show.user_modify_rejected_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3 = {}

-- Size: User Modify Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.size = 1

-- Display: User Modify Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_3, range, display)

  if show.user_modify_rejected_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2 = {}

-- Size: User Modify Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.size = 1

-- Display: User Modify Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_2, range, display)

  if show.user_modify_rejected_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1 = {}

-- Size: User Modify Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.size = 1

-- Display: User Modify Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is User Modify Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."User Modify Rejected Reserved Bit 8 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."User Modify Rejected Reserved Bit 7 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."User Modify Rejected Reserved Bit 6 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."User Modify Rejected Reserved Bit 5 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."User Modify Rejected Reserved Bit 4 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."User Modify Rejected Reserved Bit 3 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."User Modify Rejected Reserved Bit 2 Exists|"
  end
  -- Is User Modify Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."User Modify Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: User Modify Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.bits = function(buffer, offset, packet, parent)

  -- User Modify Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- User Modify Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: User Modify Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_byte_1, range, display)

  if show.user_modify_rejected_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- User Modify Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count = {}

-- Size: User Modify Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.size = 1

-- Display: User Modify Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.display = function(value)
  return "User Modify Rejected Bitfield Count: "..value
end

-- Dissect: User Modify Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_bitfield_count, range, value, display)

  return offset + length, value
end

-- User Modify Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields = {}

-- Display: User Modify Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: User Modify Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.fields = function(buffer, offset, packet, parent, size_of_user_modify_rejected_optional_fields)
  local index = offset

  -- User Modify Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, user_modify_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: User Modify Rejected Byte 1
  local user_modify_rejected_byte_1_exists = user_modify_rejected_bitfield_count >= 1

  -- Runtime optional field: User Modify Rejected Byte 1
  if user_modify_rejected_byte_1_exists then

    -- User Modify Rejected Byte 1: Struct of 8 fields
    index, user_modify_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 2
  local user_modify_rejected_byte_2_exists = user_modify_rejected_bitfield_count >= 2

  -- Runtime optional field: User Modify Rejected Byte 2
  if user_modify_rejected_byte_2_exists then

    -- User Modify Rejected Byte 2: Struct of 8 fields
    index, user_modify_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 3
  local user_modify_rejected_byte_3_exists = user_modify_rejected_bitfield_count >= 3

  -- Runtime optional field: User Modify Rejected Byte 3
  if user_modify_rejected_byte_3_exists then

    -- User Modify Rejected Byte 3: Struct of 8 fields
    index, user_modify_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 4
  local user_modify_rejected_byte_4_exists = user_modify_rejected_bitfield_count >= 4

  -- Runtime optional field: User Modify Rejected Byte 4
  if user_modify_rejected_byte_4_exists then

    -- User Modify Rejected Byte 4: Struct of 8 fields
    index, user_modify_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 5
  local user_modify_rejected_byte_5_exists = user_modify_rejected_bitfield_count >= 5

  -- Runtime optional field: User Modify Rejected Byte 5
  if user_modify_rejected_byte_5_exists then

    -- User Modify Rejected Byte 5: Struct of 8 fields
    index, user_modify_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 6
  local user_modify_rejected_byte_6_exists = user_modify_rejected_bitfield_count >= 6

  -- Runtime optional field: User Modify Rejected Byte 6
  if user_modify_rejected_byte_6_exists then

    -- User Modify Rejected Byte 6: Struct of 8 fields
    index, user_modify_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 7
  local user_modify_rejected_byte_7_exists = user_modify_rejected_bitfield_count >= 7

  -- Runtime optional field: User Modify Rejected Byte 7
  if user_modify_rejected_byte_7_exists then

    -- User Modify Rejected Byte 7: Struct of 8 fields
    index, user_modify_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 8
  local user_modify_rejected_byte_8_exists = user_modify_rejected_bitfield_count >= 8

  -- Runtime optional field: User Modify Rejected Byte 8
  if user_modify_rejected_byte_8_exists then

    -- User Modify Rejected Byte 8: Struct of 8 fields
    index, user_modify_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 9
  local user_modify_rejected_byte_9_exists = user_modify_rejected_bitfield_count >= 9

  -- Runtime optional field: User Modify Rejected Byte 9
  if user_modify_rejected_byte_9_exists then

    -- User Modify Rejected Byte 9: Struct of 8 fields
    index, user_modify_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 10
  local user_modify_rejected_byte_10_exists = user_modify_rejected_bitfield_count >= 10

  -- Runtime optional field: User Modify Rejected Byte 10
  if user_modify_rejected_byte_10_exists then

    -- User Modify Rejected Byte 10: Struct of 8 fields
    index, user_modify_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 11
  local user_modify_rejected_byte_11_exists = user_modify_rejected_bitfield_count >= 11

  -- Runtime optional field: User Modify Rejected Byte 11
  if user_modify_rejected_byte_11_exists then

    -- User Modify Rejected Byte 11: Struct of 8 fields
    index, user_modify_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 12
  local user_modify_rejected_byte_12_exists = user_modify_rejected_bitfield_count >= 12

  -- Runtime optional field: User Modify Rejected Byte 12
  if user_modify_rejected_byte_12_exists then

    -- User Modify Rejected Byte 12: Struct of 8 fields
    index, user_modify_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 13
  local user_modify_rejected_byte_13_exists = user_modify_rejected_bitfield_count >= 13

  -- Runtime optional field: User Modify Rejected Byte 13
  if user_modify_rejected_byte_13_exists then

    -- User Modify Rejected Byte 13: Struct of 8 fields
    index, user_modify_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 14
  local user_modify_rejected_byte_14_exists = user_modify_rejected_bitfield_count >= 14

  -- Runtime optional field: User Modify Rejected Byte 14
  if user_modify_rejected_byte_14_exists then

    -- User Modify Rejected Byte 14: Struct of 8 fields
    index, user_modify_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 15
  local user_modify_rejected_byte_15_exists = user_modify_rejected_bitfield_count >= 15

  -- Runtime optional field: User Modify Rejected Byte 15
  if user_modify_rejected_byte_15_exists then

    -- User Modify Rejected Byte 15: Struct of 8 fields
    index, user_modify_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 16
  local user_modify_rejected_byte_16_exists = user_modify_rejected_bitfield_count >= 16

  -- Runtime optional field: User Modify Rejected Byte 16
  if user_modify_rejected_byte_16_exists then

    -- User Modify Rejected Byte 16: Struct of 8 fields
    index, user_modify_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 17
  local user_modify_rejected_byte_17_exists = user_modify_rejected_bitfield_count >= 17

  -- Runtime optional field: User Modify Rejected Byte 17
  if user_modify_rejected_byte_17_exists then

    -- User Modify Rejected Byte 17: Struct of 8 fields
    index, user_modify_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Sub Liquidity Indicator
  local sub_liquidity_indicator_exists = user_modify_rejected_bitfield_count >= 7 and user_modify_rejected_byte_7:bitfield(7) > 0

  -- Runtime optional field: Sub Liquidity Indicator
  if sub_liquidity_indicator_exists then
    index, sub_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: User Modify Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_user_modify_rejected_optional_fields)
  local index = offset + size_of_user_modify_rejected_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.user_modify_rejected_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_user_modify_rejected_optional_fields)
    parent:set_len(size_of_user_modify_rejected_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_user_modify_rejected_optional_fields)

    return index
  end
end

-- Modify Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason = {}

-- Size: Modify Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.size = 1

-- Display: Modify Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.display = function(value)
  if value == "A" then
    return "Modify Reject Reason: Admin (A)"
  end
  if value == "D" then
    return "Modify Reject Reason: Duplicate Identifier (D)"
  end
  if value == "E" then
    return "Modify Reject Reason: Size Reduction Due To Swp Restatement (E)"
  end
  if value == "F" then
    return "Modify Reject Reason: Failed To Quote (F)"
  end
  if value == "H" then
    return "Modify Reject Reason: Halted (H)"
  end
  if value == "I" then
    return "Modify Reject Reason: Incorrect Data Center (I)"
  end
  if value == "J" then
    return "Modify Reject Reason: Too Late To Cancel (J)"
  end
  if value == "K" then
    return "Modify Reject Reason: Order Rate Threshold Exceeded (K)"
  end
  if value == "L" then
    return "Modify Reject Reason: Order Would Lock Or Cross Nbbo (L)"
  end
  if value == "M" then
    return "Modify Reject Reason: Order Size Exceeded (M)"
  end
  if value == "N" then
    return "Modify Reject Reason: Ran Out Of Liquidity To Execute Against (N)"
  end
  if value == "O" then
    return "Modify Reject Reason: Cl Ord Id Doesnt Match A Known Order (O)"
  end
  if value == "P" then
    return "Modify Reject Reason: Cant Modify An Order That Is Pending Fill (P)"
  end
  if value == "Q" then
    return "Modify Reject Reason: Waiting For First Trade (Q)"
  end
  if value == "R" then
    return "Modify Reject Reason: Routing Unavailable (R)"
  end
  if value == "S" then
    return "Modify Reject Reason: Short Sale Price Violation (S)"
  end
  if value == "T" then
    return "Modify Reject Reason: Fill Would Trade Through The Nbbo (T)"
  end
  if value == "U" then
    return "Modify Reject Reason: User Requested (U)"
  end
  if value == "V" then
    return "Modify Reject Reason: Would Wash (V)"
  end
  if value == "W" then
    return "Modify Reject Reason: Add Liquidity Only Order Would Remove (W)"
  end
  if value == "X" then
    return "Modify Reject Reason: Order Expired (X)"
  end
  if value == "Y" then
    return "Modify Reject Reason: Symbol Not Supported (Y)"
  end
  if value == "Z" then
    return "Modify Reject Reason: Unforeseen Reason (Z)"
  end
  if value == "f" then
    return "Modify Reject Reason: Risk Management Mpid Or Custom Group Id Level (f)"
  end
  if value == "m" then
    return "Modify Reject Reason: Market Access Risk Limit Exceeded (m)"
  end
  if value == "o" then
    return "Modify Reject Reason: Max Open Orders Count Exceeded (o)"
  end
  if value == "r" then
    return "Modify Reject Reason: Reserve Reload (r)"
  end
  if value == "s" then
    return "Modify Reject Reason: Risk Management Risk Root Level (s)"
  end
  if value == "u" then
    return "Modify Reject Reason: Limit Up Limit Down (u)"
  end
  if value == "w" then
    return "Modify Reject Reason: Would Remove On Unslide (w)"
  end
  if value == "x" then
    return "Modify Reject Reason: Crossed Market (x)"
  end
  if value == "y" then
    return "Modify Reject Reason: Order Received By Cboe During Replay (y)"
  end

  return "Modify Reject Reason: Unknown("..value..")"
end

-- Dissect: Modify Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_reject_reason, range, value, display)

  return offset + length, value
end

-- User Modify Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message = {}

-- Read runtime size of: User Modify Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: User Modify Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: User Modify Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.fields = function(buffer, offset, packet, parent, size_of_user_modify_rejected_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Modify Reject Reason: 1 Byte Ascii String Enum with 32 values
  index, modify_reject_reason = cboe_edgx_equities_orderentry_boe_v2_3.modify_reject_reason.dissect(buffer, index, packet, parent)

  -- Text: 60 Byte Ascii String
  index, text = cboe_edgx_equities_orderentry_boe_v2_3.text.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: User Modify Rejected Optional Fields
  local size_of_user_modify_rejected_optional_fields = message_length - (index - offset) - 8

  -- User Modify Rejected Optional Fields: Struct of 19 fields
  index, user_modify_rejected_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_optional_fields.dissect(buffer, index, packet, parent, size_of_user_modify_rejected_optional_fields)

  return index
end

-- Dissect: User Modify Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_user_modify_rejected_message = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.user_modify_rejected_message then
    local range = buffer(offset, size_of_user_modify_rejected_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.fields(buffer, offset, packet, parent, size_of_user_modify_rejected_message)

  return offset + size_of_user_modify_rejected_message
end

-- Order Restated Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_1_exists = {}

-- Order Restated Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_2_exists = {}

-- Order Restated Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_3_exists = {}

-- Order Restated Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_4_exists = {}

-- Order Restated Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_5_exists = {}

-- Order Restated Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_6_exists = {}

-- Order Restated Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_7_exists = {}

-- Order Restated Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_reserved_bit_8_exists = {}

-- Order Restated Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17 = {}

-- Size: Order Restated Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.size = 1

-- Display: Order Restated Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_17, range, display)

  if show.order_restated_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Mass Cancelled Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_mass_cancelled_exists = {}

-- Order Restated Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16 = {}

-- Size: Order Restated Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.size = 1

-- Display: Order Restated Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Mass Cancelled Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_mass_cancelled_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_16, range, display)

  if show.order_restated_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15 = {}

-- Size: Order Restated Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.size = 1

-- Display: Order Restated Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Mass Cancelled Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_mass_cancelled_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_15, range, display)

  if show.order_restated_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14 = {}

-- Size: Order Restated Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.size = 1

-- Display: Order Restated Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_14, range, display)

  if show.order_restated_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13 = {}

-- Size: Order Restated Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.size = 1

-- Display: Order Restated Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_13, range, display)

  if show.order_restated_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12 = {}

-- Size: Order Restated Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.size = 1

-- Display: Order Restated Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_12, range, display)

  if show.order_restated_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11 = {}

-- Size: Order Restated Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.size = 1

-- Display: Order Restated Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_11, range, display)

  if show.order_restated_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10 = {}

-- Size: Order Restated Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.size = 1

-- Display: Order Restated Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_10, range, display)

  if show.order_restated_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9 = {}

-- Size: Order Restated Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.size = 1

-- Display: Order Restated Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_9, range, display)

  if show.order_restated_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_echo_text_exists = {}

-- Order Restated Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_stop_px_exists = {}

-- Order Restated Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_routing_inst_exists = {}

-- Order Restated Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_rout_strategy_exists = {}

-- Order Restated Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_route_delivery_method_exists = {}

-- Order Restated Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_ex_destination_exists = {}

-- Order Restated Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8 = {}

-- Size: Order Restated Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.size = 1

-- Display: Order Restated Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Ex Destination Exists|"
  end
  -- Is Order Restated Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Route Delivery Method Exists|"
  end
  -- Is Order Restated Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Rout Strategy Exists|"
  end
  -- Is Order Restated Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Routing Inst Exists|"
  end
  -- Is Order Restated Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Stop Px Exists|"
  end
  -- Is Order Restated Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Echo Text Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ex_destination_exists, buffer(offset, 1))

  -- Order Restated Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_route_delivery_method_exists, buffer(offset, 1))

  -- Order Restated Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_rout_strategy_exists, buffer(offset, 1))

  -- Order Restated Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_routing_inst_exists, buffer(offset, 1))

  -- Order Restated Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_stop_px_exists, buffer(offset, 1))

  -- Order Restated Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_echo_text_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_8, range, display)

  if show.order_restated_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7 = {}

-- Size: Order Restated Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.size = 1

-- Display: Order Restated Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_7, range, display)

  if show.order_restated_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Secondary Order Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_secondary_order_id_exists = {}

-- Order Restated Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_attributed_quote_exists = {}

-- Order Restated Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_ext_exec_inst_exists = {}

-- Order Restated Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6 = {}

-- Size: Order Restated Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.size = 1

-- Display: Order Restated Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Ext Exec Inst Exists|"
  end
  -- Is Order Restated Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Attributed Quote Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Secondary Order Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Secondary Order Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Restated Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_attributed_quote_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Secondary Order Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_secondary_order_id_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_6, range, display)

  if show.order_restated_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Orig Cl Ord Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_orig_cl_ord_id_exists = {}

-- Order Restated Leaves Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_leaves_qty_exists = {}

-- Order Restated Last Shares Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_last_shares_exists = {}

-- Order Restated Last Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_last_px_exists = {}

-- Order Restated Display Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_display_price_exists = {}

-- Order Restated Working Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_working_price_exists = {}

-- Order Restated Base Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_base_liquidity_indicator_exists = {}

-- Order Restated Expire Time Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_expire_time_exists = {}

-- Order Restated Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5 = {}

-- Size: Order Restated Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.size = 1

-- Display: Order Restated Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Expire Time Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Expire Time Exists|"
  end
  -- Is Order Restated Base Liquidity Indicator Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Base Liquidity Indicator Exists|"
  end
  -- Is Order Restated Working Price Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Working Price Exists|"
  end
  -- Is Order Restated Display Price Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Display Price Exists|"
  end
  -- Is Order Restated Last Px Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Last Px Exists|"
  end
  -- Is Order Restated Last Shares Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Last Shares Exists|"
  end
  -- Is Order Restated Leaves Qty Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Leaves Qty Exists|"
  end
  -- Is Order Restated Orig Cl Ord Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Orig Cl Ord Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Restated Expire Time Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_expire_time_exists, buffer(offset, 1))

  -- Order Restated Base Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_base_liquidity_indicator_exists, buffer(offset, 1))

  -- Order Restated Working Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_working_price_exists, buffer(offset, 1))

  -- Order Restated Display Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_display_price_exists, buffer(offset, 1))

  -- Order Restated Last Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_last_px_exists, buffer(offset, 1))

  -- Order Restated Last Shares Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_last_shares_exists, buffer(offset, 1))

  -- Order Restated Leaves Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_leaves_qty_exists, buffer(offset, 1))

  -- Order Restated Orig Cl Ord Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_orig_cl_ord_id_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_5, range, display)

  if show.order_restated_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4 = {}

-- Size: Order Restated Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.size = 1

-- Display: Order Restated Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Reserved Bit 7 Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Reserved Bit 2 Exists|"
  end
  -- Is Order Restated Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_4, range, display)

  if show.order_restated_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_account_exists = {}

-- Order Restated Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_clearing_firm_exists = {}

-- Order Restated Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_clearing_account_exists = {}

-- Order Restated Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_display_indicator_exists = {}

-- Order Restated Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_max_floor_exists = {}

-- Order Restated Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_discretion_amount_exists = {}

-- Order Restated Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_order_qty_exists = {}

-- Order Restated Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_prevent_match_exists = {}

-- Order Restated Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3 = {}

-- Size: Order Restated Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.size = 1

-- Display: Order Restated Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Prevent Match Exists|"
  end
  -- Is Order Restated Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Order Qty Exists|"
  end
  -- Is Order Restated Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Discretion Amount Exists|"
  end
  -- Is Order Restated Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Max Floor Exists|"
  end
  -- Is Order Restated Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Display Indicator Exists|"
  end
  -- Is Order Restated Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Clearing Account Exists|"
  end
  -- Is Order Restated Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Clearing Firm Exists|"
  end
  -- Is Order Restated Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Restated Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_prevent_match_exists, buffer(offset, 1))

  -- Order Restated Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_order_qty_exists, buffer(offset, 1))

  -- Order Restated Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_discretion_amount_exists, buffer(offset, 1))

  -- Order Restated Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_max_floor_exists, buffer(offset, 1))

  -- Order Restated Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_display_indicator_exists, buffer(offset, 1))

  -- Order Restated Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_clearing_account_exists, buffer(offset, 1))

  -- Order Restated Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_clearing_firm_exists, buffer(offset, 1))

  -- Order Restated Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_account_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_3, range, display)

  if show.order_restated_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_symbol_exists = {}

-- Order Restated Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_symbol_sfx_exists = {}

-- Order Restated Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_capacity_exists = {}

-- Order Restated Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2 = {}

-- Size: Order Restated Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.size = 1

-- Display: Order Restated Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Capacity Exists|"
  end
  -- Is Order Restated Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Reserved Bit 6 Exists|"
  end
  -- Is Order Restated Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Reserved Bit 5 Exists|"
  end
  -- Is Order Restated Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Reserved Bit 4 Exists|"
  end
  -- Is Order Restated Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Reserved Bit 3 Exists|"
  end
  -- Is Order Restated Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Symbol Sfx Exists|"
  end
  -- Is Order Restated Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_capacity_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Restated Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Restated Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_symbol_sfx_exists, buffer(offset, 1))

  -- Order Restated Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_2, range, display)

  if show.order_restated_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_side_exists = {}

-- Order Restated Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_peg_difference_exists = {}

-- Order Restated Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_price_exists = {}

-- Order Restated Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_exec_inst_exists = {}

-- Order Restated Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_ord_type_exists = {}

-- Order Restated Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_time_in_force_exists = {}

-- Order Restated Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_min_qty_exists = {}

-- Order Restated Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1 = {}

-- Size: Order Restated Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.size = 1

-- Display: Order Restated Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Restated Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Restated Reserved Bit 8 Exists|"
  end
  -- Is Order Restated Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Restated Min Qty Exists|"
  end
  -- Is Order Restated Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Restated Time In Force Exists|"
  end
  -- Is Order Restated Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Restated Ord Type Exists|"
  end
  -- Is Order Restated Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Restated Exec Inst Exists|"
  end
  -- Is Order Restated Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Restated Price Exists|"
  end
  -- Is Order Restated Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Restated Peg Difference Exists|"
  end
  -- Is Order Restated Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Restated Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Restated Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Restated Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Restated Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_min_qty_exists, buffer(offset, 1))

  -- Order Restated Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_time_in_force_exists, buffer(offset, 1))

  -- Order Restated Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_ord_type_exists, buffer(offset, 1))

  -- Order Restated Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_exec_inst_exists, buffer(offset, 1))

  -- Order Restated Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_price_exists, buffer(offset, 1))

  -- Order Restated Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_peg_difference_exists, buffer(offset, 1))

  -- Order Restated Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_side_exists, buffer(offset, 1))
end

-- Dissect: Order Restated Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_byte_1, range, display)

  if show.order_restated_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Restated Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count = {}

-- Size: Order Restated Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.size = 1

-- Display: Order Restated Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.display = function(value)
  return "Order Restated Bitfield Count: "..value
end

-- Dissect: Order Restated Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Restated Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields = {}

-- Display: Order Restated Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Restated Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_restated_optional_fields)
  local index = offset

  -- Order Restated Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_restated_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Restated Byte 1
  local order_restated_byte_1_exists = order_restated_bitfield_count >= 1

  -- Runtime optional field: Order Restated Byte 1
  if order_restated_byte_1_exists then

    -- Order Restated Byte 1: Struct of 8 fields
    index, order_restated_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 2
  local order_restated_byte_2_exists = order_restated_bitfield_count >= 2

  -- Runtime optional field: Order Restated Byte 2
  if order_restated_byte_2_exists then

    -- Order Restated Byte 2: Struct of 8 fields
    index, order_restated_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 3
  local order_restated_byte_3_exists = order_restated_bitfield_count >= 3

  -- Runtime optional field: Order Restated Byte 3
  if order_restated_byte_3_exists then

    -- Order Restated Byte 3: Struct of 8 fields
    index, order_restated_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 4
  local order_restated_byte_4_exists = order_restated_bitfield_count >= 4

  -- Runtime optional field: Order Restated Byte 4
  if order_restated_byte_4_exists then

    -- Order Restated Byte 4: Struct of 8 fields
    index, order_restated_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 5
  local order_restated_byte_5_exists = order_restated_bitfield_count >= 5

  -- Runtime optional field: Order Restated Byte 5
  if order_restated_byte_5_exists then

    -- Order Restated Byte 5: Struct of 8 fields
    index, order_restated_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 6
  local order_restated_byte_6_exists = order_restated_bitfield_count >= 6

  -- Runtime optional field: Order Restated Byte 6
  if order_restated_byte_6_exists then

    -- Order Restated Byte 6: Struct of 8 fields
    index, order_restated_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 7
  local order_restated_byte_7_exists = order_restated_bitfield_count >= 7

  -- Runtime optional field: Order Restated Byte 7
  if order_restated_byte_7_exists then

    -- Order Restated Byte 7: Struct of 8 fields
    index, order_restated_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 8
  local order_restated_byte_8_exists = order_restated_bitfield_count >= 8

  -- Runtime optional field: Order Restated Byte 8
  if order_restated_byte_8_exists then

    -- Order Restated Byte 8: Struct of 8 fields
    index, order_restated_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 9
  local order_restated_byte_9_exists = order_restated_bitfield_count >= 9

  -- Runtime optional field: Order Restated Byte 9
  if order_restated_byte_9_exists then

    -- Order Restated Byte 9: Struct of 8 fields
    index, order_restated_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 10
  local order_restated_byte_10_exists = order_restated_bitfield_count >= 10

  -- Runtime optional field: Order Restated Byte 10
  if order_restated_byte_10_exists then

    -- Order Restated Byte 10: Struct of 8 fields
    index, order_restated_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 11
  local order_restated_byte_11_exists = order_restated_bitfield_count >= 11

  -- Runtime optional field: Order Restated Byte 11
  if order_restated_byte_11_exists then

    -- Order Restated Byte 11: Struct of 8 fields
    index, order_restated_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 12
  local order_restated_byte_12_exists = order_restated_bitfield_count >= 12

  -- Runtime optional field: Order Restated Byte 12
  if order_restated_byte_12_exists then

    -- Order Restated Byte 12: Struct of 8 fields
    index, order_restated_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 13
  local order_restated_byte_13_exists = order_restated_bitfield_count >= 13

  -- Runtime optional field: Order Restated Byte 13
  if order_restated_byte_13_exists then

    -- Order Restated Byte 13: Struct of 8 fields
    index, order_restated_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 14
  local order_restated_byte_14_exists = order_restated_bitfield_count >= 14

  -- Runtime optional field: Order Restated Byte 14
  if order_restated_byte_14_exists then

    -- Order Restated Byte 14: Struct of 8 fields
    index, order_restated_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 15
  local order_restated_byte_15_exists = order_restated_bitfield_count >= 15

  -- Runtime optional field: Order Restated Byte 15
  if order_restated_byte_15_exists then

    -- Order Restated Byte 15: Struct of 8 fields
    index, order_restated_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 16
  local order_restated_byte_16_exists = order_restated_bitfield_count >= 16

  -- Runtime optional field: Order Restated Byte 16
  if order_restated_byte_16_exists then

    -- Order Restated Byte 16: Struct of 8 fields
    index, order_restated_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 17
  local order_restated_byte_17_exists = order_restated_bitfield_count >= 17

  -- Runtime optional field: Order Restated Byte 17
  if order_restated_byte_17_exists then

    -- Order Restated Byte 17: Struct of 8 fields
    index, order_restated_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_restated_bitfield_count >= 1 and order_restated_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_restated_bitfield_count >= 2 and order_restated_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_restated_bitfield_count >= 2 and order_restated_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = order_restated_bitfield_count >= 2 and order_restated_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_restated_bitfield_count >= 3 and order_restated_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Orig Cl Ord Id
  local orig_cl_ord_id_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(7) > 0

  -- Runtime optional field: Orig Cl Ord Id
  if orig_cl_ord_id_exists then
    index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Leaves Qty
  local leaves_qty_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(6) > 0

  -- Runtime optional field: Leaves Qty
  if leaves_qty_exists then
    index, leaves_qty = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Shares
  local last_shares_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(5) > 0

  -- Runtime optional field: Last Shares
  if last_shares_exists then
    index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Px
  local last_px_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(4) > 0

  -- Runtime optional field: Last Px
  if last_px_exists then
    index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Price
  local display_price_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(3) > 0

  -- Runtime optional field: Display Price
  if display_price_exists then
    index, display_price = cboe_edgx_equities_orderentry_boe_v2_3.display_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Working Price
  local working_price_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(2) > 0

  -- Runtime optional field: Working Price
  if working_price_exists then
    index, working_price = cboe_edgx_equities_orderentry_boe_v2_3.working_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Base Liquidity Indicator
  local base_liquidity_indicator_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(1) > 0

  -- Runtime optional field: Base Liquidity Indicator
  if base_liquidity_indicator_exists then
    index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Expire Time
  local expire_time_exists = order_restated_bitfield_count >= 5 and order_restated_byte_5:bitfield(0) > 0

  -- Runtime optional field: Expire Time
  if expire_time_exists then
    index, expire_time = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Secondary Order Id
  local secondary_order_id_exists = order_restated_bitfield_count >= 6 and order_restated_byte_6:bitfield(7) > 0

  -- Runtime optional field: Secondary Order Id
  if secondary_order_id_exists then
    index, secondary_order_id = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_restated_bitfield_count >= 6 and order_restated_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_restated_bitfield_count >= 6 and order_restated_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_restated_bitfield_count >= 8 and order_restated_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Restated Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_restated_optional_fields)
  local index = offset + size_of_order_restated_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_restated_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.fields(buffer, offset, packet, parent, size_of_order_restated_optional_fields)
    parent:set_len(size_of_order_restated_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.fields(buffer, offset, packet, parent, size_of_order_restated_optional_fields)

    return index
  end
end

-- Restatement Reason
cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason = {}

-- Size: Restatement Reason
cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.size = 1

-- Display: Restatement Reason
cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.display = function(value)
  if value == "C" then
    return "Restatement Reason: Cboe Market Close (C)"
  end
  if value == "L" then
    return "Restatement Reason: Reload (L)"
  end
  if value == "P" then
    return "Restatement Reason: Peg Or Price Sliding Reprice (P)"
  end
  if value == "Q" then
    return "Restatement Reason: Liquidity Updated (Q)"
  end
  if value == "R" then
    return "Restatement Reason: Reroute (R)"
  end
  if value == "S" then
    return "Restatement Reason: Reduction Of Quantity (S)"
  end
  if value == "W" then
    return "Restatement Reason: Wash (W)"
  end

  return "Restatement Reason: Unknown("..value..")"
end

-- Dissect: Restatement Reason
cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.restatement_reason, range, value, display)

  return offset + length, value
end

-- Order Restated Message
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message = {}

-- Read runtime size of: Order Restated Message
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Restated Message
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Restated Message
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.fields = function(buffer, offset, packet, parent, size_of_order_restated_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Order Id: 8 Byte Unsigned Fixed Width Integer
  index, order_id = cboe_edgx_equities_orderentry_boe_v2_3.order_id.dissect(buffer, index, packet, parent)

  -- Restatement Reason: 1 Byte Ascii String Enum with 7 values
  index, restatement_reason = cboe_edgx_equities_orderentry_boe_v2_3.restatement_reason.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Restated Optional Fields
  local size_of_order_restated_optional_fields = message_length - (index - offset) - 8

  -- Order Restated Optional Fields: Struct of 53 fields
  index, order_restated_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_optional_fields.dissect(buffer, index, packet, parent, size_of_order_restated_optional_fields)

  return index
end

-- Dissect: Order Restated Message
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_restated_message = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_restated_message then
    local range = buffer(offset, size_of_order_restated_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.fields(buffer, offset, packet, parent, size_of_order_restated_message)

  return offset + size_of_order_restated_message
end

-- Order Modified Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_1_exists = {}

-- Order Modified Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_2_exists = {}

-- Order Modified Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_3_exists = {}

-- Order Modified Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_4_exists = {}

-- Order Modified Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_5_exists = {}

-- Order Modified Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_6_exists = {}

-- Order Modified Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_7_exists = {}

-- Order Modified Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_reserved_bit_8_exists = {}

-- Order Modified Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17 = {}

-- Size: Order Modified Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.size = 1

-- Display: Order Modified Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_17, range, display)

  if show.order_modified_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Mass Cancelled Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_mass_cancelled_exists = {}

-- Order Modified Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16 = {}

-- Size: Order Modified Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.size = 1

-- Display: Order Modified Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Mass Cancelled Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_mass_cancelled_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_16, range, display)

  if show.order_modified_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15 = {}

-- Size: Order Modified Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.size = 1

-- Display: Order Modified Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Mass Cancelled Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_mass_cancelled_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_15, range, display)

  if show.order_modified_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14 = {}

-- Size: Order Modified Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.size = 1

-- Display: Order Modified Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_14, range, display)

  if show.order_modified_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13 = {}

-- Size: Order Modified Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.size = 1

-- Display: Order Modified Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_13, range, display)

  if show.order_modified_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12 = {}

-- Size: Order Modified Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.size = 1

-- Display: Order Modified Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_12, range, display)

  if show.order_modified_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11 = {}

-- Size: Order Modified Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.size = 1

-- Display: Order Modified Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_11, range, display)

  if show.order_modified_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10 = {}

-- Size: Order Modified Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.size = 1

-- Display: Order Modified Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_10, range, display)

  if show.order_modified_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9 = {}

-- Size: Order Modified Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.size = 1

-- Display: Order Modified Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_9, range, display)

  if show.order_modified_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_echo_text_exists = {}

-- Order Modified Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_stop_px_exists = {}

-- Order Modified Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_routing_inst_exists = {}

-- Order Modified Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_rout_strategy_exists = {}

-- Order Modified Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_route_delivery_method_exists = {}

-- Order Modified Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_ex_destination_exists = {}

-- Order Modified Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8 = {}

-- Size: Order Modified Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.size = 1

-- Display: Order Modified Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Ex Destination Exists|"
  end
  -- Is Order Modified Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Route Delivery Method Exists|"
  end
  -- Is Order Modified Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Rout Strategy Exists|"
  end
  -- Is Order Modified Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Routing Inst Exists|"
  end
  -- Is Order Modified Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Stop Px Exists|"
  end
  -- Is Order Modified Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Echo Text Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ex_destination_exists, buffer(offset, 1))

  -- Order Modified Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_route_delivery_method_exists, buffer(offset, 1))

  -- Order Modified Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_rout_strategy_exists, buffer(offset, 1))

  -- Order Modified Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_routing_inst_exists, buffer(offset, 1))

  -- Order Modified Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_stop_px_exists, buffer(offset, 1))

  -- Order Modified Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_echo_text_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_8, range, display)

  if show.order_modified_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7 = {}

-- Size: Order Modified Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.size = 1

-- Display: Order Modified Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_7, range, display)

  if show.order_modified_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Secondary Order Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_secondary_order_id_exists = {}

-- Order Modified Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_attributed_quote_exists = {}

-- Order Modified Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_ext_exec_inst_exists = {}

-- Order Modified Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6 = {}

-- Size: Order Modified Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.size = 1

-- Display: Order Modified Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Ext Exec Inst Exists|"
  end
  -- Is Order Modified Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Attributed Quote Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Secondary Order Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Secondary Order Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Modified Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_attributed_quote_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Secondary Order Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_secondary_order_id_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_6, range, display)

  if show.order_modified_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Orig Cl Ord Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_orig_cl_ord_id_exists = {}

-- Order Modified Leaves Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_leaves_qty_exists = {}

-- Order Modified Last Shares Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_last_shares_exists = {}

-- Order Modified Last Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_last_px_exists = {}

-- Order Modified Display Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_display_price_exists = {}

-- Order Modified Working Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_working_price_exists = {}

-- Order Modified Base Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_base_liquidity_indicator_exists = {}

-- Order Modified Expire Time Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_expire_time_exists = {}

-- Order Modified Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5 = {}

-- Size: Order Modified Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.size = 1

-- Display: Order Modified Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Expire Time Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Expire Time Exists|"
  end
  -- Is Order Modified Base Liquidity Indicator Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Base Liquidity Indicator Exists|"
  end
  -- Is Order Modified Working Price Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Working Price Exists|"
  end
  -- Is Order Modified Display Price Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Display Price Exists|"
  end
  -- Is Order Modified Last Px Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Last Px Exists|"
  end
  -- Is Order Modified Last Shares Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Last Shares Exists|"
  end
  -- Is Order Modified Leaves Qty Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Leaves Qty Exists|"
  end
  -- Is Order Modified Orig Cl Ord Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Orig Cl Ord Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Modified Expire Time Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_expire_time_exists, buffer(offset, 1))

  -- Order Modified Base Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_base_liquidity_indicator_exists, buffer(offset, 1))

  -- Order Modified Working Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_working_price_exists, buffer(offset, 1))

  -- Order Modified Display Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_display_price_exists, buffer(offset, 1))

  -- Order Modified Last Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_last_px_exists, buffer(offset, 1))

  -- Order Modified Last Shares Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_last_shares_exists, buffer(offset, 1))

  -- Order Modified Leaves Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_leaves_qty_exists, buffer(offset, 1))

  -- Order Modified Orig Cl Ord Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_orig_cl_ord_id_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_5, range, display)

  if show.order_modified_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4 = {}

-- Size: Order Modified Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.size = 1

-- Display: Order Modified Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Reserved Bit 7 Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Reserved Bit 2 Exists|"
  end
  -- Is Order Modified Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_4, range, display)

  if show.order_modified_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_account_exists = {}

-- Order Modified Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_clearing_firm_exists = {}

-- Order Modified Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_clearing_account_exists = {}

-- Order Modified Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_display_indicator_exists = {}

-- Order Modified Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_max_floor_exists = {}

-- Order Modified Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_discretion_amount_exists = {}

-- Order Modified Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_order_qty_exists = {}

-- Order Modified Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_prevent_match_exists = {}

-- Order Modified Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3 = {}

-- Size: Order Modified Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.size = 1

-- Display: Order Modified Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Prevent Match Exists|"
  end
  -- Is Order Modified Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Order Qty Exists|"
  end
  -- Is Order Modified Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Discretion Amount Exists|"
  end
  -- Is Order Modified Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Max Floor Exists|"
  end
  -- Is Order Modified Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Display Indicator Exists|"
  end
  -- Is Order Modified Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Clearing Account Exists|"
  end
  -- Is Order Modified Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Clearing Firm Exists|"
  end
  -- Is Order Modified Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Modified Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_prevent_match_exists, buffer(offset, 1))

  -- Order Modified Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_order_qty_exists, buffer(offset, 1))

  -- Order Modified Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_discretion_amount_exists, buffer(offset, 1))

  -- Order Modified Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_max_floor_exists, buffer(offset, 1))

  -- Order Modified Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_display_indicator_exists, buffer(offset, 1))

  -- Order Modified Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_clearing_account_exists, buffer(offset, 1))

  -- Order Modified Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_clearing_firm_exists, buffer(offset, 1))

  -- Order Modified Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_account_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_3, range, display)

  if show.order_modified_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_symbol_exists = {}

-- Order Modified Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_symbol_sfx_exists = {}

-- Order Modified Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_capacity_exists = {}

-- Order Modified Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2 = {}

-- Size: Order Modified Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.size = 1

-- Display: Order Modified Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Capacity Exists|"
  end
  -- Is Order Modified Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Reserved Bit 6 Exists|"
  end
  -- Is Order Modified Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Reserved Bit 5 Exists|"
  end
  -- Is Order Modified Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Reserved Bit 4 Exists|"
  end
  -- Is Order Modified Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Reserved Bit 3 Exists|"
  end
  -- Is Order Modified Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Symbol Sfx Exists|"
  end
  -- Is Order Modified Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_capacity_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Modified Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Modified Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_symbol_sfx_exists, buffer(offset, 1))

  -- Order Modified Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_2, range, display)

  if show.order_modified_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_side_exists = {}

-- Order Modified Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_peg_difference_exists = {}

-- Order Modified Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_price_exists = {}

-- Order Modified Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_exec_inst_exists = {}

-- Order Modified Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_ord_type_exists = {}

-- Order Modified Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_time_in_force_exists = {}

-- Order Modified Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_min_qty_exists = {}

-- Order Modified Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1 = {}

-- Size: Order Modified Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.size = 1

-- Display: Order Modified Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Modified Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Modified Reserved Bit 8 Exists|"
  end
  -- Is Order Modified Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Modified Min Qty Exists|"
  end
  -- Is Order Modified Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Modified Time In Force Exists|"
  end
  -- Is Order Modified Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Modified Ord Type Exists|"
  end
  -- Is Order Modified Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Modified Exec Inst Exists|"
  end
  -- Is Order Modified Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Modified Price Exists|"
  end
  -- Is Order Modified Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Modified Peg Difference Exists|"
  end
  -- Is Order Modified Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Modified Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Modified Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Modified Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Modified Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_min_qty_exists, buffer(offset, 1))

  -- Order Modified Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_time_in_force_exists, buffer(offset, 1))

  -- Order Modified Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_ord_type_exists, buffer(offset, 1))

  -- Order Modified Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_exec_inst_exists, buffer(offset, 1))

  -- Order Modified Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_price_exists, buffer(offset, 1))

  -- Order Modified Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_peg_difference_exists, buffer(offset, 1))

  -- Order Modified Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_side_exists, buffer(offset, 1))
end

-- Dissect: Order Modified Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_byte_1, range, display)

  if show.order_modified_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Modified Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count = {}

-- Size: Order Modified Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.size = 1

-- Display: Order Modified Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.display = function(value)
  return "Order Modified Bitfield Count: "..value
end

-- Dissect: Order Modified Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Modified Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields = {}

-- Display: Order Modified Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Modified Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_modified_optional_fields)
  local index = offset

  -- Order Modified Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_modified_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Modified Byte 1
  local order_modified_byte_1_exists = order_modified_bitfield_count >= 1

  -- Runtime optional field: Order Modified Byte 1
  if order_modified_byte_1_exists then

    -- Order Modified Byte 1: Struct of 8 fields
    index, order_modified_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 2
  local order_modified_byte_2_exists = order_modified_bitfield_count >= 2

  -- Runtime optional field: Order Modified Byte 2
  if order_modified_byte_2_exists then

    -- Order Modified Byte 2: Struct of 8 fields
    index, order_modified_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 3
  local order_modified_byte_3_exists = order_modified_bitfield_count >= 3

  -- Runtime optional field: Order Modified Byte 3
  if order_modified_byte_3_exists then

    -- Order Modified Byte 3: Struct of 8 fields
    index, order_modified_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 4
  local order_modified_byte_4_exists = order_modified_bitfield_count >= 4

  -- Runtime optional field: Order Modified Byte 4
  if order_modified_byte_4_exists then

    -- Order Modified Byte 4: Struct of 8 fields
    index, order_modified_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 5
  local order_modified_byte_5_exists = order_modified_bitfield_count >= 5

  -- Runtime optional field: Order Modified Byte 5
  if order_modified_byte_5_exists then

    -- Order Modified Byte 5: Struct of 8 fields
    index, order_modified_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 6
  local order_modified_byte_6_exists = order_modified_bitfield_count >= 6

  -- Runtime optional field: Order Modified Byte 6
  if order_modified_byte_6_exists then

    -- Order Modified Byte 6: Struct of 8 fields
    index, order_modified_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 7
  local order_modified_byte_7_exists = order_modified_bitfield_count >= 7

  -- Runtime optional field: Order Modified Byte 7
  if order_modified_byte_7_exists then

    -- Order Modified Byte 7: Struct of 8 fields
    index, order_modified_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 8
  local order_modified_byte_8_exists = order_modified_bitfield_count >= 8

  -- Runtime optional field: Order Modified Byte 8
  if order_modified_byte_8_exists then

    -- Order Modified Byte 8: Struct of 8 fields
    index, order_modified_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 9
  local order_modified_byte_9_exists = order_modified_bitfield_count >= 9

  -- Runtime optional field: Order Modified Byte 9
  if order_modified_byte_9_exists then

    -- Order Modified Byte 9: Struct of 8 fields
    index, order_modified_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 10
  local order_modified_byte_10_exists = order_modified_bitfield_count >= 10

  -- Runtime optional field: Order Modified Byte 10
  if order_modified_byte_10_exists then

    -- Order Modified Byte 10: Struct of 8 fields
    index, order_modified_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 11
  local order_modified_byte_11_exists = order_modified_bitfield_count >= 11

  -- Runtime optional field: Order Modified Byte 11
  if order_modified_byte_11_exists then

    -- Order Modified Byte 11: Struct of 8 fields
    index, order_modified_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 12
  local order_modified_byte_12_exists = order_modified_bitfield_count >= 12

  -- Runtime optional field: Order Modified Byte 12
  if order_modified_byte_12_exists then

    -- Order Modified Byte 12: Struct of 8 fields
    index, order_modified_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 13
  local order_modified_byte_13_exists = order_modified_bitfield_count >= 13

  -- Runtime optional field: Order Modified Byte 13
  if order_modified_byte_13_exists then

    -- Order Modified Byte 13: Struct of 8 fields
    index, order_modified_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 14
  local order_modified_byte_14_exists = order_modified_bitfield_count >= 14

  -- Runtime optional field: Order Modified Byte 14
  if order_modified_byte_14_exists then

    -- Order Modified Byte 14: Struct of 8 fields
    index, order_modified_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 15
  local order_modified_byte_15_exists = order_modified_bitfield_count >= 15

  -- Runtime optional field: Order Modified Byte 15
  if order_modified_byte_15_exists then

    -- Order Modified Byte 15: Struct of 8 fields
    index, order_modified_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 16
  local order_modified_byte_16_exists = order_modified_bitfield_count >= 16

  -- Runtime optional field: Order Modified Byte 16
  if order_modified_byte_16_exists then

    -- Order Modified Byte 16: Struct of 8 fields
    index, order_modified_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 17
  local order_modified_byte_17_exists = order_modified_bitfield_count >= 17

  -- Runtime optional field: Order Modified Byte 17
  if order_modified_byte_17_exists then

    -- Order Modified Byte 17: Struct of 8 fields
    index, order_modified_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_modified_bitfield_count >= 1 and order_modified_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_modified_bitfield_count >= 2 and order_modified_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_modified_bitfield_count >= 2 and order_modified_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_modified_bitfield_count >= 3 and order_modified_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Orig Cl Ord Id
  local orig_cl_ord_id_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(7) > 0

  -- Runtime optional field: Orig Cl Ord Id
  if orig_cl_ord_id_exists then
    index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Leaves Qty
  local leaves_qty_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(6) > 0

  -- Runtime optional field: Leaves Qty
  if leaves_qty_exists then
    index, leaves_qty = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Shares
  local last_shares_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(5) > 0

  -- Runtime optional field: Last Shares
  if last_shares_exists then
    index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Px
  local last_px_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(4) > 0

  -- Runtime optional field: Last Px
  if last_px_exists then
    index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Price
  local display_price_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(3) > 0

  -- Runtime optional field: Display Price
  if display_price_exists then
    index, display_price = cboe_edgx_equities_orderentry_boe_v2_3.display_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Working Price
  local working_price_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(2) > 0

  -- Runtime optional field: Working Price
  if working_price_exists then
    index, working_price = cboe_edgx_equities_orderentry_boe_v2_3.working_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Base Liquidity Indicator
  local base_liquidity_indicator_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(1) > 0

  -- Runtime optional field: Base Liquidity Indicator
  if base_liquidity_indicator_exists then
    index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Expire Time
  local expire_time_exists = order_modified_bitfield_count >= 5 and order_modified_byte_5:bitfield(0) > 0

  -- Runtime optional field: Expire Time
  if expire_time_exists then
    index, expire_time = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Secondary Order Id
  local secondary_order_id_exists = order_modified_bitfield_count >= 6 and order_modified_byte_6:bitfield(7) > 0

  -- Runtime optional field: Secondary Order Id
  if secondary_order_id_exists then
    index, secondary_order_id = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_modified_bitfield_count >= 6 and order_modified_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_modified_bitfield_count >= 6 and order_modified_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_modified_bitfield_count >= 8 and order_modified_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Modified Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_modified_optional_fields)
  local index = offset + size_of_order_modified_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_modified_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.fields(buffer, offset, packet, parent, size_of_order_modified_optional_fields)
    parent:set_len(size_of_order_modified_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.fields(buffer, offset, packet, parent, size_of_order_modified_optional_fields)

    return index
  end
end

-- Order Modified Message
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message = {}

-- Read runtime size of: Order Modified Message
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Modified Message
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Modified Message
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.fields = function(buffer, offset, packet, parent, size_of_order_modified_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Order Id: 8 Byte Unsigned Fixed Width Integer
  index, order_id = cboe_edgx_equities_orderentry_boe_v2_3.order_id.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Modified Optional Fields
  local size_of_order_modified_optional_fields = message_length - (index - offset) - 8

  -- Order Modified Optional Fields: Struct of 52 fields
  index, order_modified_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_optional_fields.dissect(buffer, index, packet, parent, size_of_order_modified_optional_fields)

  return index
end

-- Dissect: Order Modified Message
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_modified_message = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_modified_message then
    local range = buffer(offset, size_of_order_modified_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.fields(buffer, offset, packet, parent, size_of_order_modified_message)

  return offset + size_of_order_modified_message
end

-- Order Rejected Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_1_exists = {}

-- Order Rejected Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_2_exists = {}

-- Order Rejected Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_3_exists = {}

-- Order Rejected Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_4_exists = {}

-- Order Rejected Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_5_exists = {}

-- Order Rejected Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_6_exists = {}

-- Order Rejected Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_7_exists = {}

-- Order Rejected Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_reserved_bit_8_exists = {}

-- Order Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17 = {}

-- Size: Order Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.size = 1

-- Display: Order Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_17, range, display)

  if show.order_rejected_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16 = {}

-- Size: Order Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.size = 1

-- Display: Order Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_16, range, display)

  if show.order_rejected_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15 = {}

-- Size: Order Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.size = 1

-- Display: Order Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_15, range, display)

  if show.order_rejected_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14 = {}

-- Size: Order Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.size = 1

-- Display: Order Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_14, range, display)

  if show.order_rejected_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13 = {}

-- Size: Order Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.size = 1

-- Display: Order Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_13, range, display)

  if show.order_rejected_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12 = {}

-- Size: Order Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.size = 1

-- Display: Order Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_12, range, display)

  if show.order_rejected_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11 = {}

-- Size: Order Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.size = 1

-- Display: Order Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_11, range, display)

  if show.order_rejected_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10 = {}

-- Size: Order Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.size = 1

-- Display: Order Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_10, range, display)

  if show.order_rejected_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9 = {}

-- Size: Order Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.size = 1

-- Display: Order Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_9, range, display)

  if show.order_rejected_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_echo_text_exists = {}

-- Order Rejected Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_stop_px_exists = {}

-- Order Rejected Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_routing_inst_exists = {}

-- Order Rejected Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_rout_strategy_exists = {}

-- Order Rejected Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_route_delivery_method_exists = {}

-- Order Rejected Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_ex_destination_exists = {}

-- Order Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8 = {}

-- Size: Order Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.size = 1

-- Display: Order Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Ex Destination Exists|"
  end
  -- Is Order Rejected Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Route Delivery Method Exists|"
  end
  -- Is Order Rejected Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Rout Strategy Exists|"
  end
  -- Is Order Rejected Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Routing Inst Exists|"
  end
  -- Is Order Rejected Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Stop Px Exists|"
  end
  -- Is Order Rejected Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Echo Text Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ex_destination_exists, buffer(offset, 1))

  -- Order Rejected Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_route_delivery_method_exists, buffer(offset, 1))

  -- Order Rejected Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_rout_strategy_exists, buffer(offset, 1))

  -- Order Rejected Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_routing_inst_exists, buffer(offset, 1))

  -- Order Rejected Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_stop_px_exists, buffer(offset, 1))

  -- Order Rejected Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_echo_text_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_8, range, display)

  if show.order_rejected_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7 = {}

-- Size: Order Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.size = 1

-- Display: Order Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_7, range, display)

  if show.order_rejected_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Secondary Order Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_secondary_order_id_exists = {}

-- Order Rejected Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_attributed_quote_exists = {}

-- Order Rejected Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_ext_exec_inst_exists = {}

-- Order Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6 = {}

-- Size: Order Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.size = 1

-- Display: Order Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Ext Exec Inst Exists|"
  end
  -- Is Order Rejected Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Attributed Quote Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Secondary Order Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Secondary Order Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Rejected Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_attributed_quote_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Secondary Order Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_secondary_order_id_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_6, range, display)

  if show.order_rejected_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5 = {}

-- Size: Order Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.size = 1

-- Display: Order Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_5, range, display)

  if show.order_rejected_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4 = {}

-- Size: Order Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.size = 1

-- Display: Order Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Reserved Bit 7 Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Reserved Bit 2 Exists|"
  end
  -- Is Order Rejected Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_4, range, display)

  if show.order_rejected_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_account_exists = {}

-- Order Rejected Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_clearing_firm_exists = {}

-- Order Rejected Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_clearing_account_exists = {}

-- Order Rejected Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_display_indicator_exists = {}

-- Order Rejected Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_max_floor_exists = {}

-- Order Rejected Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_discretion_amount_exists = {}

-- Order Rejected Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_order_qty_exists = {}

-- Order Rejected Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_prevent_match_exists = {}

-- Order Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3 = {}

-- Size: Order Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.size = 1

-- Display: Order Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Prevent Match Exists|"
  end
  -- Is Order Rejected Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Order Qty Exists|"
  end
  -- Is Order Rejected Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Discretion Amount Exists|"
  end
  -- Is Order Rejected Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Max Floor Exists|"
  end
  -- Is Order Rejected Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Display Indicator Exists|"
  end
  -- Is Order Rejected Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Clearing Account Exists|"
  end
  -- Is Order Rejected Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Clearing Firm Exists|"
  end
  -- Is Order Rejected Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_prevent_match_exists, buffer(offset, 1))

  -- Order Rejected Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_order_qty_exists, buffer(offset, 1))

  -- Order Rejected Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_discretion_amount_exists, buffer(offset, 1))

  -- Order Rejected Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_max_floor_exists, buffer(offset, 1))

  -- Order Rejected Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_display_indicator_exists, buffer(offset, 1))

  -- Order Rejected Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_clearing_account_exists, buffer(offset, 1))

  -- Order Rejected Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_clearing_firm_exists, buffer(offset, 1))

  -- Order Rejected Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_account_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_3, range, display)

  if show.order_rejected_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_symbol_exists = {}

-- Order Rejected Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_symbol_sfx_exists = {}

-- Order Rejected Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_capacity_exists = {}

-- Order Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2 = {}

-- Size: Order Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.size = 1

-- Display: Order Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Capacity Exists|"
  end
  -- Is Order Rejected Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Reserved Bit 6 Exists|"
  end
  -- Is Order Rejected Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Reserved Bit 5 Exists|"
  end
  -- Is Order Rejected Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Reserved Bit 4 Exists|"
  end
  -- Is Order Rejected Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Reserved Bit 3 Exists|"
  end
  -- Is Order Rejected Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Symbol Sfx Exists|"
  end
  -- Is Order Rejected Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_capacity_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Rejected Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Rejected Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_symbol_sfx_exists, buffer(offset, 1))

  -- Order Rejected Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_2, range, display)

  if show.order_rejected_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_side_exists = {}

-- Order Rejected Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_peg_difference_exists = {}

-- Order Rejected Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_price_exists = {}

-- Order Rejected Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_exec_inst_exists = {}

-- Order Rejected Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_ord_type_exists = {}

-- Order Rejected Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_time_in_force_exists = {}

-- Order Rejected Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_min_qty_exists = {}

-- Order Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1 = {}

-- Size: Order Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.size = 1

-- Display: Order Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Rejected Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Rejected Reserved Bit 8 Exists|"
  end
  -- Is Order Rejected Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Rejected Min Qty Exists|"
  end
  -- Is Order Rejected Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Rejected Time In Force Exists|"
  end
  -- Is Order Rejected Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Rejected Ord Type Exists|"
  end
  -- Is Order Rejected Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Rejected Exec Inst Exists|"
  end
  -- Is Order Rejected Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Rejected Price Exists|"
  end
  -- Is Order Rejected Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Rejected Peg Difference Exists|"
  end
  -- Is Order Rejected Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Rejected Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Rejected Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Rejected Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_min_qty_exists, buffer(offset, 1))

  -- Order Rejected Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_time_in_force_exists, buffer(offset, 1))

  -- Order Rejected Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_ord_type_exists, buffer(offset, 1))

  -- Order Rejected Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_exec_inst_exists, buffer(offset, 1))

  -- Order Rejected Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_price_exists, buffer(offset, 1))

  -- Order Rejected Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_peg_difference_exists, buffer(offset, 1))

  -- Order Rejected Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_side_exists, buffer(offset, 1))
end

-- Dissect: Order Rejected Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_byte_1, range, display)

  if show.order_rejected_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count = {}

-- Size: Order Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.size = 1

-- Display: Order Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.display = function(value)
  return "Order Rejected Bitfield Count: "..value
end

-- Dissect: Order Rejected Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields = {}

-- Display: Order Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_rejected_optional_fields)
  local index = offset

  -- Order Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Rejected Byte 1
  local order_rejected_byte_1_exists = order_rejected_bitfield_count >= 1

  -- Runtime optional field: Order Rejected Byte 1
  if order_rejected_byte_1_exists then

    -- Order Rejected Byte 1: Struct of 8 fields
    index, order_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 2
  local order_rejected_byte_2_exists = order_rejected_bitfield_count >= 2

  -- Runtime optional field: Order Rejected Byte 2
  if order_rejected_byte_2_exists then

    -- Order Rejected Byte 2: Struct of 8 fields
    index, order_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 3
  local order_rejected_byte_3_exists = order_rejected_bitfield_count >= 3

  -- Runtime optional field: Order Rejected Byte 3
  if order_rejected_byte_3_exists then

    -- Order Rejected Byte 3: Struct of 8 fields
    index, order_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 4
  local order_rejected_byte_4_exists = order_rejected_bitfield_count >= 4

  -- Runtime optional field: Order Rejected Byte 4
  if order_rejected_byte_4_exists then

    -- Order Rejected Byte 4: Struct of 8 fields
    index, order_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 5
  local order_rejected_byte_5_exists = order_rejected_bitfield_count >= 5

  -- Runtime optional field: Order Rejected Byte 5
  if order_rejected_byte_5_exists then

    -- Order Rejected Byte 5: Struct of 8 fields
    index, order_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 6
  local order_rejected_byte_6_exists = order_rejected_bitfield_count >= 6

  -- Runtime optional field: Order Rejected Byte 6
  if order_rejected_byte_6_exists then

    -- Order Rejected Byte 6: Struct of 8 fields
    index, order_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 7
  local order_rejected_byte_7_exists = order_rejected_bitfield_count >= 7

  -- Runtime optional field: Order Rejected Byte 7
  if order_rejected_byte_7_exists then

    -- Order Rejected Byte 7: Struct of 8 fields
    index, order_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 8
  local order_rejected_byte_8_exists = order_rejected_bitfield_count >= 8

  -- Runtime optional field: Order Rejected Byte 8
  if order_rejected_byte_8_exists then

    -- Order Rejected Byte 8: Struct of 8 fields
    index, order_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 9
  local order_rejected_byte_9_exists = order_rejected_bitfield_count >= 9

  -- Runtime optional field: Order Rejected Byte 9
  if order_rejected_byte_9_exists then

    -- Order Rejected Byte 9: Struct of 8 fields
    index, order_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 10
  local order_rejected_byte_10_exists = order_rejected_bitfield_count >= 10

  -- Runtime optional field: Order Rejected Byte 10
  if order_rejected_byte_10_exists then

    -- Order Rejected Byte 10: Struct of 8 fields
    index, order_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 11
  local order_rejected_byte_11_exists = order_rejected_bitfield_count >= 11

  -- Runtime optional field: Order Rejected Byte 11
  if order_rejected_byte_11_exists then

    -- Order Rejected Byte 11: Struct of 8 fields
    index, order_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 12
  local order_rejected_byte_12_exists = order_rejected_bitfield_count >= 12

  -- Runtime optional field: Order Rejected Byte 12
  if order_rejected_byte_12_exists then

    -- Order Rejected Byte 12: Struct of 8 fields
    index, order_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 13
  local order_rejected_byte_13_exists = order_rejected_bitfield_count >= 13

  -- Runtime optional field: Order Rejected Byte 13
  if order_rejected_byte_13_exists then

    -- Order Rejected Byte 13: Struct of 8 fields
    index, order_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 14
  local order_rejected_byte_14_exists = order_rejected_bitfield_count >= 14

  -- Runtime optional field: Order Rejected Byte 14
  if order_rejected_byte_14_exists then

    -- Order Rejected Byte 14: Struct of 8 fields
    index, order_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 15
  local order_rejected_byte_15_exists = order_rejected_bitfield_count >= 15

  -- Runtime optional field: Order Rejected Byte 15
  if order_rejected_byte_15_exists then

    -- Order Rejected Byte 15: Struct of 8 fields
    index, order_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 16
  local order_rejected_byte_16_exists = order_rejected_bitfield_count >= 16

  -- Runtime optional field: Order Rejected Byte 16
  if order_rejected_byte_16_exists then

    -- Order Rejected Byte 16: Struct of 8 fields
    index, order_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 17
  local order_rejected_byte_17_exists = order_rejected_bitfield_count >= 17

  -- Runtime optional field: Order Rejected Byte 17
  if order_rejected_byte_17_exists then

    -- Order Rejected Byte 17: Struct of 8 fields
    index, order_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_rejected_bitfield_count >= 1 and order_rejected_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_rejected_bitfield_count >= 2 and order_rejected_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_rejected_bitfield_count >= 2 and order_rejected_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = order_rejected_bitfield_count >= 2 and order_rejected_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_rejected_bitfield_count >= 3 and order_rejected_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Secondary Order Id
  local secondary_order_id_exists = order_rejected_bitfield_count >= 6 and order_rejected_byte_6:bitfield(7) > 0

  -- Runtime optional field: Secondary Order Id
  if secondary_order_id_exists then
    index, secondary_order_id = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_rejected_bitfield_count >= 6 and order_rejected_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_rejected_bitfield_count >= 6 and order_rejected_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_rejected_bitfield_count >= 8 and order_rejected_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Rejected Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_rejected_optional_fields)
  local index = offset + size_of_order_rejected_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_rejected_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_order_rejected_optional_fields)
    parent:set_len(size_of_order_rejected_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.fields(buffer, offset, packet, parent, size_of_order_rejected_optional_fields)

    return index
  end
end

-- Order Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason = {}

-- Size: Order Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.size = 1

-- Display: Order Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.display = function(value)
  if value == "A" then
    return "Order Reject Reason: Admin (A)"
  end
  if value == "D" then
    return "Order Reject Reason: Duplicate Identifier (D)"
  end
  if value == "E" then
    return "Order Reject Reason: Size Reduction Due To Swp Restatement (E)"
  end
  if value == "F" then
    return "Order Reject Reason: Failed To Quote (F)"
  end
  if value == "H" then
    return "Order Reject Reason: Halted (H)"
  end
  if value == "I" then
    return "Order Reject Reason: Incorrect Data Center (I)"
  end
  if value == "J" then
    return "Order Reject Reason: Too Late To Cancel (J)"
  end
  if value == "K" then
    return "Order Reject Reason: Order Rate Threshold Exceeded (K)"
  end
  if value == "L" then
    return "Order Reject Reason: Order Would Lock Or Cross Nbbo (L)"
  end
  if value == "M" then
    return "Order Reject Reason: Order Size Exceeded (M)"
  end
  if value == "N" then
    return "Order Reject Reason: Ran Out Of Liquidity To Execute Against (N)"
  end
  if value == "O" then
    return "Order Reject Reason: Cl Ord Id Doesnt Match A Known Order (O)"
  end
  if value == "P" then
    return "Order Reject Reason: Cant Modify An Order That Is Pending Fill (P)"
  end
  if value == "Q" then
    return "Order Reject Reason: Waiting For First Trade (Q)"
  end
  if value == "R" then
    return "Order Reject Reason: Routing Unavailable (R)"
  end
  if value == "S" then
    return "Order Reject Reason: Short Sale Price Violation (S)"
  end
  if value == "T" then
    return "Order Reject Reason: Fill Would Trade Through The Nbbo (T)"
  end
  if value == "U" then
    return "Order Reject Reason: User Requested (U)"
  end
  if value == "V" then
    return "Order Reject Reason: Would Wash (V)"
  end
  if value == "W" then
    return "Order Reject Reason: Add Liquidity Only Order Would Remove (W)"
  end
  if value == "X" then
    return "Order Reject Reason: Order Expired (X)"
  end
  if value == "Y" then
    return "Order Reject Reason: Symbol Not Supported (Y)"
  end
  if value == "Z" then
    return "Order Reject Reason: Unforeseen Reason (Z)"
  end
  if value == "f" then
    return "Order Reject Reason: Risk Management Mpid Or Custom Group Id Level (f)"
  end
  if value == "m" then
    return "Order Reject Reason: Market Access Risk Limit Exceeded (m)"
  end
  if value == "o" then
    return "Order Reject Reason: Max Open Orders Count Exceeded (o)"
  end
  if value == "r" then
    return "Order Reject Reason: Reserve Reload (r)"
  end
  if value == "s" then
    return "Order Reject Reason: Risk Management Risk Root Level (s)"
  end
  if value == "u" then
    return "Order Reject Reason: Limit Up Limit Down (u)"
  end
  if value == "w" then
    return "Order Reject Reason: Would Remove On Unslide (w)"
  end
  if value == "x" then
    return "Order Reject Reason: Crossed Market (x)"
  end
  if value == "y" then
    return "Order Reject Reason: Order Received By Cboe During Replay (y)"
  end

  return "Order Reject Reason: Unknown("..value..")"
end

-- Dissect: Order Reject Reason
cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_reject_reason, range, value, display)

  return offset + length, value
end

-- Order Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message = {}

-- Read runtime size of: Order Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.fields = function(buffer, offset, packet, parent, size_of_order_rejected_message)
  local index = offset

  -- Transaction Time: 8 Byte Unsigned Fixed Width Integer
  index, transaction_time = cboe_edgx_equities_orderentry_boe_v2_3.transaction_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Order Reject Reason: 1 Byte Ascii String Enum with 32 values
  index, order_reject_reason = cboe_edgx_equities_orderentry_boe_v2_3.order_reject_reason.dissect(buffer, index, packet, parent)

  -- Text: 60 Byte Ascii String
  index, text = cboe_edgx_equities_orderentry_boe_v2_3.text.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Rejected Optional Fields
  local size_of_order_rejected_optional_fields = message_length - (index - offset) - 8

  -- Order Rejected Optional Fields: Struct of 45 fields
  index, order_rejected_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_optional_fields.dissect(buffer, index, packet, parent, size_of_order_rejected_optional_fields)

  return index
end

-- Dissect: Order Rejected Message
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_rejected_message = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_rejected_message then
    local range = buffer(offset, size_of_order_rejected_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.fields(buffer, offset, packet, parent, size_of_order_rejected_message)

  return offset + size_of_order_rejected_message
end

-- Order Acknowledgment Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_1_exists = {}

-- Order Acknowledgment Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_2_exists = {}

-- Order Acknowledgment Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_3_exists = {}

-- Order Acknowledgment Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_4_exists = {}

-- Order Acknowledgment Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_5_exists = {}

-- Order Acknowledgment Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_6_exists = {}

-- Order Acknowledgment Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_7_exists = {}

-- Order Acknowledgment Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_reserved_bit_8_exists = {}

-- Order Acknowledgment Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17 = {}

-- Size: Order Acknowledgment Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.size = 1

-- Display: Order Acknowledgment Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 17
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_17, range, display)

  if show.order_acknowledgment_byte_17 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16 = {}

-- Size: Order Acknowledgment Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.size = 1

-- Display: Order Acknowledgment Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 16
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_16, range, display)

  if show.order_acknowledgment_byte_16 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Mass Cancelled Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_mass_cancelled_exists = {}

-- Order Acknowledgment Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15 = {}

-- Size: Order Acknowledgment Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.size = 1

-- Display: Order Acknowledgment Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Mass Cancelled Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Mass Cancelled Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Mass Cancelled Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_mass_cancelled_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 15
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_15, range, display)

  if show.order_acknowledgment_byte_15 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14 = {}

-- Size: Order Acknowledgment Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.size = 1

-- Display: Order Acknowledgment Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 14
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_14, range, display)

  if show.order_acknowledgment_byte_14 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13 = {}

-- Size: Order Acknowledgment Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.size = 1

-- Display: Order Acknowledgment Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 13
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_13, range, display)

  if show.order_acknowledgment_byte_13 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12 = {}

-- Size: Order Acknowledgment Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.size = 1

-- Display: Order Acknowledgment Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 12
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_12, range, display)

  if show.order_acknowledgment_byte_12 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11 = {}

-- Size: Order Acknowledgment Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.size = 1

-- Display: Order Acknowledgment Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 11
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_11, range, display)

  if show.order_acknowledgment_byte_11 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10 = {}

-- Size: Order Acknowledgment Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.size = 1

-- Display: Order Acknowledgment Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 10
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_10, range, display)

  if show.order_acknowledgment_byte_10 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9 = {}

-- Size: Order Acknowledgment Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.size = 1

-- Display: Order Acknowledgment Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 9
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_9, range, display)

  if show.order_acknowledgment_byte_9 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Fee Code Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_fee_code_exists = {}

-- Order Acknowledgment Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_echo_text_exists = {}

-- Order Acknowledgment Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_stop_px_exists = {}

-- Order Acknowledgment Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_routing_inst_exists = {}

-- Order Acknowledgment Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_rout_strategy_exists = {}

-- Order Acknowledgment Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_route_delivery_method_exists = {}

-- Order Acknowledgment Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_ex_destination_exists = {}

-- Order Acknowledgment Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8 = {}

-- Size: Order Acknowledgment Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.size = 1

-- Display: Order Acknowledgment Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Ex Destination Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Ex Destination Exists|"
  end
  -- Is Order Acknowledgment Route Delivery Method Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Route Delivery Method Exists|"
  end
  -- Is Order Acknowledgment Rout Strategy Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Rout Strategy Exists|"
  end
  -- Is Order Acknowledgment Routing Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Routing Inst Exists|"
  end
  -- Is Order Acknowledgment Stop Px Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Stop Px Exists|"
  end
  -- Is Order Acknowledgment Echo Text Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Echo Text Exists|"
  end
  -- Is Order Acknowledgment Fee Code Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Fee Code Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ex_destination_exists, buffer(offset, 1))

  -- Order Acknowledgment Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_route_delivery_method_exists, buffer(offset, 1))

  -- Order Acknowledgment Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_rout_strategy_exists, buffer(offset, 1))

  -- Order Acknowledgment Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_routing_inst_exists, buffer(offset, 1))

  -- Order Acknowledgment Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_stop_px_exists, buffer(offset, 1))

  -- Order Acknowledgment Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_echo_text_exists, buffer(offset, 1))

  -- Order Acknowledgment Fee Code Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_fee_code_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 8
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_8, range, display)

  if show.order_acknowledgment_byte_8 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Sub Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_sub_liquidity_indicator_exists = {}

-- Order Acknowledgment Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7 = {}

-- Size: Order Acknowledgment Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.size = 1

-- Display: Order Acknowledgment Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Sub Liquidity Indicator Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Sub Liquidity Indicator Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Sub Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_sub_liquidity_indicator_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_7, range, display)

  if show.order_acknowledgment_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Secondary Order Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_secondary_order_id_exists = {}

-- Order Acknowledgment Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_attributed_quote_exists = {}

-- Order Acknowledgment Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_ext_exec_inst_exists = {}

-- Order Acknowledgment Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6 = {}

-- Size: Order Acknowledgment Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.size = 1

-- Display: Order Acknowledgment Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Ext Exec Inst Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Ext Exec Inst Exists|"
  end
  -- Is Order Acknowledgment Attributed Quote Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Attributed Quote Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Secondary Order Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Secondary Order Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ext_exec_inst_exists, buffer(offset, 1))

  -- Order Acknowledgment Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_attributed_quote_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Secondary Order Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_secondary_order_id_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_6, range, display)

  if show.order_acknowledgment_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Orig Cl Ord Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_orig_cl_ord_id_exists = {}

-- Order Acknowledgment Leaves Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_leaves_qty_exists = {}

-- Order Acknowledgment Last Shares Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_last_shares_exists = {}

-- Order Acknowledgment Last Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_last_px_exists = {}

-- Order Acknowledgment Display Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_display_price_exists = {}

-- Order Acknowledgment Working Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_working_price_exists = {}

-- Order Acknowledgment Base Liquidity Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_base_liquidity_indicator_exists = {}

-- Order Acknowledgment Expire Time Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_expire_time_exists = {}

-- Order Acknowledgment Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5 = {}

-- Size: Order Acknowledgment Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.size = 1

-- Display: Order Acknowledgment Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Expire Time Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Expire Time Exists|"
  end
  -- Is Order Acknowledgment Base Liquidity Indicator Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Base Liquidity Indicator Exists|"
  end
  -- Is Order Acknowledgment Working Price Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Working Price Exists|"
  end
  -- Is Order Acknowledgment Display Price Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Display Price Exists|"
  end
  -- Is Order Acknowledgment Last Px Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Last Px Exists|"
  end
  -- Is Order Acknowledgment Last Shares Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Last Shares Exists|"
  end
  -- Is Order Acknowledgment Leaves Qty Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Leaves Qty Exists|"
  end
  -- Is Order Acknowledgment Orig Cl Ord Id Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Orig Cl Ord Id Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Expire Time Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_expire_time_exists, buffer(offset, 1))

  -- Order Acknowledgment Base Liquidity Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_base_liquidity_indicator_exists, buffer(offset, 1))

  -- Order Acknowledgment Working Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_working_price_exists, buffer(offset, 1))

  -- Order Acknowledgment Display Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_display_price_exists, buffer(offset, 1))

  -- Order Acknowledgment Last Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_last_px_exists, buffer(offset, 1))

  -- Order Acknowledgment Last Shares Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_last_shares_exists, buffer(offset, 1))

  -- Order Acknowledgment Leaves Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_leaves_qty_exists, buffer(offset, 1))

  -- Order Acknowledgment Orig Cl Ord Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_orig_cl_ord_id_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_5, range, display)

  if show.order_acknowledgment_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4 = {}

-- Size: Order Acknowledgment Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.size = 1

-- Display: Order Acknowledgment Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 7 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 2 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_7_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_2_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_4, range, display)

  if show.order_acknowledgment_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_account_exists = {}

-- Order Acknowledgment Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_clearing_firm_exists = {}

-- Order Acknowledgment Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_clearing_account_exists = {}

-- Order Acknowledgment Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_display_indicator_exists = {}

-- Order Acknowledgment Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_max_floor_exists = {}

-- Order Acknowledgment Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_discretion_amount_exists = {}

-- Order Acknowledgment Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_order_qty_exists = {}

-- Order Acknowledgment Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_prevent_match_exists = {}

-- Order Acknowledgment Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3 = {}

-- Size: Order Acknowledgment Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.size = 1

-- Display: Order Acknowledgment Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Prevent Match Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Prevent Match Exists|"
  end
  -- Is Order Acknowledgment Order Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Order Qty Exists|"
  end
  -- Is Order Acknowledgment Discretion Amount Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Discretion Amount Exists|"
  end
  -- Is Order Acknowledgment Max Floor Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Max Floor Exists|"
  end
  -- Is Order Acknowledgment Display Indicator Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Display Indicator Exists|"
  end
  -- Is Order Acknowledgment Clearing Account Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Clearing Account Exists|"
  end
  -- Is Order Acknowledgment Clearing Firm Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Clearing Firm Exists|"
  end
  -- Is Order Acknowledgment Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_prevent_match_exists, buffer(offset, 1))

  -- Order Acknowledgment Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_order_qty_exists, buffer(offset, 1))

  -- Order Acknowledgment Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_discretion_amount_exists, buffer(offset, 1))

  -- Order Acknowledgment Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_max_floor_exists, buffer(offset, 1))

  -- Order Acknowledgment Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_display_indicator_exists, buffer(offset, 1))

  -- Order Acknowledgment Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_clearing_account_exists, buffer(offset, 1))

  -- Order Acknowledgment Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_clearing_firm_exists, buffer(offset, 1))

  -- Order Acknowledgment Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_account_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_3, range, display)

  if show.order_acknowledgment_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_symbol_exists = {}

-- Order Acknowledgment Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_symbol_sfx_exists = {}

-- Order Acknowledgment Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_capacity_exists = {}

-- Order Acknowledgment Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2 = {}

-- Size: Order Acknowledgment Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.size = 1

-- Display: Order Acknowledgment Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Capacity Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 6 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 5 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 4 Exists|"
  end
  -- Is Order Acknowledgment Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 3 Exists|"
  end
  -- Is Order Acknowledgment Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Symbol Sfx Exists|"
  end
  -- Is Order Acknowledgment Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_capacity_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_6_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_5_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_4_exists, buffer(offset, 1))

  -- Order Acknowledgment Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_3_exists, buffer(offset, 1))

  -- Order Acknowledgment Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_symbol_sfx_exists, buffer(offset, 1))

  -- Order Acknowledgment Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_symbol_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_2, range, display)

  if show.order_acknowledgment_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_side_exists = {}

-- Order Acknowledgment Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_peg_difference_exists = {}

-- Order Acknowledgment Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_price_exists = {}

-- Order Acknowledgment Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_exec_inst_exists = {}

-- Order Acknowledgment Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_ord_type_exists = {}

-- Order Acknowledgment Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_time_in_force_exists = {}

-- Order Acknowledgment Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_min_qty_exists = {}

-- Order Acknowledgment Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1 = {}

-- Size: Order Acknowledgment Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.size = 1

-- Display: Order Acknowledgment Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Order Acknowledgment Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Order Acknowledgment Reserved Bit 8 Exists|"
  end
  -- Is Order Acknowledgment Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Order Acknowledgment Min Qty Exists|"
  end
  -- Is Order Acknowledgment Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Order Acknowledgment Time In Force Exists|"
  end
  -- Is Order Acknowledgment Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Order Acknowledgment Ord Type Exists|"
  end
  -- Is Order Acknowledgment Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Order Acknowledgment Exec Inst Exists|"
  end
  -- Is Order Acknowledgment Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Order Acknowledgment Price Exists|"
  end
  -- Is Order Acknowledgment Peg Difference Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Order Acknowledgment Peg Difference Exists|"
  end
  -- Is Order Acknowledgment Side Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Order Acknowledgment Side Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Order Acknowledgment Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.bits = function(buffer, offset, packet, parent)

  -- Order Acknowledgment Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_reserved_bit_8_exists, buffer(offset, 1))

  -- Order Acknowledgment Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_min_qty_exists, buffer(offset, 1))

  -- Order Acknowledgment Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_time_in_force_exists, buffer(offset, 1))

  -- Order Acknowledgment Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_ord_type_exists, buffer(offset, 1))

  -- Order Acknowledgment Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_exec_inst_exists, buffer(offset, 1))

  -- Order Acknowledgment Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_price_exists, buffer(offset, 1))

  -- Order Acknowledgment Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_peg_difference_exists, buffer(offset, 1))

  -- Order Acknowledgment Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_side_exists, buffer(offset, 1))
end

-- Dissect: Order Acknowledgment Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_byte_1, range, display)

  if show.order_acknowledgment_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Order Acknowledgment Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count = {}

-- Size: Order Acknowledgment Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.size = 1

-- Display: Order Acknowledgment Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.display = function(value)
  return "Order Acknowledgment Bitfield Count: "..value
end

-- Dissect: Order Acknowledgment Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_bitfield_count, range, value, display)

  return offset + length, value
end

-- Order Acknowledgment Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields = {}

-- Display: Order Acknowledgment Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Acknowledgment Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.fields = function(buffer, offset, packet, parent, size_of_order_acknowledgment_optional_fields)
  local index = offset

  -- Order Acknowledgment Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_acknowledgment_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Acknowledgment Byte 1
  local order_acknowledgment_byte_1_exists = order_acknowledgment_bitfield_count >= 1

  -- Runtime optional field: Order Acknowledgment Byte 1
  if order_acknowledgment_byte_1_exists then

    -- Order Acknowledgment Byte 1: Struct of 8 fields
    index, order_acknowledgment_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 2
  local order_acknowledgment_byte_2_exists = order_acknowledgment_bitfield_count >= 2

  -- Runtime optional field: Order Acknowledgment Byte 2
  if order_acknowledgment_byte_2_exists then

    -- Order Acknowledgment Byte 2: Struct of 8 fields
    index, order_acknowledgment_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 3
  local order_acknowledgment_byte_3_exists = order_acknowledgment_bitfield_count >= 3

  -- Runtime optional field: Order Acknowledgment Byte 3
  if order_acknowledgment_byte_3_exists then

    -- Order Acknowledgment Byte 3: Struct of 8 fields
    index, order_acknowledgment_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 4
  local order_acknowledgment_byte_4_exists = order_acknowledgment_bitfield_count >= 4

  -- Runtime optional field: Order Acknowledgment Byte 4
  if order_acknowledgment_byte_4_exists then

    -- Order Acknowledgment Byte 4: Struct of 8 fields
    index, order_acknowledgment_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 5
  local order_acknowledgment_byte_5_exists = order_acknowledgment_bitfield_count >= 5

  -- Runtime optional field: Order Acknowledgment Byte 5
  if order_acknowledgment_byte_5_exists then

    -- Order Acknowledgment Byte 5: Struct of 8 fields
    index, order_acknowledgment_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 6
  local order_acknowledgment_byte_6_exists = order_acknowledgment_bitfield_count >= 6

  -- Runtime optional field: Order Acknowledgment Byte 6
  if order_acknowledgment_byte_6_exists then

    -- Order Acknowledgment Byte 6: Struct of 8 fields
    index, order_acknowledgment_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 7
  local order_acknowledgment_byte_7_exists = order_acknowledgment_bitfield_count >= 7

  -- Runtime optional field: Order Acknowledgment Byte 7
  if order_acknowledgment_byte_7_exists then

    -- Order Acknowledgment Byte 7: Struct of 8 fields
    index, order_acknowledgment_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 8
  local order_acknowledgment_byte_8_exists = order_acknowledgment_bitfield_count >= 8

  -- Runtime optional field: Order Acknowledgment Byte 8
  if order_acknowledgment_byte_8_exists then

    -- Order Acknowledgment Byte 8: Struct of 8 fields
    index, order_acknowledgment_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 9
  local order_acknowledgment_byte_9_exists = order_acknowledgment_bitfield_count >= 9

  -- Runtime optional field: Order Acknowledgment Byte 9
  if order_acknowledgment_byte_9_exists then

    -- Order Acknowledgment Byte 9: Struct of 8 fields
    index, order_acknowledgment_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 10
  local order_acknowledgment_byte_10_exists = order_acknowledgment_bitfield_count >= 10

  -- Runtime optional field: Order Acknowledgment Byte 10
  if order_acknowledgment_byte_10_exists then

    -- Order Acknowledgment Byte 10: Struct of 8 fields
    index, order_acknowledgment_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 11
  local order_acknowledgment_byte_11_exists = order_acknowledgment_bitfield_count >= 11

  -- Runtime optional field: Order Acknowledgment Byte 11
  if order_acknowledgment_byte_11_exists then

    -- Order Acknowledgment Byte 11: Struct of 8 fields
    index, order_acknowledgment_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 12
  local order_acknowledgment_byte_12_exists = order_acknowledgment_bitfield_count >= 12

  -- Runtime optional field: Order Acknowledgment Byte 12
  if order_acknowledgment_byte_12_exists then

    -- Order Acknowledgment Byte 12: Struct of 8 fields
    index, order_acknowledgment_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 13
  local order_acknowledgment_byte_13_exists = order_acknowledgment_bitfield_count >= 13

  -- Runtime optional field: Order Acknowledgment Byte 13
  if order_acknowledgment_byte_13_exists then

    -- Order Acknowledgment Byte 13: Struct of 8 fields
    index, order_acknowledgment_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 14
  local order_acknowledgment_byte_14_exists = order_acknowledgment_bitfield_count >= 14

  -- Runtime optional field: Order Acknowledgment Byte 14
  if order_acknowledgment_byte_14_exists then

    -- Order Acknowledgment Byte 14: Struct of 8 fields
    index, order_acknowledgment_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 15
  local order_acknowledgment_byte_15_exists = order_acknowledgment_bitfield_count >= 15

  -- Runtime optional field: Order Acknowledgment Byte 15
  if order_acknowledgment_byte_15_exists then

    -- Order Acknowledgment Byte 15: Struct of 8 fields
    index, order_acknowledgment_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 16
  local order_acknowledgment_byte_16_exists = order_acknowledgment_bitfield_count >= 16

  -- Runtime optional field: Order Acknowledgment Byte 16
  if order_acknowledgment_byte_16_exists then

    -- Order Acknowledgment Byte 16: Struct of 8 fields
    index, order_acknowledgment_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 17
  local order_acknowledgment_byte_17_exists = order_acknowledgment_bitfield_count >= 17

  -- Runtime optional field: Order Acknowledgment Byte 17
  if order_acknowledgment_byte_17_exists then

    -- Order Acknowledgment Byte 17: Struct of 8 fields
    index, order_acknowledgment_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(7) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(6) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = order_acknowledgment_bitfield_count >= 1 and order_acknowledgment_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = order_acknowledgment_bitfield_count >= 2 and order_acknowledgment_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = order_acknowledgment_bitfield_count >= 2 and order_acknowledgment_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = order_acknowledgment_bitfield_count >= 2 and order_acknowledgment_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(6) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(5) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(4) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(3) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(2) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(1) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = order_acknowledgment_bitfield_count >= 3 and order_acknowledgment_byte_3:bitfield(0) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Orig Cl Ord Id
  local orig_cl_ord_id_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(7) > 0

  -- Runtime optional field: Orig Cl Ord Id
  if orig_cl_ord_id_exists then
    index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Leaves Qty
  local leaves_qty_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(6) > 0

  -- Runtime optional field: Leaves Qty
  if leaves_qty_exists then
    index, leaves_qty = cboe_edgx_equities_orderentry_boe_v2_3.leaves_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Shares
  local last_shares_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(5) > 0

  -- Runtime optional field: Last Shares
  if last_shares_exists then
    index, last_shares = cboe_edgx_equities_orderentry_boe_v2_3.last_shares.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Last Px
  local last_px_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(4) > 0

  -- Runtime optional field: Last Px
  if last_px_exists then
    index, last_px = cboe_edgx_equities_orderentry_boe_v2_3.last_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Price
  local display_price_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(3) > 0

  -- Runtime optional field: Display Price
  if display_price_exists then
    index, display_price = cboe_edgx_equities_orderentry_boe_v2_3.display_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Working Price
  local working_price_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(2) > 0

  -- Runtime optional field: Working Price
  if working_price_exists then
    index, working_price = cboe_edgx_equities_orderentry_boe_v2_3.working_price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Base Liquidity Indicator
  local base_liquidity_indicator_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(1) > 0

  -- Runtime optional field: Base Liquidity Indicator
  if base_liquidity_indicator_exists then
    index, base_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.base_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Expire Time
  local expire_time_exists = order_acknowledgment_bitfield_count >= 5 and order_acknowledgment_byte_5:bitfield(0) > 0

  -- Runtime optional field: Expire Time
  if expire_time_exists then
    index, expire_time = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Secondary Order Id
  local secondary_order_id_exists = order_acknowledgment_bitfield_count >= 6 and order_acknowledgment_byte_6:bitfield(7) > 0

  -- Runtime optional field: Secondary Order Id
  if secondary_order_id_exists then
    index, secondary_order_id = cboe_edgx_equities_orderentry_boe_v2_3.secondary_order_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = order_acknowledgment_bitfield_count >= 6 and order_acknowledgment_byte_6:bitfield(4) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = order_acknowledgment_bitfield_count >= 6 and order_acknowledgment_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Sub Liquidity Indicator
  local sub_liquidity_indicator_exists = order_acknowledgment_bitfield_count >= 7 and order_acknowledgment_byte_7:bitfield(7) > 0

  -- Runtime optional field: Sub Liquidity Indicator
  if sub_liquidity_indicator_exists then
    index, sub_liquidity_indicator = cboe_edgx_equities_orderentry_boe_v2_3.sub_liquidity_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(6) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(5) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(4) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(3) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(2) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = order_acknowledgment_bitfield_count >= 8 and order_acknowledgment_byte_8:bitfield(1) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Acknowledgment Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_order_acknowledgment_optional_fields)
  local index = offset + size_of_order_acknowledgment_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.order_acknowledgment_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.fields(buffer, offset, packet, parent, size_of_order_acknowledgment_optional_fields)
    parent:set_len(size_of_order_acknowledgment_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.fields(buffer, offset, packet, parent, size_of_order_acknowledgment_optional_fields)

    return index
  end
end

-- Order Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message = {}

-- Read runtime size of: Order Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Order Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.fields = function(buffer, offset, packet, parent, size_of_order_acknowledgment_message)
  local index = offset

  -- Transact Time: 8 Byte Unsigned Fixed Width Integer
  index, transact_time = cboe_edgx_equities_orderentry_boe_v2_3.transact_time.dissect(buffer, index, packet, parent)

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Order Id: 8 Byte Unsigned Fixed Width Integer
  index, order_id = cboe_edgx_equities_orderentry_boe_v2_3.order_id.dissect(buffer, index, packet, parent)

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Order Acknowledgment Optional Fields
  local size_of_order_acknowledgment_optional_fields = message_length - (index - offset) - 8

  -- Order Acknowledgment Optional Fields: Struct of 54 fields
  index, order_acknowledgment_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_optional_fields.dissect(buffer, index, packet, parent, size_of_order_acknowledgment_optional_fields)

  return index
end

-- Dissect: Order Acknowledgment Message
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_acknowledgment_message = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_acknowledgment_message then
    local range = buffer(offset, size_of_order_acknowledgment_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.fields(buffer, offset, packet, parent, size_of_order_acknowledgment_message)

  return offset + size_of_order_acknowledgment_message
end

-- Mass Cancel Inst
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst = {}

-- Size: Mass Cancel Inst
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.size = 16

-- Display: Mass Cancel Inst
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.display = function(value)
  return "Mass Cancel Inst: "..value
end

-- Dissect: Mass Cancel Inst
cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.mass_cancel_inst, range, value, display)

  return offset + length, value
end

-- Purge Order Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_symbol_exists = {}

-- Purge Order Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_symbol_sfx_exists = {}

-- Purge Order Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_3_exists = {}

-- Purge Order Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_4_exists = {}

-- Purge Order Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_5_exists = {}

-- Purge Order Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_6_exists = {}

-- Purge Order Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_7_exists = {}

-- Purge Order Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_8_exists = {}

-- Purge Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2 = {}

-- Size: Purge Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.size = 1

-- Display: Purge Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Order Reserved Bit 8 Exists|"
  end
  -- Is Purge Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Order Reserved Bit 7 Exists|"
  end
  -- Is Purge Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Order Reserved Bit 6 Exists|"
  end
  -- Is Purge Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Order Reserved Bit 5 Exists|"
  end
  -- Is Purge Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Order Reserved Bit 4 Exists|"
  end
  -- Is Purge Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Order Reserved Bit 3 Exists|"
  end
  -- Is Purge Order Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Order Symbol Sfx Exists|"
  end
  -- Is Purge Order Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Order Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.bits = function(buffer, offset, packet, parent)

  -- Purge Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_5_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_3_exists, buffer(offset, 1))

  -- Purge Order Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_symbol_sfx_exists, buffer(offset, 1))

  -- Purge Order Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_symbol_exists, buffer(offset, 1))
end

-- Dissect: Purge Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_byte_2, range, display)

  if show.purge_order_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Order Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_clearing_firm_exists = {}

-- Purge Order Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_reserved_bit_2_exists = {}

-- Purge Order Mass Cancel Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_mass_cancel_inst_exists = {}

-- Purge Order Mass Cancel Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_mass_cancel_id_exists = {}

-- Purge Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1 = {}

-- Size: Purge Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.size = 1

-- Display: Purge Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Purge Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Purge Order Reserved Bit 8 Exists|"
  end
  -- Is Purge Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Purge Order Reserved Bit 7 Exists|"
  end
  -- Is Purge Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Purge Order Reserved Bit 6 Exists|"
  end
  -- Is Purge Order Mass Cancel Id Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Purge Order Mass Cancel Id Exists|"
  end
  -- Is Purge Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Purge Order Reserved Bit 4 Exists|"
  end
  -- Is Purge Order Mass Cancel Inst Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Purge Order Mass Cancel Inst Exists|"
  end
  -- Is Purge Order Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Purge Order Reserved Bit 2 Exists|"
  end
  -- Is Purge Order Clearing Firm Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Purge Order Clearing Firm Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Purge Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.bits = function(buffer, offset, packet, parent)

  -- Purge Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_8_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_7_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_6_exists, buffer(offset, 1))

  -- Purge Order Mass Cancel Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_mass_cancel_id_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_4_exists, buffer(offset, 1))

  -- Purge Order Mass Cancel Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_mass_cancel_inst_exists, buffer(offset, 1))

  -- Purge Order Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_reserved_bit_2_exists, buffer(offset, 1))

  -- Purge Order Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_clearing_firm_exists, buffer(offset, 1))
end

-- Dissect: Purge Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_byte_1, range, display)

  if show.purge_order_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Purge Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count = {}

-- Size: Purge Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.size = 1

-- Display: Purge Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.display = function(value)
  return "Purge Order Bitfield Count: "..value
end

-- Dissect: Purge Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_bitfield_count, range, value, display)

  return offset + length, value
end

-- Purge Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields = {}

-- Display: Purge Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.fields = function(buffer, offset, packet, parent, size_of_purge_order_optional_fields)
  local index = offset

  -- Purge Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, purge_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Purge Order Byte 1
  local purge_order_byte_1_exists = purge_order_bitfield_count >= 1

  -- Runtime optional field: Purge Order Byte 1
  if purge_order_byte_1_exists then

    -- Purge Order Byte 1: Struct of 8 fields
    index, purge_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Order Byte 2
  local purge_order_byte_2_exists = purge_order_bitfield_count >= 2

  -- Runtime optional field: Purge Order Byte 2
  if purge_order_byte_2_exists then

    -- Purge Order Byte 2: Struct of 8 fields
    index, purge_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = purge_order_bitfield_count >= 1 and purge_order_byte_1:bitfield(7) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Mass Cancel Inst
  local mass_cancel_inst_exists = purge_order_bitfield_count >= 1 and purge_order_byte_1:bitfield(5) > 0

  -- Runtime optional field: Mass Cancel Inst
  if mass_cancel_inst_exists then
    index, mass_cancel_inst = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Mass Cancel Id
  local mass_cancel_id_exists = purge_order_bitfield_count >= 1 and purge_order_byte_1:bitfield(3) > 0

  -- Runtime optional field: Mass Cancel Id
  if mass_cancel_id_exists then
    index, mass_cancel_id = cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_id.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = purge_order_bitfield_count >= 2 and purge_order_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = purge_order_bitfield_count >= 2 and purge_order_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Purge Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_purge_order_optional_fields)
  local index = offset + size_of_purge_order_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.purge_order_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.fields(buffer, offset, packet, parent, size_of_purge_order_optional_fields)
    parent:set_len(size_of_purge_order_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.fields(buffer, offset, packet, parent, size_of_purge_order_optional_fields)

    return index
  end
end

-- Purge Order Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message = {}

-- Read runtime size of: Purge Order Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Purge Order Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Order Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.fields = function(buffer, offset, packet, parent, size_of_purge_order_message)
  local index = offset

  -- Reserved Internal: 1 Byte Ascii String
  index, reserved_internal = cboe_edgx_equities_orderentry_boe_v2_3.reserved_internal.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Purge Order Optional Fields
  local size_of_purge_order_optional_fields = message_length - (index - offset) - 8

  -- Purge Order Optional Fields: Struct of 8 fields
  index, purge_order_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_optional_fields.dissect(buffer, index, packet, parent, size_of_purge_order_optional_fields)

  return index
end

-- Dissect: Purge Order Message
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_purge_order_message = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.purge_order_message then
    local range = buffer(offset, size_of_purge_order_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.fields(buffer, offset, packet, parent, size_of_purge_order_message)

  return offset + size_of_purge_order_message
end

-- Cancel Orig On Reject
cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject = {}

-- Size: Cancel Orig On Reject
cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.size = 1

-- Display: Cancel Orig On Reject
cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.display = function(value)
  return "Cancel Orig On Reject: "..value
end

-- Dissect: Cancel Orig On Reject
cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_orig_on_reject, range, value, display)

  return offset + length, value
end

-- Modify Order Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_max_floor_exists = {}

-- Modify Order Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_stop_px_exists = {}

-- Modify Order Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_3_exists = {}

-- Modify Order Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_4_exists = {}

-- Modify Order Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_5_exists = {}

-- Modify Order Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_6_exists = {}

-- Modify Order Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_7_exists = {}

-- Modify Order Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_8_exists = {}

-- Modify Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2 = {}

-- Size: Modify Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.size = 1

-- Display: Modify Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Modify Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Modify Order Reserved Bit 8 Exists|"
  end
  -- Is Modify Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Modify Order Reserved Bit 7 Exists|"
  end
  -- Is Modify Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Modify Order Reserved Bit 6 Exists|"
  end
  -- Is Modify Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Modify Order Reserved Bit 5 Exists|"
  end
  -- Is Modify Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Modify Order Reserved Bit 4 Exists|"
  end
  -- Is Modify Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Modify Order Reserved Bit 3 Exists|"
  end
  -- Is Modify Order Stop Px Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Modify Order Stop Px Exists|"
  end
  -- Is Modify Order Max Floor Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Modify Order Max Floor Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Modify Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.bits = function(buffer, offset, packet, parent)

  -- Modify Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_8_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_7_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_6_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_5_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_4_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_3_exists, buffer(offset, 1))

  -- Modify Order Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_stop_px_exists, buffer(offset, 1))

  -- Modify Order Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_max_floor_exists, buffer(offset, 1))
end

-- Dissect: Modify Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_byte_2, range, display)

  if show.modify_order_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Modify Order Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_clearing_firm_exists = {}

-- Modify Order Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_reserved_bit_2_exists = {}

-- Modify Order Order Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_order_qty_exists = {}

-- Modify Order Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_price_exists = {}

-- Modify Order Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_ord_type_exists = {}

-- Modify Order Cancel Orig On Reject Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_cancel_orig_on_reject_exists = {}

-- Modify Order Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_exec_inst_exists = {}

-- Modify Order Side Exists
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_side_exists = {}

-- Modify Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1 = {}

-- Size: Modify Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.size = 1

-- Display: Modify Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Modify Order Side Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Modify Order Side Exists|"
  end
  -- Is Modify Order Exec Inst Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Modify Order Exec Inst Exists|"
  end
  -- Is Modify Order Cancel Orig On Reject Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Modify Order Cancel Orig On Reject Exists|"
  end
  -- Is Modify Order Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Modify Order Ord Type Exists|"
  end
  -- Is Modify Order Price Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Modify Order Price Exists|"
  end
  -- Is Modify Order Order Qty Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Modify Order Order Qty Exists|"
  end
  -- Is Modify Order Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Modify Order Reserved Bit 2 Exists|"
  end
  -- Is Modify Order Clearing Firm Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Modify Order Clearing Firm Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Modify Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.bits = function(buffer, offset, packet, parent)

  -- Modify Order Side Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_side_exists, buffer(offset, 1))

  -- Modify Order Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_exec_inst_exists, buffer(offset, 1))

  -- Modify Order Cancel Orig On Reject Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_cancel_orig_on_reject_exists, buffer(offset, 1))

  -- Modify Order Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_ord_type_exists, buffer(offset, 1))

  -- Modify Order Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_price_exists, buffer(offset, 1))

  -- Modify Order Order Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_order_qty_exists, buffer(offset, 1))

  -- Modify Order Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_reserved_bit_2_exists, buffer(offset, 1))

  -- Modify Order Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_clearing_firm_exists, buffer(offset, 1))
end

-- Dissect: Modify Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_byte_1, range, display)

  if show.modify_order_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Modify Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count = {}

-- Size: Modify Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.size = 1

-- Display: Modify Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.display = function(value)
  return "Modify Order Bitfield Count: "..value
end

-- Dissect: Modify Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_bitfield_count, range, value, display)

  return offset + length, value
end

-- Modify Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields = {}

-- Display: Modify Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Modify Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.fields = function(buffer, offset, packet, parent, size_of_modify_order_optional_fields)
  local index = offset

  -- Modify Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, modify_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Modify Order Byte 1
  local modify_order_byte_1_exists = modify_order_bitfield_count >= 1

  -- Runtime optional field: Modify Order Byte 1
  if modify_order_byte_1_exists then

    -- Modify Order Byte 1: Struct of 8 fields
    index, modify_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Modify Order Byte 2
  local modify_order_byte_2_exists = modify_order_bitfield_count >= 2

  -- Runtime optional field: Modify Order Byte 2
  if modify_order_byte_2_exists then

    -- Modify Order Byte 2: Struct of 8 fields
    index, modify_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(7) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Qty
  local order_qty_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(5) > 0

  -- Runtime optional field: Order Qty
  if order_qty_exists then
    index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(4) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Orig On Reject
  local cancel_orig_on_reject_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(2) > 0

  -- Runtime optional field: Cancel Orig On Reject
  if cancel_orig_on_reject_exists then
    index, cancel_orig_on_reject = cboe_edgx_equities_orderentry_boe_v2_3.cancel_orig_on_reject.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(1) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Side
  local side_exists = modify_order_bitfield_count >= 1 and modify_order_byte_1:bitfield(0) > 0

  -- Runtime optional field: Side
  if side_exists then
    index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = modify_order_bitfield_count >= 2 and modify_order_byte_2:bitfield(7) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Modify Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_modify_order_optional_fields)
  local index = offset + size_of_modify_order_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.modify_order_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.fields(buffer, offset, packet, parent, size_of_modify_order_optional_fields)
    parent:set_len(size_of_modify_order_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.fields(buffer, offset, packet, parent, size_of_modify_order_optional_fields)

    return index
  end
end

-- Modify Order Message
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message = {}

-- Read runtime size of: Modify Order Message
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Modify Order Message
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Modify Order Message
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.fields = function(buffer, offset, packet, parent, size_of_modify_order_message)
  local index = offset

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Orig Cl Ord Id: 20 Byte Ascii String
  index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Modify Order Optional Fields
  local size_of_modify_order_optional_fields = message_length - (index - offset) - 8

  -- Modify Order Optional Fields: Struct of 11 fields
  index, modify_order_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_optional_fields.dissect(buffer, index, packet, parent, size_of_modify_order_optional_fields)

  return index
end

-- Dissect: Modify Order Message
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_modify_order_message = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.modify_order_message then
    local range = buffer(offset, size_of_modify_order_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.fields(buffer, offset, packet, parent, size_of_modify_order_message)

  return offset + size_of_modify_order_message
end

-- Cancel Order Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_1_exists = {}

-- Cancel Order Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_2_exists = {}

-- Cancel Order Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_3_exists = {}

-- Cancel Order Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_4_exists = {}

-- Cancel Order Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_5_exists = {}

-- Cancel Order Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_6_exists = {}

-- Cancel Order Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_7_exists = {}

-- Cancel Order Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_reserved_bit_8_exists = {}

-- Cancel Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2 = {}

-- Size: Cancel Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.size = 1

-- Display: Cancel Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Order Reserved Bit 8 Exists|"
  end
  -- Is Cancel Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Order Reserved Bit 7 Exists|"
  end
  -- Is Cancel Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Order Reserved Bit 6 Exists|"
  end
  -- Is Cancel Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Order Reserved Bit 5 Exists|"
  end
  -- Is Cancel Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Order Reserved Bit 4 Exists|"
  end
  -- Is Cancel Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Order Reserved Bit 3 Exists|"
  end
  -- Is Cancel Order Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Order Reserved Bit 2 Exists|"
  end
  -- Is Cancel Order Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Order Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.bits = function(buffer, offset, packet, parent)

  -- Cancel Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: Cancel Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_byte_2, range, display)

  if show.cancel_order_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Order Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_clearing_firm_exists = {}

-- Cancel Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1 = {}

-- Size: Cancel Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.size = 1

-- Display: Cancel Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is Cancel Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."Cancel Order Reserved Bit 8 Exists|"
  end
  -- Is Cancel Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."Cancel Order Reserved Bit 7 Exists|"
  end
  -- Is Cancel Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."Cancel Order Reserved Bit 6 Exists|"
  end
  -- Is Cancel Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."Cancel Order Reserved Bit 5 Exists|"
  end
  -- Is Cancel Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."Cancel Order Reserved Bit 4 Exists|"
  end
  -- Is Cancel Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."Cancel Order Reserved Bit 3 Exists|"
  end
  -- Is Cancel Order Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."Cancel Order Reserved Bit 2 Exists|"
  end
  -- Is Cancel Order Clearing Firm Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."Cancel Order Clearing Firm Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: Cancel Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.bits = function(buffer, offset, packet, parent)

  -- Cancel Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_8_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_7_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_6_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_5_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_4_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_3_exists, buffer(offset, 1))

  -- Cancel Order Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_reserved_bit_2_exists, buffer(offset, 1))

  -- Cancel Order Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_clearing_firm_exists, buffer(offset, 1))
end

-- Dissect: Cancel Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_byte_1, range, display)

  if show.cancel_order_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- Cancel Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count = {}

-- Size: Cancel Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.size = 1

-- Display: Cancel Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.display = function(value)
  return "Cancel Order Bitfield Count: "..value
end

-- Dissect: Cancel Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_bitfield_count, range, value, display)

  return offset + length, value
end

-- Cancel Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields = {}

-- Display: Cancel Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.fields = function(buffer, offset, packet, parent, size_of_cancel_order_optional_fields)
  local index = offset

  -- Cancel Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, cancel_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Cancel Order Byte 1
  local cancel_order_byte_1_exists = cancel_order_bitfield_count >= 1

  -- Runtime optional field: Cancel Order Byte 1
  if cancel_order_byte_1_exists then

    -- Cancel Order Byte 1: Struct of 8 fields
    index, cancel_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Order Byte 2
  local cancel_order_byte_2_exists = cancel_order_bitfield_count >= 2

  -- Runtime optional field: Cancel Order Byte 2
  if cancel_order_byte_2_exists then

    -- Cancel Order Byte 2: Struct of 8 fields
    index, cancel_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = cancel_order_bitfield_count >= 1 and cancel_order_byte_1:bitfield(7) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Cancel Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_cancel_order_optional_fields)
  local index = offset + size_of_cancel_order_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.cancel_order_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.fields(buffer, offset, packet, parent, size_of_cancel_order_optional_fields)
    parent:set_len(size_of_cancel_order_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.fields(buffer, offset, packet, parent, size_of_cancel_order_optional_fields)

    return index
  end
end

-- Cancel Order Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message = {}

-- Read runtime size of: Cancel Order Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Cancel Order Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Order Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.fields = function(buffer, offset, packet, parent, size_of_cancel_order_message)
  local index = offset

  -- Orig Cl Ord Id: 20 Byte Ascii String
  index, orig_cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.orig_cl_ord_id.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: Cancel Order Optional Fields
  local size_of_cancel_order_optional_fields = message_length - (index - offset) - 8

  -- Cancel Order Optional Fields: Struct of 4 fields
  index, cancel_order_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_optional_fields.dissect(buffer, index, packet, parent, size_of_cancel_order_optional_fields)

  return index
end

-- Dissect: Cancel Order Message
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_cancel_order_message = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.cancel_order_message then
    local range = buffer(offset, size_of_cancel_order_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.fields(buffer, offset, packet, parent, size_of_cancel_order_message)

  return offset + size_of_cancel_order_message
end

-- Custom Group Id
cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id = {}

-- Size: Custom Group Id
cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.size = 2

-- Display: Custom Group Id
cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.display = function(value)
  return "Custom Group Id: "..value
end

-- Dissect: Custom Group Id
cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.custom_group_id, range, value, display)

  return offset + length, value
end

-- Display Range
cboe_edgx_equities_orderentry_boe_v2_3.display_range = {}

-- Size: Display Range
cboe_edgx_equities_orderentry_boe_v2_3.display_range.size = 4

-- Display: Display Range
cboe_edgx_equities_orderentry_boe_v2_3.display_range.display = function(value)
  return "Display Range: "..value
end

-- Dissect: Display Range
cboe_edgx_equities_orderentry_boe_v2_3.display_range.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.display_range.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.display_range.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.display_range, range, value, display)

  return offset + length, value
end

-- Risk Reset
cboe_edgx_equities_orderentry_boe_v2_3.risk_reset = {}

-- Size: Risk Reset
cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.size = 8

-- Display: Risk Reset
cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.display = function(value)
  return "Risk Reset: "..value
end

-- Dissect: Risk Reset
cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.risk_reset, range, value, display)

  return offset + length, value
end

-- Locate Reqd
cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd = {}

-- Size: Locate Reqd
cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.size = 1

-- Display: Locate Reqd
cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.display = function(value)
  return "Locate Reqd: "..value
end

-- Dissect: Locate Reqd
cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.locate_reqd, range, value, display)

  return offset + length, value
end

-- New Order Reserved Bit 1 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_1_exists = {}

-- New Order Custom Group Id Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_custom_group_id_exists = {}

-- New Order Reserved Bit 3 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_3_exists = {}

-- New Order Reserved Bit 4 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_4_exists = {}

-- New Order Reserved Bit 5 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_5_exists = {}

-- New Order Reserved Bit 6 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_6_exists = {}

-- New Order Reserved Bit 7 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_7_exists = {}

-- New Order Reserved Bit 8 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_8_exists = {}

-- New Order Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7 = {}

-- Size: New Order Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.size = 1

-- Display: New Order Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Reserved Bit 8 Exists|"
  end
  -- Is New Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Reserved Bit 7 Exists|"
  end
  -- Is New Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Reserved Bit 6 Exists|"
  end
  -- Is New Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Reserved Bit 5 Exists|"
  end
  -- Is New Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Reserved Bit 4 Exists|"
  end
  -- Is New Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Reserved Bit 3 Exists|"
  end
  -- Is New Order Custom Group Id Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Custom Group Id Exists|"
  end
  -- Is New Order Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.bits = function(buffer, offset, packet, parent)

  -- New Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_8_exists, buffer(offset, 1))

  -- New Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_7_exists, buffer(offset, 1))

  -- New Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_6_exists, buffer(offset, 1))

  -- New Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_5_exists, buffer(offset, 1))

  -- New Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_4_exists, buffer(offset, 1))

  -- New Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists, buffer(offset, 1))

  -- New Order Custom Group Id Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_custom_group_id_exists, buffer(offset, 1))

  -- New Order Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 7
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_7, range, display)

  if show.new_order_byte_7 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Display Range Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_display_range_exists = {}

-- New Order Stop Px Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_stop_px_exists = {}

-- New Order Rout Strategy Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_rout_strategy_exists = {}

-- New Order Route Delivery Method Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_route_delivery_method_exists = {}

-- New Order Ex Destination Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_ex_destination_exists = {}

-- New Order Echo Text Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_echo_text_exists = {}

-- New Order Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6 = {}

-- Size: New Order Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.size = 1

-- Display: New Order Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Reserved Bit 8 Exists|"
  end
  -- Is New Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Reserved Bit 7 Exists|"
  end
  -- Is New Order Echo Text Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Echo Text Exists|"
  end
  -- Is New Order Ex Destination Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Ex Destination Exists|"
  end
  -- Is New Order Route Delivery Method Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Route Delivery Method Exists|"
  end
  -- Is New Order Rout Strategy Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Rout Strategy Exists|"
  end
  -- Is New Order Stop Px Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Stop Px Exists|"
  end
  -- Is New Order Display Range Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Display Range Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.bits = function(buffer, offset, packet, parent)

  -- New Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_8_exists, buffer(offset, 1))

  -- New Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_7_exists, buffer(offset, 1))

  -- New Order Echo Text Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_echo_text_exists, buffer(offset, 1))

  -- New Order Ex Destination Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ex_destination_exists, buffer(offset, 1))

  -- New Order Route Delivery Method Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_route_delivery_method_exists, buffer(offset, 1))

  -- New Order Rout Strategy Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_rout_strategy_exists, buffer(offset, 1))

  -- New Order Stop Px Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_stop_px_exists, buffer(offset, 1))

  -- New Order Display Range Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_display_range_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 6
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_6, range, display)

  if show.new_order_byte_6 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Attributed Quote Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_attributed_quote_exists = {}

-- New Order Ext Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_ext_exec_inst_exists = {}

-- New Order Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5 = {}

-- Size: New Order Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.size = 1

-- Display: New Order Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Reserved Bit 8 Exists|"
  end
  -- Is New Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Reserved Bit 7 Exists|"
  end
  -- Is New Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Reserved Bit 6 Exists|"
  end
  -- Is New Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Reserved Bit 5 Exists|"
  end
  -- Is New Order Ext Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Ext Exec Inst Exists|"
  end
  -- Is New Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Reserved Bit 3 Exists|"
  end
  -- Is New Order Attributed Quote Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Attributed Quote Exists|"
  end
  -- Is New Order Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.bits = function(buffer, offset, packet, parent)

  -- New Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_8_exists, buffer(offset, 1))

  -- New Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_7_exists, buffer(offset, 1))

  -- New Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_6_exists, buffer(offset, 1))

  -- New Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_5_exists, buffer(offset, 1))

  -- New Order Ext Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ext_exec_inst_exists, buffer(offset, 1))

  -- New Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists, buffer(offset, 1))

  -- New Order Attributed Quote Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_attributed_quote_exists, buffer(offset, 1))

  -- New Order Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 5
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_5, range, display)

  if show.new_order_byte_5 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Reserved Bit 2 Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_reserved_bit_2_exists = {}

-- New Order Risk Reset Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_risk_reset_exists = {}

-- New Order Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4 = {}

-- Size: New Order Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.size = 1

-- Display: New Order Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Reserved Bit 8 Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Reserved Bit 8 Exists|"
  end
  -- Is New Order Reserved Bit 7 Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Reserved Bit 7 Exists|"
  end
  -- Is New Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Reserved Bit 6 Exists|"
  end
  -- Is New Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Reserved Bit 5 Exists|"
  end
  -- Is New Order Risk Reset Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Risk Reset Exists|"
  end
  -- Is New Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Reserved Bit 3 Exists|"
  end
  -- Is New Order Reserved Bit 2 Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Reserved Bit 2 Exists|"
  end
  -- Is New Order Reserved Bit 1 Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Reserved Bit 1 Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.bits = function(buffer, offset, packet, parent)

  -- New Order Reserved Bit 8 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_8_exists, buffer(offset, 1))

  -- New Order Reserved Bit 7 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_7_exists, buffer(offset, 1))

  -- New Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_6_exists, buffer(offset, 1))

  -- New Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_5_exists, buffer(offset, 1))

  -- New Order Risk Reset Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_risk_reset_exists, buffer(offset, 1))

  -- New Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists, buffer(offset, 1))

  -- New Order Reserved Bit 2 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_2_exists, buffer(offset, 1))

  -- New Order Reserved Bit 1 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_1_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 4
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_4, range, display)

  if show.new_order_byte_4 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_account_exists = {}

-- New Order Display Indicator Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_display_indicator_exists = {}

-- New Order Discretion Amount Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_discretion_amount_exists = {}

-- New Order Peg Difference Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_peg_difference_exists = {}

-- New Order Prevent Match Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_prevent_match_exists = {}

-- New Order Locate Reqd Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_locate_reqd_exists = {}

-- New Order Expire Time Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_expire_time_exists = {}

-- New Order Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3 = {}

-- Size: New Order Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.size = 1

-- Display: New Order Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Expire Time Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Expire Time Exists|"
  end
  -- Is New Order Locate Reqd Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Locate Reqd Exists|"
  end
  -- Is New Order Prevent Match Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Prevent Match Exists|"
  end
  -- Is New Order Peg Difference Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Peg Difference Exists|"
  end
  -- Is New Order Discretion Amount Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Discretion Amount Exists|"
  end
  -- Is New Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Reserved Bit 3 Exists|"
  end
  -- Is New Order Display Indicator Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Display Indicator Exists|"
  end
  -- Is New Order Account Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Account Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.bits = function(buffer, offset, packet, parent)

  -- New Order Expire Time Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_expire_time_exists, buffer(offset, 1))

  -- New Order Locate Reqd Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_locate_reqd_exists, buffer(offset, 1))

  -- New Order Prevent Match Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_prevent_match_exists, buffer(offset, 1))

  -- New Order Peg Difference Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_peg_difference_exists, buffer(offset, 1))

  -- New Order Discretion Amount Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_discretion_amount_exists, buffer(offset, 1))

  -- New Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists, buffer(offset, 1))

  -- New Order Display Indicator Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_display_indicator_exists, buffer(offset, 1))

  -- New Order Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_account_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 3
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_3, range, display)

  if show.new_order_byte_3 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Symbol Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_symbol_exists = {}

-- New Order Symbol Sfx Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_symbol_sfx_exists = {}

-- New Order Capacity Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_capacity_exists = {}

-- New Order Routing Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_routing_inst_exists = {}

-- New Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2 = {}

-- Size: New Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.size = 1

-- Display: New Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Routing Inst Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Routing Inst Exists|"
  end
  -- Is New Order Capacity Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Capacity Exists|"
  end
  -- Is New Order Reserved Bit 6 Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Reserved Bit 6 Exists|"
  end
  -- Is New Order Reserved Bit 5 Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Reserved Bit 5 Exists|"
  end
  -- Is New Order Reserved Bit 4 Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Reserved Bit 4 Exists|"
  end
  -- Is New Order Reserved Bit 3 Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Reserved Bit 3 Exists|"
  end
  -- Is New Order Symbol Sfx Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Symbol Sfx Exists|"
  end
  -- Is New Order Symbol Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Symbol Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.bits = function(buffer, offset, packet, parent)

  -- New Order Routing Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_routing_inst_exists, buffer(offset, 1))

  -- New Order Capacity Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_capacity_exists, buffer(offset, 1))

  -- New Order Reserved Bit 6 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_6_exists, buffer(offset, 1))

  -- New Order Reserved Bit 5 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_5_exists, buffer(offset, 1))

  -- New Order Reserved Bit 4 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_4_exists, buffer(offset, 1))

  -- New Order Reserved Bit 3 Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_reserved_bit_3_exists, buffer(offset, 1))

  -- New Order Symbol Sfx Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_symbol_sfx_exists, buffer(offset, 1))

  -- New Order Symbol Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_symbol_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 2
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_2, range, display)

  if show.new_order_byte_2 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Clearing Firm Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_clearing_firm_exists = {}

-- New Order Clearing Account Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_clearing_account_exists = {}

-- New Order Price Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_price_exists = {}

-- New Order Exec Inst Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_exec_inst_exists = {}

-- New Order Ord Type Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_ord_type_exists = {}

-- New Order Time In Force Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_time_in_force_exists = {}

-- New Order Min Qty Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_min_qty_exists = {}

-- New Order Max Floor Exists
cboe_edgx_equities_orderentry_boe_v2_3.new_order_max_floor_exists = {}

-- New Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1 = {}

-- Size: New Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.size = 1

-- Display: New Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.display = function(buffer, packet, parent)
  local display = ""

  -- Is New Order Max Floor Exists flag set?
  if buffer:bitfield(0) > 0 then
    display = display.."New Order Max Floor Exists|"
  end
  -- Is New Order Min Qty Exists flag set?
  if buffer:bitfield(1) > 0 then
    display = display.."New Order Min Qty Exists|"
  end
  -- Is New Order Time In Force Exists flag set?
  if buffer:bitfield(2) > 0 then
    display = display.."New Order Time In Force Exists|"
  end
  -- Is New Order Ord Type Exists flag set?
  if buffer:bitfield(3) > 0 then
    display = display.."New Order Ord Type Exists|"
  end
  -- Is New Order Exec Inst Exists flag set?
  if buffer:bitfield(4) > 0 then
    display = display.."New Order Exec Inst Exists|"
  end
  -- Is New Order Price Exists flag set?
  if buffer:bitfield(5) > 0 then
    display = display.."New Order Price Exists|"
  end
  -- Is New Order Clearing Account Exists flag set?
  if buffer:bitfield(6) > 0 then
    display = display.."New Order Clearing Account Exists|"
  end
  -- Is New Order Clearing Firm Exists flag set?
  if buffer:bitfield(7) > 0 then
    display = display.."New Order Clearing Firm Exists|"
  end

  return display:sub(1, -2)
end

-- Dissect Bit Fields: New Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.bits = function(buffer, offset, packet, parent)

  -- New Order Max Floor Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_max_floor_exists, buffer(offset, 1))

  -- New Order Min Qty Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_min_qty_exists, buffer(offset, 1))

  -- New Order Time In Force Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_time_in_force_exists, buffer(offset, 1))

  -- New Order Ord Type Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_ord_type_exists, buffer(offset, 1))

  -- New Order Exec Inst Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_exec_inst_exists, buffer(offset, 1))

  -- New Order Price Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_price_exists, buffer(offset, 1))

  -- New Order Clearing Account Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_clearing_account_exists, buffer(offset, 1))

  -- New Order Clearing Firm Exists: 1 Bit
  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_clearing_firm_exists, buffer(offset, 1))
end

-- Dissect: New Order Byte 1
cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.dissect = function(buffer, offset, packet, parent)
  local size = 1
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.display(range, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_byte_1, range, display)

  if show.new_order_byte_1 then
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.bits(buffer, offset, packet, element)
  end

  return offset + 1, range
end

-- New Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count = {}

-- Size: New Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.size = 1

-- Display: New Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.display = function(value)
  return "New Order Bitfield Count: "..value
end

-- Dissect: New Order Bitfield Count
cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_bitfield_count, range, value, display)

  return offset + length, value
end

-- New Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields = {}

-- Display: New Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: New Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.fields = function(buffer, offset, packet, parent, size_of_new_order_optional_fields)
  local index = offset

  -- New Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, new_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: New Order Byte 1
  local new_order_byte_1_exists = new_order_bitfield_count >= 1

  -- Runtime optional field: New Order Byte 1
  if new_order_byte_1_exists then

    -- New Order Byte 1: Struct of 8 fields
    index, new_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 2
  local new_order_byte_2_exists = new_order_bitfield_count >= 2

  -- Runtime optional field: New Order Byte 2
  if new_order_byte_2_exists then

    -- New Order Byte 2: Struct of 8 fields
    index, new_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 3
  local new_order_byte_3_exists = new_order_bitfield_count >= 3

  -- Runtime optional field: New Order Byte 3
  if new_order_byte_3_exists then

    -- New Order Byte 3: Struct of 8 fields
    index, new_order_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 4
  local new_order_byte_4_exists = new_order_bitfield_count >= 4

  -- Runtime optional field: New Order Byte 4
  if new_order_byte_4_exists then

    -- New Order Byte 4: Struct of 8 fields
    index, new_order_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 5
  local new_order_byte_5_exists = new_order_bitfield_count >= 5

  -- Runtime optional field: New Order Byte 5
  if new_order_byte_5_exists then

    -- New Order Byte 5: Struct of 8 fields
    index, new_order_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 6
  local new_order_byte_6_exists = new_order_bitfield_count >= 6

  -- Runtime optional field: New Order Byte 6
  if new_order_byte_6_exists then

    -- New Order Byte 6: Struct of 8 fields
    index, new_order_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 7
  local new_order_byte_7_exists = new_order_bitfield_count >= 7

  -- Runtime optional field: New Order Byte 7
  if new_order_byte_7_exists then

    -- New Order Byte 7: Struct of 8 fields
    index, new_order_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Firm
  local clearing_firm_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(7) > 0

  -- Runtime optional field: Clearing Firm
  if clearing_firm_exists then
    index, clearing_firm = cboe_edgx_equities_orderentry_boe_v2_3.clearing_firm.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Clearing Account
  local clearing_account_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(6) > 0

  -- Runtime optional field: Clearing Account
  if clearing_account_exists then
    index, clearing_account = cboe_edgx_equities_orderentry_boe_v2_3.clearing_account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Price
  local price_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(5) > 0

  -- Runtime optional field: Price
  if price_exists then
    index, price = cboe_edgx_equities_orderentry_boe_v2_3.price.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Exec Inst
  local exec_inst_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(4) > 0

  -- Runtime optional field: Exec Inst
  if exec_inst_exists then
    index, exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ord Type
  local ord_type_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(3) > 0

  -- Runtime optional field: Ord Type
  if ord_type_exists then
    index, ord_type = cboe_edgx_equities_orderentry_boe_v2_3.ord_type.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Time In Force
  local time_in_force_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(2) > 0

  -- Runtime optional field: Time In Force
  if time_in_force_exists then
    index, time_in_force = cboe_edgx_equities_orderentry_boe_v2_3.time_in_force.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Min Qty
  local min_qty_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(1) > 0

  -- Runtime optional field: Min Qty
  if min_qty_exists then
    index, min_qty = cboe_edgx_equities_orderentry_boe_v2_3.min_qty.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Max Floor
  local max_floor_exists = new_order_bitfield_count >= 1 and new_order_byte_1:bitfield(0) > 0

  -- Runtime optional field: Max Floor
  if max_floor_exists then
    index, max_floor = cboe_edgx_equities_orderentry_boe_v2_3.max_floor.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol
  local symbol_exists = new_order_bitfield_count >= 2 and new_order_byte_2:bitfield(7) > 0

  -- Runtime optional field: Symbol
  if symbol_exists then
    index, symbol = cboe_edgx_equities_orderentry_boe_v2_3.symbol.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Symbol Sfx
  local symbol_sfx_exists = new_order_bitfield_count >= 2 and new_order_byte_2:bitfield(6) > 0

  -- Runtime optional field: Symbol Sfx
  if symbol_sfx_exists then
    index, symbol_sfx = cboe_edgx_equities_orderentry_boe_v2_3.symbol_sfx.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Capacity
  local capacity_exists = new_order_bitfield_count >= 2 and new_order_byte_2:bitfield(1) > 0

  -- Runtime optional field: Capacity
  if capacity_exists then
    index, capacity = cboe_edgx_equities_orderentry_boe_v2_3.capacity.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Routing Inst
  local routing_inst_exists = new_order_bitfield_count >= 2 and new_order_byte_2:bitfield(0) > 0

  -- Runtime optional field: Routing Inst
  if routing_inst_exists then
    index, routing_inst = cboe_edgx_equities_orderentry_boe_v2_3.routing_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Account
  local account_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(7) > 0

  -- Runtime optional field: Account
  if account_exists then
    index, account = cboe_edgx_equities_orderentry_boe_v2_3.account.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Indicator
  local display_indicator_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(6) > 0

  -- Runtime optional field: Display Indicator
  if display_indicator_exists then
    index, display_indicator = cboe_edgx_equities_orderentry_boe_v2_3.display_indicator.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Discretion Amount
  local discretion_amount_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(4) > 0

  -- Runtime optional field: Discretion Amount
  if discretion_amount_exists then
    index, discretion_amount = cboe_edgx_equities_orderentry_boe_v2_3.discretion_amount.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Peg Difference
  local peg_difference_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(3) > 0

  -- Runtime optional field: Peg Difference
  if peg_difference_exists then
    index, peg_difference = cboe_edgx_equities_orderentry_boe_v2_3.peg_difference.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Prevent Match
  local prevent_match_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(2) > 0

  -- Runtime optional field: Prevent Match
  if prevent_match_exists then
    index, prevent_match = cboe_edgx_equities_orderentry_boe_v2_3.prevent_match.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Locate Reqd
  local locate_reqd_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(1) > 0

  -- Runtime optional field: Locate Reqd
  if locate_reqd_exists then
    index, locate_reqd = cboe_edgx_equities_orderentry_boe_v2_3.locate_reqd.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Expire Time
  local expire_time_exists = new_order_bitfield_count >= 3 and new_order_byte_3:bitfield(0) > 0

  -- Runtime optional field: Expire Time
  if expire_time_exists then
    index, expire_time = cboe_edgx_equities_orderentry_boe_v2_3.expire_time.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Risk Reset
  local risk_reset_exists = new_order_bitfield_count >= 4 and new_order_byte_4:bitfield(4) > 0

  -- Runtime optional field: Risk Reset
  if risk_reset_exists then
    index, risk_reset = cboe_edgx_equities_orderentry_boe_v2_3.risk_reset.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Attributed Quote
  local attributed_quote_exists = new_order_bitfield_count >= 5 and new_order_byte_5:bitfield(6) > 0

  -- Runtime optional field: Attributed Quote
  if attributed_quote_exists then
    index, attributed_quote = cboe_edgx_equities_orderentry_boe_v2_3.attributed_quote.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ext Exec Inst
  local ext_exec_inst_exists = new_order_bitfield_count >= 5 and new_order_byte_5:bitfield(4) > 0

  -- Runtime optional field: Ext Exec Inst
  if ext_exec_inst_exists then
    index, ext_exec_inst = cboe_edgx_equities_orderentry_boe_v2_3.ext_exec_inst.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Display Range
  local display_range_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(7) > 0

  -- Runtime optional field: Display Range
  if display_range_exists then
    index, display_range = cboe_edgx_equities_orderentry_boe_v2_3.display_range.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Stop Px
  local stop_px_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(6) > 0

  -- Runtime optional field: Stop Px
  if stop_px_exists then
    index, stop_px = cboe_edgx_equities_orderentry_boe_v2_3.stop_px.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Rout Strategy
  local rout_strategy_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(5) > 0

  -- Runtime optional field: Rout Strategy
  if rout_strategy_exists then
    index, rout_strategy = cboe_edgx_equities_orderentry_boe_v2_3.rout_strategy.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Route Delivery Method
  local route_delivery_method_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(4) > 0

  -- Runtime optional field: Route Delivery Method
  if route_delivery_method_exists then
    index, route_delivery_method = cboe_edgx_equities_orderentry_boe_v2_3.route_delivery_method.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Ex Destination
  local ex_destination_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(3) > 0

  -- Runtime optional field: Ex Destination
  if ex_destination_exists then
    index, ex_destination = cboe_edgx_equities_orderentry_boe_v2_3.ex_destination.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Echo Text
  local echo_text_exists = new_order_bitfield_count >= 6 and new_order_byte_6:bitfield(2) > 0

  -- Runtime optional field: Echo Text
  if echo_text_exists then
    index, echo_text = cboe_edgx_equities_orderentry_boe_v2_3.echo_text.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Custom Group Id
  local custom_group_id_exists = new_order_bitfield_count >= 7 and new_order_byte_7:bitfield(6) > 0

  -- Runtime optional field: Custom Group Id
  if custom_group_id_exists then
    index, custom_group_id = cboe_edgx_equities_orderentry_boe_v2_3.custom_group_id.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: New Order Optional Fields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.dissect = function(buffer, offset, packet, parent, size_of_new_order_optional_fields)
  local index = offset + size_of_new_order_optional_fields

  -- Optionally add group/struct element to protocol tree
  if show.new_order_optional_fields then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_optional_fields, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.fields(buffer, offset, packet, parent, size_of_new_order_optional_fields)
    parent:set_len(size_of_new_order_optional_fields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.fields(buffer, offset, packet, parent, size_of_new_order_optional_fields)

    return index
  end
end

-- New Order Message
cboe_edgx_equities_orderentry_boe_v2_3.new_order_message = {}

-- Read runtime size of: New Order Message
cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: New Order Message
cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: New Order Message
cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.fields = function(buffer, offset, packet, parent, size_of_new_order_message)
  local index = offset

  -- Cl Ord Id: 20 Byte Ascii String
  index, cl_ord_id = cboe_edgx_equities_orderentry_boe_v2_3.cl_ord_id.dissect(buffer, index, packet, parent)

  -- Side: 1 Byte Ascii String Enum with 4 values
  index, side = cboe_edgx_equities_orderentry_boe_v2_3.side.dissect(buffer, index, packet, parent)

  -- Order Qty: 4 Byte Unsigned Fixed Width Integer
  index, order_qty = cboe_edgx_equities_orderentry_boe_v2_3.order_qty.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  -- Runtime Size Of: New Order Optional Fields
  local size_of_new_order_optional_fields = message_length - (index - offset) - 8

  -- New Order Optional Fields: Struct of 37 fields
  index, new_order_optional_fields = cboe_edgx_equities_orderentry_boe_v2_3.new_order_optional_fields.dissect(buffer, index, packet, parent, size_of_new_order_optional_fields)

  return index
end

-- Dissect: New Order Message
cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_new_order_message = cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.new_order_message then
    local range = buffer(offset, size_of_new_order_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.fields(buffer, offset, packet, parent, size_of_new_order_message)

  return offset + size_of_new_order_message
end

-- Replay Complete Message
cboe_edgx_equities_orderentry_boe_v2_3.replay_complete_message = {}

-- Server Heartbeat Message
cboe_edgx_equities_orderentry_boe_v2_3.server_heartbeat_message = {}

-- Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.sequence_number = {}

-- Size: Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.size = 4

-- Display: Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.display = function(value)
  return "Sequence Number: "..value
end

-- Dissect: Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.sequence_number, range, value, display)

  return offset + length, value
end

-- Unit Number
cboe_edgx_equities_orderentry_boe_v2_3.unit_number = {}

-- Size: Unit Number
cboe_edgx_equities_orderentry_boe_v2_3.unit_number.size = 1

-- Display: Unit Number
cboe_edgx_equities_orderentry_boe_v2_3.unit_number.display = function(value)
  return "Unit Number: "..value
end

-- Dissect: Unit Number
cboe_edgx_equities_orderentry_boe_v2_3.unit_number.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.unit_number.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.unit_number.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_number, range, value, display)

  return offset + length, value
end

-- Unit Sequence
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence = {}

-- Calculate size of: Unit Sequence
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.size = function(buffer, offset)
  local index = 0

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.unit_number.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.size

  return index
end

-- Display: Unit Sequence
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Unit Sequence
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.fields = function(buffer, offset, packet, parent, unit_sequence_index)
  local index = offset

  -- Implicit Unit Sequence Index
  if unit_sequence_index ~= nil then
    local iteration = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequence_index, unit_sequence_index)
    iteration:set_generated()
  end

  -- Unit Number: 1 Byte Unsigned Fixed Width Integer
  index, unit_number = cboe_edgx_equities_orderentry_boe_v2_3.unit_number.dissect(buffer, index, packet, parent)

  -- Sequence Number: 4 Byte Unsigned Fixed Width Integer
  index, sequence_number = cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.dissect(buffer, index, packet, parent)

  return index
end

-- Dissect: Unit Sequence
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.dissect = function(buffer, offset, packet, parent, unit_sequence_index)
  if show.unit_sequence then
    -- Optionally add element to protocol tree
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequence, buffer(offset, 0))
    local index = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.fields(buffer, offset, packet, parent, unit_sequence_index)
    local length = index - offset
    parent:set_len(length)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.display(packet, parent, length)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    return cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.fields(buffer, offset, packet, parent, unit_sequence_index)
  end
end

-- Number Of Units
cboe_edgx_equities_orderentry_boe_v2_3.number_of_units = {}

-- Size: Number Of Units
cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.size = 1

-- Display: Number Of Units
cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.display = function(value)
  return "Number Of Units: "..value
end

-- Dissect: Number Of Units
cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.number_of_units, range, value, display)

  return offset + length, value
end

-- Last Received Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number = {}

-- Size: Last Received Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.size = 4

-- Display: Last Received Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.display = function(value)
  return "Last Received Sequence Number: "..value
end

-- Dissect: Last Received Sequence Number
cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.last_received_sequence_number, range, value, display)

  return offset + length, value
end

-- Logout Reason Text
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text = {}

-- Size: Logout Reason Text
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.size = 60

-- Display: Logout Reason Text
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.display = function(value)
  return "Logout Reason Text: "..value
end

-- Dissect: Logout Reason Text
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_reason_text, range, value, display)

  return offset + length, value
end

-- Logout Reason
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason = {}

-- Size: Logout Reason
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.size = 1

-- Display: Logout Reason
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.display = function(value)
  if value == "U" then
    return "Logout Reason: User Requested (U)"
  end
  if value == "E" then
    return "Logout Reason: End Of Day (E)"
  end
  if value == "A" then
    return "Logout Reason: Administrative (A)"
  end
  if value == "!" then
    return "Logout Reason: Protocol Violation (!)"
  end

  return "Logout Reason: Unknown("..value..")"
end

-- Dissect: Logout Reason
cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_reason, range, value, display)

  return offset + length, value
end

-- Logout Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_message = {}

-- Read runtime size of: Logout Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Logout Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Logout Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_message.fields = function(buffer, offset, packet, parent, size_of_logout_message)
  local index = offset

  -- Logout Reason: 1 Byte Ascii String Enum with 4 values
  index, logout_reason = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason.dissect(buffer, index, packet, parent)

  -- Logout Reason Text: 60 Byte Ascii String
  index, logout_reason_text = cboe_edgx_equities_orderentry_boe_v2_3.logout_reason_text.dissect(buffer, index, packet, parent)

  -- Last Received Sequence Number: 4 Byte Unsigned Fixed Width Integer
  index, last_received_sequence_number = cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.dissect(buffer, index, packet, parent)

  -- Number Of Units: 1 Byte Unsigned Fixed Width Integer
  index, number_of_units = cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.dissect(buffer, index, packet, parent)

  -- Repeating: Unit Sequence
  for unit_sequence_index = 1, number_of_units do
    index, unit_sequence = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.dissect(buffer, index, packet, parent, unit_sequence_index)
  end

  return index
end

-- Dissect: Logout Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_logout_message = cboe_edgx_equities_orderentry_boe_v2_3.logout_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.logout_message then
    local range = buffer(offset, size_of_logout_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.logout_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.logout_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.logout_message.fields(buffer, offset, packet, parent, size_of_logout_message)

  return offset + size_of_logout_message
end

-- Purge Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields = {}

-- Read runtime size of: Purge Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Purge Rejected Bitfield Count
  local purge_rejected_bitfield_count = buffer(offset, 1):le_uint()

  return purge_rejected_bitfield_count + 1
end

-- Display: Purge Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_purge_rejected_return_bitfields)
  local index = offset

  -- Purge Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, purge_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Purge Rejected Byte 1
  local purge_rejected_byte_1_exists = purge_rejected_bitfield_count >= 1

  -- Runtime optional field: Purge Rejected Byte 1
  if purge_rejected_byte_1_exists then

    -- Purge Rejected Byte 1: Struct of 8 fields
    index, purge_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 2
  local purge_rejected_byte_2_exists = purge_rejected_bitfield_count >= 2

  -- Runtime optional field: Purge Rejected Byte 2
  if purge_rejected_byte_2_exists then

    -- Purge Rejected Byte 2: Struct of 8 fields
    index, purge_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 3
  local purge_rejected_byte_3_exists = purge_rejected_bitfield_count >= 3

  -- Runtime optional field: Purge Rejected Byte 3
  if purge_rejected_byte_3_exists then

    -- Purge Rejected Byte 3: Struct of 8 fields
    index, purge_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 4
  local purge_rejected_byte_4_exists = purge_rejected_bitfield_count >= 4

  -- Runtime optional field: Purge Rejected Byte 4
  if purge_rejected_byte_4_exists then

    -- Purge Rejected Byte 4: Struct of 8 fields
    index, purge_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 5
  local purge_rejected_byte_5_exists = purge_rejected_bitfield_count >= 5

  -- Runtime optional field: Purge Rejected Byte 5
  if purge_rejected_byte_5_exists then

    -- Purge Rejected Byte 5: Struct of 8 fields
    index, purge_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 6
  local purge_rejected_byte_6_exists = purge_rejected_bitfield_count >= 6

  -- Runtime optional field: Purge Rejected Byte 6
  if purge_rejected_byte_6_exists then

    -- Purge Rejected Byte 6: Struct of 8 fields
    index, purge_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 7
  local purge_rejected_byte_7_exists = purge_rejected_bitfield_count >= 7

  -- Runtime optional field: Purge Rejected Byte 7
  if purge_rejected_byte_7_exists then

    -- Purge Rejected Byte 7: Struct of 8 fields
    index, purge_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 8
  local purge_rejected_byte_8_exists = purge_rejected_bitfield_count >= 8

  -- Runtime optional field: Purge Rejected Byte 8
  if purge_rejected_byte_8_exists then

    -- Purge Rejected Byte 8: Struct of 8 fields
    index, purge_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 9
  local purge_rejected_byte_9_exists = purge_rejected_bitfield_count >= 9

  -- Runtime optional field: Purge Rejected Byte 9
  if purge_rejected_byte_9_exists then

    -- Purge Rejected Byte 9: Struct of 8 fields
    index, purge_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 10
  local purge_rejected_byte_10_exists = purge_rejected_bitfield_count >= 10

  -- Runtime optional field: Purge Rejected Byte 10
  if purge_rejected_byte_10_exists then

    -- Purge Rejected Byte 10: Struct of 8 fields
    index, purge_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 11
  local purge_rejected_byte_11_exists = purge_rejected_bitfield_count >= 11

  -- Runtime optional field: Purge Rejected Byte 11
  if purge_rejected_byte_11_exists then

    -- Purge Rejected Byte 11: Struct of 8 fields
    index, purge_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 12
  local purge_rejected_byte_12_exists = purge_rejected_bitfield_count >= 12

  -- Runtime optional field: Purge Rejected Byte 12
  if purge_rejected_byte_12_exists then

    -- Purge Rejected Byte 12: Struct of 8 fields
    index, purge_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 13
  local purge_rejected_byte_13_exists = purge_rejected_bitfield_count >= 13

  -- Runtime optional field: Purge Rejected Byte 13
  if purge_rejected_byte_13_exists then

    -- Purge Rejected Byte 13: Struct of 8 fields
    index, purge_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 14
  local purge_rejected_byte_14_exists = purge_rejected_bitfield_count >= 14

  -- Runtime optional field: Purge Rejected Byte 14
  if purge_rejected_byte_14_exists then

    -- Purge Rejected Byte 14: Struct of 8 fields
    index, purge_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 15
  local purge_rejected_byte_15_exists = purge_rejected_bitfield_count >= 15

  -- Runtime optional field: Purge Rejected Byte 15
  if purge_rejected_byte_15_exists then

    -- Purge Rejected Byte 15: Struct of 8 fields
    index, purge_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 16
  local purge_rejected_byte_16_exists = purge_rejected_bitfield_count >= 16

  -- Runtime optional field: Purge Rejected Byte 16
  if purge_rejected_byte_16_exists then

    -- Purge Rejected Byte 16: Struct of 8 fields
    index, purge_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Rejected Byte 17
  local purge_rejected_byte_17_exists = purge_rejected_bitfield_count >= 17

  -- Runtime optional field: Purge Rejected Byte 17
  if purge_rejected_byte_17_exists then

    -- Purge Rejected Byte 17: Struct of 8 fields
    index, purge_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Purge Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_purge_rejected_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.purge_rejected_return_bitfields then
    local range = buffer(offset, size_of_purge_rejected_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_rejected_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.fields(buffer, offset, packet, parent, size_of_purge_rejected_return_bitfields)

  return offset + size_of_purge_rejected_return_bitfields
end

-- Trade Cancel Or Correct Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields = {}

-- Read runtime size of: Trade Cancel Or Correct Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Trade Cancel Or Correct Bitfield Count
  local trade_cancel_or_correct_bitfield_count = buffer(offset, 1):le_uint()

  return trade_cancel_or_correct_bitfield_count + 1
end

-- Display: Trade Cancel Or Correct Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Trade Cancel Or Correct Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_return_bitfields)
  local index = offset

  -- Trade Cancel Or Correct Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, trade_cancel_or_correct_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 1
  local trade_cancel_or_correct_byte_1_exists = trade_cancel_or_correct_bitfield_count >= 1

  -- Runtime optional field: Trade Cancel Or Correct Byte 1
  if trade_cancel_or_correct_byte_1_exists then

    -- Trade Cancel Or Correct Byte 1: Struct of 8 fields
    index, trade_cancel_or_correct_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 2
  local trade_cancel_or_correct_byte_2_exists = trade_cancel_or_correct_bitfield_count >= 2

  -- Runtime optional field: Trade Cancel Or Correct Byte 2
  if trade_cancel_or_correct_byte_2_exists then

    -- Trade Cancel Or Correct Byte 2: Struct of 8 fields
    index, trade_cancel_or_correct_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 3
  local trade_cancel_or_correct_byte_3_exists = trade_cancel_or_correct_bitfield_count >= 3

  -- Runtime optional field: Trade Cancel Or Correct Byte 3
  if trade_cancel_or_correct_byte_3_exists then

    -- Trade Cancel Or Correct Byte 3: Struct of 8 fields
    index, trade_cancel_or_correct_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 4
  local trade_cancel_or_correct_byte_4_exists = trade_cancel_or_correct_bitfield_count >= 4

  -- Runtime optional field: Trade Cancel Or Correct Byte 4
  if trade_cancel_or_correct_byte_4_exists then

    -- Trade Cancel Or Correct Byte 4: Struct of 8 fields
    index, trade_cancel_or_correct_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 5
  local trade_cancel_or_correct_byte_5_exists = trade_cancel_or_correct_bitfield_count >= 5

  -- Runtime optional field: Trade Cancel Or Correct Byte 5
  if trade_cancel_or_correct_byte_5_exists then

    -- Trade Cancel Or Correct Byte 5: Struct of 8 fields
    index, trade_cancel_or_correct_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 6
  local trade_cancel_or_correct_byte_6_exists = trade_cancel_or_correct_bitfield_count >= 6

  -- Runtime optional field: Trade Cancel Or Correct Byte 6
  if trade_cancel_or_correct_byte_6_exists then

    -- Trade Cancel Or Correct Byte 6: Struct of 8 fields
    index, trade_cancel_or_correct_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 7
  local trade_cancel_or_correct_byte_7_exists = trade_cancel_or_correct_bitfield_count >= 7

  -- Runtime optional field: Trade Cancel Or Correct Byte 7
  if trade_cancel_or_correct_byte_7_exists then

    -- Trade Cancel Or Correct Byte 7: Struct of 8 fields
    index, trade_cancel_or_correct_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 8
  local trade_cancel_or_correct_byte_8_exists = trade_cancel_or_correct_bitfield_count >= 8

  -- Runtime optional field: Trade Cancel Or Correct Byte 8
  if trade_cancel_or_correct_byte_8_exists then

    -- Trade Cancel Or Correct Byte 8: Struct of 8 fields
    index, trade_cancel_or_correct_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 9
  local trade_cancel_or_correct_byte_9_exists = trade_cancel_or_correct_bitfield_count >= 9

  -- Runtime optional field: Trade Cancel Or Correct Byte 9
  if trade_cancel_or_correct_byte_9_exists then

    -- Trade Cancel Or Correct Byte 9: Struct of 8 fields
    index, trade_cancel_or_correct_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 10
  local trade_cancel_or_correct_byte_10_exists = trade_cancel_or_correct_bitfield_count >= 10

  -- Runtime optional field: Trade Cancel Or Correct Byte 10
  if trade_cancel_or_correct_byte_10_exists then

    -- Trade Cancel Or Correct Byte 10: Struct of 8 fields
    index, trade_cancel_or_correct_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 11
  local trade_cancel_or_correct_byte_11_exists = trade_cancel_or_correct_bitfield_count >= 11

  -- Runtime optional field: Trade Cancel Or Correct Byte 11
  if trade_cancel_or_correct_byte_11_exists then

    -- Trade Cancel Or Correct Byte 11: Struct of 8 fields
    index, trade_cancel_or_correct_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 12
  local trade_cancel_or_correct_byte_12_exists = trade_cancel_or_correct_bitfield_count >= 12

  -- Runtime optional field: Trade Cancel Or Correct Byte 12
  if trade_cancel_or_correct_byte_12_exists then

    -- Trade Cancel Or Correct Byte 12: Struct of 8 fields
    index, trade_cancel_or_correct_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 13
  local trade_cancel_or_correct_byte_13_exists = trade_cancel_or_correct_bitfield_count >= 13

  -- Runtime optional field: Trade Cancel Or Correct Byte 13
  if trade_cancel_or_correct_byte_13_exists then

    -- Trade Cancel Or Correct Byte 13: Struct of 8 fields
    index, trade_cancel_or_correct_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 14
  local trade_cancel_or_correct_byte_14_exists = trade_cancel_or_correct_bitfield_count >= 14

  -- Runtime optional field: Trade Cancel Or Correct Byte 14
  if trade_cancel_or_correct_byte_14_exists then

    -- Trade Cancel Or Correct Byte 14: Struct of 8 fields
    index, trade_cancel_or_correct_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 15
  local trade_cancel_or_correct_byte_15_exists = trade_cancel_or_correct_bitfield_count >= 15

  -- Runtime optional field: Trade Cancel Or Correct Byte 15
  if trade_cancel_or_correct_byte_15_exists then

    -- Trade Cancel Or Correct Byte 15: Struct of 8 fields
    index, trade_cancel_or_correct_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 16
  local trade_cancel_or_correct_byte_16_exists = trade_cancel_or_correct_bitfield_count >= 16

  -- Runtime optional field: Trade Cancel Or Correct Byte 16
  if trade_cancel_or_correct_byte_16_exists then

    -- Trade Cancel Or Correct Byte 16: Struct of 8 fields
    index, trade_cancel_or_correct_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Trade Cancel Or Correct Byte 17
  local trade_cancel_or_correct_byte_17_exists = trade_cancel_or_correct_bitfield_count >= 17

  -- Runtime optional field: Trade Cancel Or Correct Byte 17
  if trade_cancel_or_correct_byte_17_exists then

    -- Trade Cancel Or Correct Byte 17: Struct of 8 fields
    index, trade_cancel_or_correct_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Trade Cancel Or Correct Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_trade_cancel_or_correct_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.trade_cancel_or_correct_return_bitfields then
    local range = buffer(offset, size_of_trade_cancel_or_correct_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.trade_cancel_or_correct_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.fields(buffer, offset, packet, parent, size_of_trade_cancel_or_correct_return_bitfields)

  return offset + size_of_trade_cancel_or_correct_return_bitfields
end

-- Order Execution Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields = {}

-- Read runtime size of: Order Execution Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Execution Bitfield Count
  local order_execution_bitfield_count = buffer(offset, 1):le_uint()

  return order_execution_bitfield_count + 1
end

-- Display: Order Execution Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Execution Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_execution_return_bitfields)
  local index = offset

  -- Order Execution Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_execution_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Execution Byte 1
  local order_execution_byte_1_exists = order_execution_bitfield_count >= 1

  -- Runtime optional field: Order Execution Byte 1
  if order_execution_byte_1_exists then

    -- Order Execution Byte 1: Struct of 8 fields
    index, order_execution_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 2
  local order_execution_byte_2_exists = order_execution_bitfield_count >= 2

  -- Runtime optional field: Order Execution Byte 2
  if order_execution_byte_2_exists then

    -- Order Execution Byte 2: Struct of 8 fields
    index, order_execution_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 3
  local order_execution_byte_3_exists = order_execution_bitfield_count >= 3

  -- Runtime optional field: Order Execution Byte 3
  if order_execution_byte_3_exists then

    -- Order Execution Byte 3: Struct of 8 fields
    index, order_execution_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 4
  local order_execution_byte_4_exists = order_execution_bitfield_count >= 4

  -- Runtime optional field: Order Execution Byte 4
  if order_execution_byte_4_exists then

    -- Order Execution Byte 4: Struct of 8 fields
    index, order_execution_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 5
  local order_execution_byte_5_exists = order_execution_bitfield_count >= 5

  -- Runtime optional field: Order Execution Byte 5
  if order_execution_byte_5_exists then

    -- Order Execution Byte 5: Struct of 8 fields
    index, order_execution_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 6
  local order_execution_byte_6_exists = order_execution_bitfield_count >= 6

  -- Runtime optional field: Order Execution Byte 6
  if order_execution_byte_6_exists then

    -- Order Execution Byte 6: Struct of 8 fields
    index, order_execution_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 7
  local order_execution_byte_7_exists = order_execution_bitfield_count >= 7

  -- Runtime optional field: Order Execution Byte 7
  if order_execution_byte_7_exists then

    -- Order Execution Byte 7: Struct of 8 fields
    index, order_execution_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 8
  local order_execution_byte_8_exists = order_execution_bitfield_count >= 8

  -- Runtime optional field: Order Execution Byte 8
  if order_execution_byte_8_exists then

    -- Order Execution Byte 8: Struct of 8 fields
    index, order_execution_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 9
  local order_execution_byte_9_exists = order_execution_bitfield_count >= 9

  -- Runtime optional field: Order Execution Byte 9
  if order_execution_byte_9_exists then

    -- Order Execution Byte 9: Struct of 8 fields
    index, order_execution_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 10
  local order_execution_byte_10_exists = order_execution_bitfield_count >= 10

  -- Runtime optional field: Order Execution Byte 10
  if order_execution_byte_10_exists then

    -- Order Execution Byte 10: Struct of 8 fields
    index, order_execution_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 11
  local order_execution_byte_11_exists = order_execution_bitfield_count >= 11

  -- Runtime optional field: Order Execution Byte 11
  if order_execution_byte_11_exists then

    -- Order Execution Byte 11: Struct of 8 fields
    index, order_execution_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 12
  local order_execution_byte_12_exists = order_execution_bitfield_count >= 12

  -- Runtime optional field: Order Execution Byte 12
  if order_execution_byte_12_exists then

    -- Order Execution Byte 12: Struct of 8 fields
    index, order_execution_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 13
  local order_execution_byte_13_exists = order_execution_bitfield_count >= 13

  -- Runtime optional field: Order Execution Byte 13
  if order_execution_byte_13_exists then

    -- Order Execution Byte 13: Struct of 8 fields
    index, order_execution_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 14
  local order_execution_byte_14_exists = order_execution_bitfield_count >= 14

  -- Runtime optional field: Order Execution Byte 14
  if order_execution_byte_14_exists then

    -- Order Execution Byte 14: Struct of 8 fields
    index, order_execution_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 15
  local order_execution_byte_15_exists = order_execution_bitfield_count >= 15

  -- Runtime optional field: Order Execution Byte 15
  if order_execution_byte_15_exists then

    -- Order Execution Byte 15: Struct of 8 fields
    index, order_execution_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 16
  local order_execution_byte_16_exists = order_execution_bitfield_count >= 16

  -- Runtime optional field: Order Execution Byte 16
  if order_execution_byte_16_exists then

    -- Order Execution Byte 16: Struct of 8 fields
    index, order_execution_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Execution Byte 17
  local order_execution_byte_17_exists = order_execution_bitfield_count >= 17

  -- Runtime optional field: Order Execution Byte 17
  if order_execution_byte_17_exists then

    -- Order Execution Byte 17: Struct of 8 fields
    index, order_execution_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Execution Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_execution_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_execution_return_bitfields then
    local range = buffer(offset, size_of_order_execution_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_execution_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_execution_return_bitfields)

  return offset + size_of_order_execution_return_bitfields
end

-- Cancel Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields = {}

-- Read runtime size of: Cancel Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Cancel Rejected Bitfield Count
  local cancel_rejected_bitfield_count = buffer(offset, 1):le_uint()

  return cancel_rejected_bitfield_count + 1
end

-- Display: Cancel Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_cancel_rejected_return_bitfields)
  local index = offset

  -- Cancel Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, cancel_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Cancel Rejected Byte 1
  local cancel_rejected_byte_1_exists = cancel_rejected_bitfield_count >= 1

  -- Runtime optional field: Cancel Rejected Byte 1
  if cancel_rejected_byte_1_exists then

    -- Cancel Rejected Byte 1: Struct of 8 fields
    index, cancel_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 2
  local cancel_rejected_byte_2_exists = cancel_rejected_bitfield_count >= 2

  -- Runtime optional field: Cancel Rejected Byte 2
  if cancel_rejected_byte_2_exists then

    -- Cancel Rejected Byte 2: Struct of 8 fields
    index, cancel_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 3
  local cancel_rejected_byte_3_exists = cancel_rejected_bitfield_count >= 3

  -- Runtime optional field: Cancel Rejected Byte 3
  if cancel_rejected_byte_3_exists then

    -- Cancel Rejected Byte 3: Struct of 8 fields
    index, cancel_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 4
  local cancel_rejected_byte_4_exists = cancel_rejected_bitfield_count >= 4

  -- Runtime optional field: Cancel Rejected Byte 4
  if cancel_rejected_byte_4_exists then

    -- Cancel Rejected Byte 4: Struct of 8 fields
    index, cancel_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 5
  local cancel_rejected_byte_5_exists = cancel_rejected_bitfield_count >= 5

  -- Runtime optional field: Cancel Rejected Byte 5
  if cancel_rejected_byte_5_exists then

    -- Cancel Rejected Byte 5: Struct of 8 fields
    index, cancel_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 6
  local cancel_rejected_byte_6_exists = cancel_rejected_bitfield_count >= 6

  -- Runtime optional field: Cancel Rejected Byte 6
  if cancel_rejected_byte_6_exists then

    -- Cancel Rejected Byte 6: Struct of 8 fields
    index, cancel_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 7
  local cancel_rejected_byte_7_exists = cancel_rejected_bitfield_count >= 7

  -- Runtime optional field: Cancel Rejected Byte 7
  if cancel_rejected_byte_7_exists then

    -- Cancel Rejected Byte 7: Struct of 8 fields
    index, cancel_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 8
  local cancel_rejected_byte_8_exists = cancel_rejected_bitfield_count >= 8

  -- Runtime optional field: Cancel Rejected Byte 8
  if cancel_rejected_byte_8_exists then

    -- Cancel Rejected Byte 8: Struct of 8 fields
    index, cancel_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 9
  local cancel_rejected_byte_9_exists = cancel_rejected_bitfield_count >= 9

  -- Runtime optional field: Cancel Rejected Byte 9
  if cancel_rejected_byte_9_exists then

    -- Cancel Rejected Byte 9: Struct of 8 fields
    index, cancel_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 10
  local cancel_rejected_byte_10_exists = cancel_rejected_bitfield_count >= 10

  -- Runtime optional field: Cancel Rejected Byte 10
  if cancel_rejected_byte_10_exists then

    -- Cancel Rejected Byte 10: Struct of 8 fields
    index, cancel_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 11
  local cancel_rejected_byte_11_exists = cancel_rejected_bitfield_count >= 11

  -- Runtime optional field: Cancel Rejected Byte 11
  if cancel_rejected_byte_11_exists then

    -- Cancel Rejected Byte 11: Struct of 8 fields
    index, cancel_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 12
  local cancel_rejected_byte_12_exists = cancel_rejected_bitfield_count >= 12

  -- Runtime optional field: Cancel Rejected Byte 12
  if cancel_rejected_byte_12_exists then

    -- Cancel Rejected Byte 12: Struct of 8 fields
    index, cancel_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 13
  local cancel_rejected_byte_13_exists = cancel_rejected_bitfield_count >= 13

  -- Runtime optional field: Cancel Rejected Byte 13
  if cancel_rejected_byte_13_exists then

    -- Cancel Rejected Byte 13: Struct of 8 fields
    index, cancel_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 14
  local cancel_rejected_byte_14_exists = cancel_rejected_bitfield_count >= 14

  -- Runtime optional field: Cancel Rejected Byte 14
  if cancel_rejected_byte_14_exists then

    -- Cancel Rejected Byte 14: Struct of 8 fields
    index, cancel_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 15
  local cancel_rejected_byte_15_exists = cancel_rejected_bitfield_count >= 15

  -- Runtime optional field: Cancel Rejected Byte 15
  if cancel_rejected_byte_15_exists then

    -- Cancel Rejected Byte 15: Struct of 8 fields
    index, cancel_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 16
  local cancel_rejected_byte_16_exists = cancel_rejected_bitfield_count >= 16

  -- Runtime optional field: Cancel Rejected Byte 16
  if cancel_rejected_byte_16_exists then

    -- Cancel Rejected Byte 16: Struct of 8 fields
    index, cancel_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Rejected Byte 17
  local cancel_rejected_byte_17_exists = cancel_rejected_bitfield_count >= 17

  -- Runtime optional field: Cancel Rejected Byte 17
  if cancel_rejected_byte_17_exists then

    -- Cancel Rejected Byte 17: Struct of 8 fields
    index, cancel_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Cancel Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_cancel_rejected_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.cancel_rejected_return_bitfields then
    local range = buffer(offset, size_of_cancel_rejected_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_rejected_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.fields(buffer, offset, packet, parent, size_of_cancel_rejected_return_bitfields)

  return offset + size_of_cancel_rejected_return_bitfields
end

-- Order Cancelled Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields = {}

-- Read runtime size of: Order Cancelled Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Cancelled Bitfield Count
  local order_cancelled_bitfield_count = buffer(offset, 1):le_uint()

  return order_cancelled_bitfield_count + 1
end

-- Display: Order Cancelled Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Cancelled Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_cancelled_return_bitfields)
  local index = offset

  -- Order Cancelled Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_cancelled_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Cancelled Byte 1
  local order_cancelled_byte_1_exists = order_cancelled_bitfield_count >= 1

  -- Runtime optional field: Order Cancelled Byte 1
  if order_cancelled_byte_1_exists then

    -- Order Cancelled Byte 1: Struct of 8 fields
    index, order_cancelled_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 2
  local order_cancelled_byte_2_exists = order_cancelled_bitfield_count >= 2

  -- Runtime optional field: Order Cancelled Byte 2
  if order_cancelled_byte_2_exists then

    -- Order Cancelled Byte 2: Struct of 8 fields
    index, order_cancelled_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 3
  local order_cancelled_byte_3_exists = order_cancelled_bitfield_count >= 3

  -- Runtime optional field: Order Cancelled Byte 3
  if order_cancelled_byte_3_exists then

    -- Order Cancelled Byte 3: Struct of 8 fields
    index, order_cancelled_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 4
  local order_cancelled_byte_4_exists = order_cancelled_bitfield_count >= 4

  -- Runtime optional field: Order Cancelled Byte 4
  if order_cancelled_byte_4_exists then

    -- Order Cancelled Byte 4: Struct of 8 fields
    index, order_cancelled_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 5
  local order_cancelled_byte_5_exists = order_cancelled_bitfield_count >= 5

  -- Runtime optional field: Order Cancelled Byte 5
  if order_cancelled_byte_5_exists then

    -- Order Cancelled Byte 5: Struct of 8 fields
    index, order_cancelled_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 6
  local order_cancelled_byte_6_exists = order_cancelled_bitfield_count >= 6

  -- Runtime optional field: Order Cancelled Byte 6
  if order_cancelled_byte_6_exists then

    -- Order Cancelled Byte 6: Struct of 8 fields
    index, order_cancelled_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 7
  local order_cancelled_byte_7_exists = order_cancelled_bitfield_count >= 7

  -- Runtime optional field: Order Cancelled Byte 7
  if order_cancelled_byte_7_exists then

    -- Order Cancelled Byte 7: Struct of 8 fields
    index, order_cancelled_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 8
  local order_cancelled_byte_8_exists = order_cancelled_bitfield_count >= 8

  -- Runtime optional field: Order Cancelled Byte 8
  if order_cancelled_byte_8_exists then

    -- Order Cancelled Byte 8: Struct of 8 fields
    index, order_cancelled_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 9
  local order_cancelled_byte_9_exists = order_cancelled_bitfield_count >= 9

  -- Runtime optional field: Order Cancelled Byte 9
  if order_cancelled_byte_9_exists then

    -- Order Cancelled Byte 9: Struct of 8 fields
    index, order_cancelled_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 10
  local order_cancelled_byte_10_exists = order_cancelled_bitfield_count >= 10

  -- Runtime optional field: Order Cancelled Byte 10
  if order_cancelled_byte_10_exists then

    -- Order Cancelled Byte 10: Struct of 8 fields
    index, order_cancelled_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 11
  local order_cancelled_byte_11_exists = order_cancelled_bitfield_count >= 11

  -- Runtime optional field: Order Cancelled Byte 11
  if order_cancelled_byte_11_exists then

    -- Order Cancelled Byte 11: Struct of 8 fields
    index, order_cancelled_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 12
  local order_cancelled_byte_12_exists = order_cancelled_bitfield_count >= 12

  -- Runtime optional field: Order Cancelled Byte 12
  if order_cancelled_byte_12_exists then

    -- Order Cancelled Byte 12: Struct of 8 fields
    index, order_cancelled_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 13
  local order_cancelled_byte_13_exists = order_cancelled_bitfield_count >= 13

  -- Runtime optional field: Order Cancelled Byte 13
  if order_cancelled_byte_13_exists then

    -- Order Cancelled Byte 13: Struct of 8 fields
    index, order_cancelled_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 14
  local order_cancelled_byte_14_exists = order_cancelled_bitfield_count >= 14

  -- Runtime optional field: Order Cancelled Byte 14
  if order_cancelled_byte_14_exists then

    -- Order Cancelled Byte 14: Struct of 8 fields
    index, order_cancelled_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 15
  local order_cancelled_byte_15_exists = order_cancelled_bitfield_count >= 15

  -- Runtime optional field: Order Cancelled Byte 15
  if order_cancelled_byte_15_exists then

    -- Order Cancelled Byte 15: Struct of 8 fields
    index, order_cancelled_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 16
  local order_cancelled_byte_16_exists = order_cancelled_bitfield_count >= 16

  -- Runtime optional field: Order Cancelled Byte 16
  if order_cancelled_byte_16_exists then

    -- Order Cancelled Byte 16: Struct of 8 fields
    index, order_cancelled_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Cancelled Byte 17
  local order_cancelled_byte_17_exists = order_cancelled_bitfield_count >= 17

  -- Runtime optional field: Order Cancelled Byte 17
  if order_cancelled_byte_17_exists then

    -- Order Cancelled Byte 17: Struct of 8 fields
    index, order_cancelled_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Cancelled Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_cancelled_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_cancelled_return_bitfields then
    local range = buffer(offset, size_of_order_cancelled_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_cancelled_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_cancelled_return_bitfields)

  return offset + size_of_order_cancelled_return_bitfields
end

-- User Modify Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields = {}

-- Read runtime size of: User Modify Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: User Modify Rejected Bitfield Count
  local user_modify_rejected_bitfield_count = buffer(offset, 1):le_uint()

  return user_modify_rejected_bitfield_count + 1
end

-- Display: User Modify Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: User Modify Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_user_modify_rejected_return_bitfields)
  local index = offset

  -- User Modify Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, user_modify_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: User Modify Rejected Byte 1
  local user_modify_rejected_byte_1_exists = user_modify_rejected_bitfield_count >= 1

  -- Runtime optional field: User Modify Rejected Byte 1
  if user_modify_rejected_byte_1_exists then

    -- User Modify Rejected Byte 1: Struct of 8 fields
    index, user_modify_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 2
  local user_modify_rejected_byte_2_exists = user_modify_rejected_bitfield_count >= 2

  -- Runtime optional field: User Modify Rejected Byte 2
  if user_modify_rejected_byte_2_exists then

    -- User Modify Rejected Byte 2: Struct of 8 fields
    index, user_modify_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 3
  local user_modify_rejected_byte_3_exists = user_modify_rejected_bitfield_count >= 3

  -- Runtime optional field: User Modify Rejected Byte 3
  if user_modify_rejected_byte_3_exists then

    -- User Modify Rejected Byte 3: Struct of 8 fields
    index, user_modify_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 4
  local user_modify_rejected_byte_4_exists = user_modify_rejected_bitfield_count >= 4

  -- Runtime optional field: User Modify Rejected Byte 4
  if user_modify_rejected_byte_4_exists then

    -- User Modify Rejected Byte 4: Struct of 8 fields
    index, user_modify_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 5
  local user_modify_rejected_byte_5_exists = user_modify_rejected_bitfield_count >= 5

  -- Runtime optional field: User Modify Rejected Byte 5
  if user_modify_rejected_byte_5_exists then

    -- User Modify Rejected Byte 5: Struct of 8 fields
    index, user_modify_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 6
  local user_modify_rejected_byte_6_exists = user_modify_rejected_bitfield_count >= 6

  -- Runtime optional field: User Modify Rejected Byte 6
  if user_modify_rejected_byte_6_exists then

    -- User Modify Rejected Byte 6: Struct of 8 fields
    index, user_modify_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 7
  local user_modify_rejected_byte_7_exists = user_modify_rejected_bitfield_count >= 7

  -- Runtime optional field: User Modify Rejected Byte 7
  if user_modify_rejected_byte_7_exists then

    -- User Modify Rejected Byte 7: Struct of 8 fields
    index, user_modify_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 8
  local user_modify_rejected_byte_8_exists = user_modify_rejected_bitfield_count >= 8

  -- Runtime optional field: User Modify Rejected Byte 8
  if user_modify_rejected_byte_8_exists then

    -- User Modify Rejected Byte 8: Struct of 8 fields
    index, user_modify_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 9
  local user_modify_rejected_byte_9_exists = user_modify_rejected_bitfield_count >= 9

  -- Runtime optional field: User Modify Rejected Byte 9
  if user_modify_rejected_byte_9_exists then

    -- User Modify Rejected Byte 9: Struct of 8 fields
    index, user_modify_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 10
  local user_modify_rejected_byte_10_exists = user_modify_rejected_bitfield_count >= 10

  -- Runtime optional field: User Modify Rejected Byte 10
  if user_modify_rejected_byte_10_exists then

    -- User Modify Rejected Byte 10: Struct of 8 fields
    index, user_modify_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 11
  local user_modify_rejected_byte_11_exists = user_modify_rejected_bitfield_count >= 11

  -- Runtime optional field: User Modify Rejected Byte 11
  if user_modify_rejected_byte_11_exists then

    -- User Modify Rejected Byte 11: Struct of 8 fields
    index, user_modify_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 12
  local user_modify_rejected_byte_12_exists = user_modify_rejected_bitfield_count >= 12

  -- Runtime optional field: User Modify Rejected Byte 12
  if user_modify_rejected_byte_12_exists then

    -- User Modify Rejected Byte 12: Struct of 8 fields
    index, user_modify_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 13
  local user_modify_rejected_byte_13_exists = user_modify_rejected_bitfield_count >= 13

  -- Runtime optional field: User Modify Rejected Byte 13
  if user_modify_rejected_byte_13_exists then

    -- User Modify Rejected Byte 13: Struct of 8 fields
    index, user_modify_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 14
  local user_modify_rejected_byte_14_exists = user_modify_rejected_bitfield_count >= 14

  -- Runtime optional field: User Modify Rejected Byte 14
  if user_modify_rejected_byte_14_exists then

    -- User Modify Rejected Byte 14: Struct of 8 fields
    index, user_modify_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 15
  local user_modify_rejected_byte_15_exists = user_modify_rejected_bitfield_count >= 15

  -- Runtime optional field: User Modify Rejected Byte 15
  if user_modify_rejected_byte_15_exists then

    -- User Modify Rejected Byte 15: Struct of 8 fields
    index, user_modify_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 16
  local user_modify_rejected_byte_16_exists = user_modify_rejected_bitfield_count >= 16

  -- Runtime optional field: User Modify Rejected Byte 16
  if user_modify_rejected_byte_16_exists then

    -- User Modify Rejected Byte 16: Struct of 8 fields
    index, user_modify_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: User Modify Rejected Byte 17
  local user_modify_rejected_byte_17_exists = user_modify_rejected_bitfield_count >= 17

  -- Runtime optional field: User Modify Rejected Byte 17
  if user_modify_rejected_byte_17_exists then

    -- User Modify Rejected Byte 17: Struct of 8 fields
    index, user_modify_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: User Modify Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_user_modify_rejected_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.user_modify_rejected_return_bitfields then
    local range = buffer(offset, size_of_user_modify_rejected_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.user_modify_rejected_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.fields(buffer, offset, packet, parent, size_of_user_modify_rejected_return_bitfields)

  return offset + size_of_user_modify_rejected_return_bitfields
end

-- Order Restated Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields = {}

-- Read runtime size of: Order Restated Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Restated Bitfield Count
  local order_restated_bitfield_count = buffer(offset, 1):le_uint()

  return order_restated_bitfield_count + 1
end

-- Display: Order Restated Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Restated Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_restated_return_bitfields)
  local index = offset

  -- Order Restated Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_restated_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Restated Byte 1
  local order_restated_byte_1_exists = order_restated_bitfield_count >= 1

  -- Runtime optional field: Order Restated Byte 1
  if order_restated_byte_1_exists then

    -- Order Restated Byte 1: Struct of 8 fields
    index, order_restated_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 2
  local order_restated_byte_2_exists = order_restated_bitfield_count >= 2

  -- Runtime optional field: Order Restated Byte 2
  if order_restated_byte_2_exists then

    -- Order Restated Byte 2: Struct of 8 fields
    index, order_restated_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 3
  local order_restated_byte_3_exists = order_restated_bitfield_count >= 3

  -- Runtime optional field: Order Restated Byte 3
  if order_restated_byte_3_exists then

    -- Order Restated Byte 3: Struct of 8 fields
    index, order_restated_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 4
  local order_restated_byte_4_exists = order_restated_bitfield_count >= 4

  -- Runtime optional field: Order Restated Byte 4
  if order_restated_byte_4_exists then

    -- Order Restated Byte 4: Struct of 8 fields
    index, order_restated_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 5
  local order_restated_byte_5_exists = order_restated_bitfield_count >= 5

  -- Runtime optional field: Order Restated Byte 5
  if order_restated_byte_5_exists then

    -- Order Restated Byte 5: Struct of 8 fields
    index, order_restated_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 6
  local order_restated_byte_6_exists = order_restated_bitfield_count >= 6

  -- Runtime optional field: Order Restated Byte 6
  if order_restated_byte_6_exists then

    -- Order Restated Byte 6: Struct of 8 fields
    index, order_restated_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 7
  local order_restated_byte_7_exists = order_restated_bitfield_count >= 7

  -- Runtime optional field: Order Restated Byte 7
  if order_restated_byte_7_exists then

    -- Order Restated Byte 7: Struct of 8 fields
    index, order_restated_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 8
  local order_restated_byte_8_exists = order_restated_bitfield_count >= 8

  -- Runtime optional field: Order Restated Byte 8
  if order_restated_byte_8_exists then

    -- Order Restated Byte 8: Struct of 8 fields
    index, order_restated_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 9
  local order_restated_byte_9_exists = order_restated_bitfield_count >= 9

  -- Runtime optional field: Order Restated Byte 9
  if order_restated_byte_9_exists then

    -- Order Restated Byte 9: Struct of 8 fields
    index, order_restated_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 10
  local order_restated_byte_10_exists = order_restated_bitfield_count >= 10

  -- Runtime optional field: Order Restated Byte 10
  if order_restated_byte_10_exists then

    -- Order Restated Byte 10: Struct of 8 fields
    index, order_restated_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 11
  local order_restated_byte_11_exists = order_restated_bitfield_count >= 11

  -- Runtime optional field: Order Restated Byte 11
  if order_restated_byte_11_exists then

    -- Order Restated Byte 11: Struct of 8 fields
    index, order_restated_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 12
  local order_restated_byte_12_exists = order_restated_bitfield_count >= 12

  -- Runtime optional field: Order Restated Byte 12
  if order_restated_byte_12_exists then

    -- Order Restated Byte 12: Struct of 8 fields
    index, order_restated_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 13
  local order_restated_byte_13_exists = order_restated_bitfield_count >= 13

  -- Runtime optional field: Order Restated Byte 13
  if order_restated_byte_13_exists then

    -- Order Restated Byte 13: Struct of 8 fields
    index, order_restated_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 14
  local order_restated_byte_14_exists = order_restated_bitfield_count >= 14

  -- Runtime optional field: Order Restated Byte 14
  if order_restated_byte_14_exists then

    -- Order Restated Byte 14: Struct of 8 fields
    index, order_restated_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 15
  local order_restated_byte_15_exists = order_restated_bitfield_count >= 15

  -- Runtime optional field: Order Restated Byte 15
  if order_restated_byte_15_exists then

    -- Order Restated Byte 15: Struct of 8 fields
    index, order_restated_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 16
  local order_restated_byte_16_exists = order_restated_bitfield_count >= 16

  -- Runtime optional field: Order Restated Byte 16
  if order_restated_byte_16_exists then

    -- Order Restated Byte 16: Struct of 8 fields
    index, order_restated_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Restated Byte 17
  local order_restated_byte_17_exists = order_restated_bitfield_count >= 17

  -- Runtime optional field: Order Restated Byte 17
  if order_restated_byte_17_exists then

    -- Order Restated Byte 17: Struct of 8 fields
    index, order_restated_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Restated Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_restated_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_restated_return_bitfields then
    local range = buffer(offset, size_of_order_restated_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_restated_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_restated_return_bitfields)

  return offset + size_of_order_restated_return_bitfields
end

-- Order Modified Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields = {}

-- Read runtime size of: Order Modified Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Modified Bitfield Count
  local order_modified_bitfield_count = buffer(offset, 1):le_uint()

  return order_modified_bitfield_count + 1
end

-- Display: Order Modified Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Modified Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_modified_return_bitfields)
  local index = offset

  -- Order Modified Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_modified_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Modified Byte 1
  local order_modified_byte_1_exists = order_modified_bitfield_count >= 1

  -- Runtime optional field: Order Modified Byte 1
  if order_modified_byte_1_exists then

    -- Order Modified Byte 1: Struct of 8 fields
    index, order_modified_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 2
  local order_modified_byte_2_exists = order_modified_bitfield_count >= 2

  -- Runtime optional field: Order Modified Byte 2
  if order_modified_byte_2_exists then

    -- Order Modified Byte 2: Struct of 8 fields
    index, order_modified_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 3
  local order_modified_byte_3_exists = order_modified_bitfield_count >= 3

  -- Runtime optional field: Order Modified Byte 3
  if order_modified_byte_3_exists then

    -- Order Modified Byte 3: Struct of 8 fields
    index, order_modified_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 4
  local order_modified_byte_4_exists = order_modified_bitfield_count >= 4

  -- Runtime optional field: Order Modified Byte 4
  if order_modified_byte_4_exists then

    -- Order Modified Byte 4: Struct of 8 fields
    index, order_modified_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 5
  local order_modified_byte_5_exists = order_modified_bitfield_count >= 5

  -- Runtime optional field: Order Modified Byte 5
  if order_modified_byte_5_exists then

    -- Order Modified Byte 5: Struct of 8 fields
    index, order_modified_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 6
  local order_modified_byte_6_exists = order_modified_bitfield_count >= 6

  -- Runtime optional field: Order Modified Byte 6
  if order_modified_byte_6_exists then

    -- Order Modified Byte 6: Struct of 8 fields
    index, order_modified_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 7
  local order_modified_byte_7_exists = order_modified_bitfield_count >= 7

  -- Runtime optional field: Order Modified Byte 7
  if order_modified_byte_7_exists then

    -- Order Modified Byte 7: Struct of 8 fields
    index, order_modified_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 8
  local order_modified_byte_8_exists = order_modified_bitfield_count >= 8

  -- Runtime optional field: Order Modified Byte 8
  if order_modified_byte_8_exists then

    -- Order Modified Byte 8: Struct of 8 fields
    index, order_modified_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 9
  local order_modified_byte_9_exists = order_modified_bitfield_count >= 9

  -- Runtime optional field: Order Modified Byte 9
  if order_modified_byte_9_exists then

    -- Order Modified Byte 9: Struct of 8 fields
    index, order_modified_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 10
  local order_modified_byte_10_exists = order_modified_bitfield_count >= 10

  -- Runtime optional field: Order Modified Byte 10
  if order_modified_byte_10_exists then

    -- Order Modified Byte 10: Struct of 8 fields
    index, order_modified_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 11
  local order_modified_byte_11_exists = order_modified_bitfield_count >= 11

  -- Runtime optional field: Order Modified Byte 11
  if order_modified_byte_11_exists then

    -- Order Modified Byte 11: Struct of 8 fields
    index, order_modified_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 12
  local order_modified_byte_12_exists = order_modified_bitfield_count >= 12

  -- Runtime optional field: Order Modified Byte 12
  if order_modified_byte_12_exists then

    -- Order Modified Byte 12: Struct of 8 fields
    index, order_modified_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 13
  local order_modified_byte_13_exists = order_modified_bitfield_count >= 13

  -- Runtime optional field: Order Modified Byte 13
  if order_modified_byte_13_exists then

    -- Order Modified Byte 13: Struct of 8 fields
    index, order_modified_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 14
  local order_modified_byte_14_exists = order_modified_bitfield_count >= 14

  -- Runtime optional field: Order Modified Byte 14
  if order_modified_byte_14_exists then

    -- Order Modified Byte 14: Struct of 8 fields
    index, order_modified_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 15
  local order_modified_byte_15_exists = order_modified_bitfield_count >= 15

  -- Runtime optional field: Order Modified Byte 15
  if order_modified_byte_15_exists then

    -- Order Modified Byte 15: Struct of 8 fields
    index, order_modified_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 16
  local order_modified_byte_16_exists = order_modified_bitfield_count >= 16

  -- Runtime optional field: Order Modified Byte 16
  if order_modified_byte_16_exists then

    -- Order Modified Byte 16: Struct of 8 fields
    index, order_modified_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Modified Byte 17
  local order_modified_byte_17_exists = order_modified_bitfield_count >= 17

  -- Runtime optional field: Order Modified Byte 17
  if order_modified_byte_17_exists then

    -- Order Modified Byte 17: Struct of 8 fields
    index, order_modified_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Modified Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_modified_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_modified_return_bitfields then
    local range = buffer(offset, size_of_order_modified_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_modified_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_modified_return_bitfields)

  return offset + size_of_order_modified_return_bitfields
end

-- Order Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields = {}

-- Read runtime size of: Order Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Rejected Bitfield Count
  local order_rejected_bitfield_count = buffer(offset, 1):le_uint()

  return order_rejected_bitfield_count + 1
end

-- Display: Order Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_rejected_return_bitfields)
  local index = offset

  -- Order Rejected Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_rejected_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Rejected Byte 1
  local order_rejected_byte_1_exists = order_rejected_bitfield_count >= 1

  -- Runtime optional field: Order Rejected Byte 1
  if order_rejected_byte_1_exists then

    -- Order Rejected Byte 1: Struct of 8 fields
    index, order_rejected_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 2
  local order_rejected_byte_2_exists = order_rejected_bitfield_count >= 2

  -- Runtime optional field: Order Rejected Byte 2
  if order_rejected_byte_2_exists then

    -- Order Rejected Byte 2: Struct of 8 fields
    index, order_rejected_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 3
  local order_rejected_byte_3_exists = order_rejected_bitfield_count >= 3

  -- Runtime optional field: Order Rejected Byte 3
  if order_rejected_byte_3_exists then

    -- Order Rejected Byte 3: Struct of 8 fields
    index, order_rejected_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 4
  local order_rejected_byte_4_exists = order_rejected_bitfield_count >= 4

  -- Runtime optional field: Order Rejected Byte 4
  if order_rejected_byte_4_exists then

    -- Order Rejected Byte 4: Struct of 8 fields
    index, order_rejected_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 5
  local order_rejected_byte_5_exists = order_rejected_bitfield_count >= 5

  -- Runtime optional field: Order Rejected Byte 5
  if order_rejected_byte_5_exists then

    -- Order Rejected Byte 5: Struct of 8 fields
    index, order_rejected_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 6
  local order_rejected_byte_6_exists = order_rejected_bitfield_count >= 6

  -- Runtime optional field: Order Rejected Byte 6
  if order_rejected_byte_6_exists then

    -- Order Rejected Byte 6: Struct of 8 fields
    index, order_rejected_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 7
  local order_rejected_byte_7_exists = order_rejected_bitfield_count >= 7

  -- Runtime optional field: Order Rejected Byte 7
  if order_rejected_byte_7_exists then

    -- Order Rejected Byte 7: Struct of 8 fields
    index, order_rejected_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 8
  local order_rejected_byte_8_exists = order_rejected_bitfield_count >= 8

  -- Runtime optional field: Order Rejected Byte 8
  if order_rejected_byte_8_exists then

    -- Order Rejected Byte 8: Struct of 8 fields
    index, order_rejected_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 9
  local order_rejected_byte_9_exists = order_rejected_bitfield_count >= 9

  -- Runtime optional field: Order Rejected Byte 9
  if order_rejected_byte_9_exists then

    -- Order Rejected Byte 9: Struct of 8 fields
    index, order_rejected_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 10
  local order_rejected_byte_10_exists = order_rejected_bitfield_count >= 10

  -- Runtime optional field: Order Rejected Byte 10
  if order_rejected_byte_10_exists then

    -- Order Rejected Byte 10: Struct of 8 fields
    index, order_rejected_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 11
  local order_rejected_byte_11_exists = order_rejected_bitfield_count >= 11

  -- Runtime optional field: Order Rejected Byte 11
  if order_rejected_byte_11_exists then

    -- Order Rejected Byte 11: Struct of 8 fields
    index, order_rejected_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 12
  local order_rejected_byte_12_exists = order_rejected_bitfield_count >= 12

  -- Runtime optional field: Order Rejected Byte 12
  if order_rejected_byte_12_exists then

    -- Order Rejected Byte 12: Struct of 8 fields
    index, order_rejected_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 13
  local order_rejected_byte_13_exists = order_rejected_bitfield_count >= 13

  -- Runtime optional field: Order Rejected Byte 13
  if order_rejected_byte_13_exists then

    -- Order Rejected Byte 13: Struct of 8 fields
    index, order_rejected_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 14
  local order_rejected_byte_14_exists = order_rejected_bitfield_count >= 14

  -- Runtime optional field: Order Rejected Byte 14
  if order_rejected_byte_14_exists then

    -- Order Rejected Byte 14: Struct of 8 fields
    index, order_rejected_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 15
  local order_rejected_byte_15_exists = order_rejected_bitfield_count >= 15

  -- Runtime optional field: Order Rejected Byte 15
  if order_rejected_byte_15_exists then

    -- Order Rejected Byte 15: Struct of 8 fields
    index, order_rejected_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 16
  local order_rejected_byte_16_exists = order_rejected_bitfield_count >= 16

  -- Runtime optional field: Order Rejected Byte 16
  if order_rejected_byte_16_exists then

    -- Order Rejected Byte 16: Struct of 8 fields
    index, order_rejected_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Rejected Byte 17
  local order_rejected_byte_17_exists = order_rejected_bitfield_count >= 17

  -- Runtime optional field: Order Rejected Byte 17
  if order_rejected_byte_17_exists then

    -- Order Rejected Byte 17: Struct of 8 fields
    index, order_rejected_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Rejected Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_rejected_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_rejected_return_bitfields then
    local range = buffer(offset, size_of_order_rejected_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_rejected_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_rejected_return_bitfields)

  return offset + size_of_order_rejected_return_bitfields
end

-- Order Acknowledgment Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields = {}

-- Read runtime size of: Order Acknowledgment Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Order Acknowledgment Bitfield Count
  local order_acknowledgment_bitfield_count = buffer(offset, 1):le_uint()

  return order_acknowledgment_bitfield_count + 1
end

-- Display: Order Acknowledgment Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Order Acknowledgment Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_order_acknowledgment_return_bitfields)
  local index = offset

  -- Order Acknowledgment Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, order_acknowledgment_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Order Acknowledgment Byte 1
  local order_acknowledgment_byte_1_exists = order_acknowledgment_bitfield_count >= 1

  -- Runtime optional field: Order Acknowledgment Byte 1
  if order_acknowledgment_byte_1_exists then

    -- Order Acknowledgment Byte 1: Struct of 8 fields
    index, order_acknowledgment_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 2
  local order_acknowledgment_byte_2_exists = order_acknowledgment_bitfield_count >= 2

  -- Runtime optional field: Order Acknowledgment Byte 2
  if order_acknowledgment_byte_2_exists then

    -- Order Acknowledgment Byte 2: Struct of 8 fields
    index, order_acknowledgment_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 3
  local order_acknowledgment_byte_3_exists = order_acknowledgment_bitfield_count >= 3

  -- Runtime optional field: Order Acknowledgment Byte 3
  if order_acknowledgment_byte_3_exists then

    -- Order Acknowledgment Byte 3: Struct of 8 fields
    index, order_acknowledgment_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 4
  local order_acknowledgment_byte_4_exists = order_acknowledgment_bitfield_count >= 4

  -- Runtime optional field: Order Acknowledgment Byte 4
  if order_acknowledgment_byte_4_exists then

    -- Order Acknowledgment Byte 4: Struct of 8 fields
    index, order_acknowledgment_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 5
  local order_acknowledgment_byte_5_exists = order_acknowledgment_bitfield_count >= 5

  -- Runtime optional field: Order Acknowledgment Byte 5
  if order_acknowledgment_byte_5_exists then

    -- Order Acknowledgment Byte 5: Struct of 8 fields
    index, order_acknowledgment_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 6
  local order_acknowledgment_byte_6_exists = order_acknowledgment_bitfield_count >= 6

  -- Runtime optional field: Order Acknowledgment Byte 6
  if order_acknowledgment_byte_6_exists then

    -- Order Acknowledgment Byte 6: Struct of 8 fields
    index, order_acknowledgment_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 7
  local order_acknowledgment_byte_7_exists = order_acknowledgment_bitfield_count >= 7

  -- Runtime optional field: Order Acknowledgment Byte 7
  if order_acknowledgment_byte_7_exists then

    -- Order Acknowledgment Byte 7: Struct of 8 fields
    index, order_acknowledgment_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_7.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 8
  local order_acknowledgment_byte_8_exists = order_acknowledgment_bitfield_count >= 8

  -- Runtime optional field: Order Acknowledgment Byte 8
  if order_acknowledgment_byte_8_exists then

    -- Order Acknowledgment Byte 8: Struct of 8 fields
    index, order_acknowledgment_byte_8 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_8.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 9
  local order_acknowledgment_byte_9_exists = order_acknowledgment_bitfield_count >= 9

  -- Runtime optional field: Order Acknowledgment Byte 9
  if order_acknowledgment_byte_9_exists then

    -- Order Acknowledgment Byte 9: Struct of 8 fields
    index, order_acknowledgment_byte_9 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_9.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 10
  local order_acknowledgment_byte_10_exists = order_acknowledgment_bitfield_count >= 10

  -- Runtime optional field: Order Acknowledgment Byte 10
  if order_acknowledgment_byte_10_exists then

    -- Order Acknowledgment Byte 10: Struct of 8 fields
    index, order_acknowledgment_byte_10 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_10.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 11
  local order_acknowledgment_byte_11_exists = order_acknowledgment_bitfield_count >= 11

  -- Runtime optional field: Order Acknowledgment Byte 11
  if order_acknowledgment_byte_11_exists then

    -- Order Acknowledgment Byte 11: Struct of 8 fields
    index, order_acknowledgment_byte_11 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_11.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 12
  local order_acknowledgment_byte_12_exists = order_acknowledgment_bitfield_count >= 12

  -- Runtime optional field: Order Acknowledgment Byte 12
  if order_acknowledgment_byte_12_exists then

    -- Order Acknowledgment Byte 12: Struct of 8 fields
    index, order_acknowledgment_byte_12 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_12.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 13
  local order_acknowledgment_byte_13_exists = order_acknowledgment_bitfield_count >= 13

  -- Runtime optional field: Order Acknowledgment Byte 13
  if order_acknowledgment_byte_13_exists then

    -- Order Acknowledgment Byte 13: Struct of 8 fields
    index, order_acknowledgment_byte_13 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_13.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 14
  local order_acknowledgment_byte_14_exists = order_acknowledgment_bitfield_count >= 14

  -- Runtime optional field: Order Acknowledgment Byte 14
  if order_acknowledgment_byte_14_exists then

    -- Order Acknowledgment Byte 14: Struct of 8 fields
    index, order_acknowledgment_byte_14 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_14.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 15
  local order_acknowledgment_byte_15_exists = order_acknowledgment_bitfield_count >= 15

  -- Runtime optional field: Order Acknowledgment Byte 15
  if order_acknowledgment_byte_15_exists then

    -- Order Acknowledgment Byte 15: Struct of 8 fields
    index, order_acknowledgment_byte_15 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_15.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 16
  local order_acknowledgment_byte_16_exists = order_acknowledgment_bitfield_count >= 16

  -- Runtime optional field: Order Acknowledgment Byte 16
  if order_acknowledgment_byte_16_exists then

    -- Order Acknowledgment Byte 16: Struct of 8 fields
    index, order_acknowledgment_byte_16 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_16.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Order Acknowledgment Byte 17
  local order_acknowledgment_byte_17_exists = order_acknowledgment_bitfield_count >= 17

  -- Runtime optional field: Order Acknowledgment Byte 17
  if order_acknowledgment_byte_17_exists then

    -- Order Acknowledgment Byte 17: Struct of 8 fields
    index, order_acknowledgment_byte_17 = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_byte_17.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Order Acknowledgment Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_order_acknowledgment_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.order_acknowledgment_return_bitfields then
    local range = buffer(offset, size_of_order_acknowledgment_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.order_acknowledgment_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.fields(buffer, offset, packet, parent, size_of_order_acknowledgment_return_bitfields)

  return offset + size_of_order_acknowledgment_return_bitfields
end

-- Purge Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields = {}

-- Read runtime size of: Purge Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Purge Order Bitfield Count
  local purge_order_bitfield_count = buffer(offset, 1):le_uint()

  return purge_order_bitfield_count + 1
end

-- Display: Purge Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Purge Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_purge_order_return_bitfields)
  local index = offset

  -- Purge Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, purge_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Purge Order Byte 1
  local purge_order_byte_1_exists = purge_order_bitfield_count >= 1

  -- Runtime optional field: Purge Order Byte 1
  if purge_order_byte_1_exists then

    -- Purge Order Byte 1: Struct of 8 fields
    index, purge_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Purge Order Byte 2
  local purge_order_byte_2_exists = purge_order_bitfield_count >= 2

  -- Runtime optional field: Purge Order Byte 2
  if purge_order_byte_2_exists then

    -- Purge Order Byte 2: Struct of 8 fields
    index, purge_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_byte_2.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Purge Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_purge_order_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.purge_order_return_bitfields then
    local range = buffer(offset, size_of_purge_order_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.purge_order_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.fields(buffer, offset, packet, parent, size_of_purge_order_return_bitfields)

  return offset + size_of_purge_order_return_bitfields
end

-- Modify Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields = {}

-- Read runtime size of: Modify Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Modify Order Bitfield Count
  local modify_order_bitfield_count = buffer(offset, 1):le_uint()

  return modify_order_bitfield_count + 1
end

-- Display: Modify Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Modify Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_modify_order_return_bitfields)
  local index = offset

  -- Modify Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, modify_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Modify Order Byte 1
  local modify_order_byte_1_exists = modify_order_bitfield_count >= 1

  -- Runtime optional field: Modify Order Byte 1
  if modify_order_byte_1_exists then

    -- Modify Order Byte 1: Struct of 8 fields
    index, modify_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Modify Order Byte 2
  local modify_order_byte_2_exists = modify_order_bitfield_count >= 2

  -- Runtime optional field: Modify Order Byte 2
  if modify_order_byte_2_exists then

    -- Modify Order Byte 2: Struct of 8 fields
    index, modify_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_byte_2.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Modify Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_modify_order_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.modify_order_return_bitfields then
    local range = buffer(offset, size_of_modify_order_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.modify_order_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.fields(buffer, offset, packet, parent, size_of_modify_order_return_bitfields)

  return offset + size_of_modify_order_return_bitfields
end

-- Cancel Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields = {}

-- Read runtime size of: Cancel Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Cancel Order Bitfield Count
  local cancel_order_bitfield_count = buffer(offset, 1):le_uint()

  return cancel_order_bitfield_count + 1
end

-- Display: Cancel Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Cancel Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_cancel_order_return_bitfields)
  local index = offset

  -- Cancel Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, cancel_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: Cancel Order Byte 1
  local cancel_order_byte_1_exists = cancel_order_bitfield_count >= 1

  -- Runtime optional field: Cancel Order Byte 1
  if cancel_order_byte_1_exists then

    -- Cancel Order Byte 1: Struct of 8 fields
    index, cancel_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: Cancel Order Byte 2
  local cancel_order_byte_2_exists = cancel_order_bitfield_count >= 2

  -- Runtime optional field: Cancel Order Byte 2
  if cancel_order_byte_2_exists then

    -- Cancel Order Byte 2: Struct of 8 fields
    index, cancel_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_byte_2.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: Cancel Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_cancel_order_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.cancel_order_return_bitfields then
    local range = buffer(offset, size_of_cancel_order_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.cancel_order_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.fields(buffer, offset, packet, parent, size_of_cancel_order_return_bitfields)

  return offset + size_of_cancel_order_return_bitfields
end

-- New Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields = {}

-- Read runtime size of: New Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: New Order Bitfield Count
  local new_order_bitfield_count = buffer(offset, 1):le_uint()

  return new_order_bitfield_count + 1
end

-- Display: New Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: New Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.fields = function(buffer, offset, packet, parent, size_of_new_order_return_bitfields)
  local index = offset

  -- New Order Bitfield Count: 1 Byte Unsigned Fixed Width Integer
  index, new_order_bitfield_count = cboe_edgx_equities_orderentry_boe_v2_3.new_order_bitfield_count.dissect(buffer, index, packet, parent)

  -- Runtime optional field exists: New Order Byte 1
  local new_order_byte_1_exists = new_order_bitfield_count >= 1

  -- Runtime optional field: New Order Byte 1
  if new_order_byte_1_exists then

    -- New Order Byte 1: Struct of 8 fields
    index, new_order_byte_1 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_1.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 2
  local new_order_byte_2_exists = new_order_bitfield_count >= 2

  -- Runtime optional field: New Order Byte 2
  if new_order_byte_2_exists then

    -- New Order Byte 2: Struct of 8 fields
    index, new_order_byte_2 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_2.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 3
  local new_order_byte_3_exists = new_order_bitfield_count >= 3

  -- Runtime optional field: New Order Byte 3
  if new_order_byte_3_exists then

    -- New Order Byte 3: Struct of 8 fields
    index, new_order_byte_3 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_3.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 4
  local new_order_byte_4_exists = new_order_bitfield_count >= 4

  -- Runtime optional field: New Order Byte 4
  if new_order_byte_4_exists then

    -- New Order Byte 4: Struct of 8 fields
    index, new_order_byte_4 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_4.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 5
  local new_order_byte_5_exists = new_order_bitfield_count >= 5

  -- Runtime optional field: New Order Byte 5
  if new_order_byte_5_exists then

    -- New Order Byte 5: Struct of 8 fields
    index, new_order_byte_5 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_5.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 6
  local new_order_byte_6_exists = new_order_bitfield_count >= 6

  -- Runtime optional field: New Order Byte 6
  if new_order_byte_6_exists then

    -- New Order Byte 6: Struct of 8 fields
    index, new_order_byte_6 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_6.dissect(buffer, index, packet, parent)
  end

  -- Runtime optional field exists: New Order Byte 7
  local new_order_byte_7_exists = new_order_bitfield_count >= 7

  -- Runtime optional field: New Order Byte 7
  if new_order_byte_7_exists then

    -- New Order Byte 7: Struct of 8 fields
    index, new_order_byte_7 = cboe_edgx_equities_orderentry_boe_v2_3.new_order_byte_7.dissect(buffer, index, packet, parent)
  end

  return index
end

-- Dissect: New Order Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_new_order_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.new_order_return_bitfields then
    local range = buffer(offset, size_of_new_order_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.new_order_return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.fields(buffer, offset, packet, parent, size_of_new_order_return_bitfields)

  return offset + size_of_new_order_return_bitfields
end

-- Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.bitfields = {}

-- Calculate runtime size of: Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.bitfields.size = function(buffer, offset, application_message_type)
  -- Size of New Order Return Bitfields
  if application_message_type == 0x38 then
    return cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.size(buffer, offset)
  end
  -- Size of Cancel Order Return Bitfields
  if application_message_type == 0x39 then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.size(buffer, offset)
  end
  -- Size of Modify Order Return Bitfields
  if application_message_type == 0x3A then
    return cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.size(buffer, offset)
  end
  -- Size of Purge Order Return Bitfields
  if application_message_type == 0x47 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Acknowledgment Return Bitfields
  if application_message_type == 0x25 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Rejected Return Bitfields
  if application_message_type == 0x26 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Modified Return Bitfields
  if application_message_type == 0x27 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Restated Return Bitfields
  if application_message_type == 0x28 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.size(buffer, offset)
  end
  -- Size of User Modify Rejected Return Bitfields
  if application_message_type == 0x29 then
    return cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Cancelled Return Bitfields
  if application_message_type == 0x2A then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.size(buffer, offset)
  end
  -- Size of Cancel Rejected Return Bitfields
  if application_message_type == 0x2B then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.size(buffer, offset)
  end
  -- Size of Order Execution Return Bitfields
  if application_message_type == 0x2C then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.size(buffer, offset)
  end
  -- Size of Trade Cancel Or Correct Return Bitfields
  if application_message_type == 0x2D then
    return cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.size(buffer, offset)
  end
  -- Size of Purge Rejected Return Bitfields
  if application_message_type == 0x48 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.size(buffer, offset)
  end

  return 0
end

-- Display: Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.bitfields.display = function(buffer, offset, packet, parent)
  return ""
end

-- Dissect Branches: Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.bitfields.branches = function(buffer, offset, packet, parent, application_message_type)
  -- Dissect New Order Return Bitfields
  if application_message_type == 0x38 then
    return cboe_edgx_equities_orderentry_boe_v2_3.new_order_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Cancel Order Return Bitfields
  if application_message_type == 0x39 then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Modify Order Return Bitfields
  if application_message_type == 0x3A then
    return cboe_edgx_equities_orderentry_boe_v2_3.modify_order_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Purge Order Return Bitfields
  if application_message_type == 0x47 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_order_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Acknowledgment Return Bitfields
  if application_message_type == 0x25 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Rejected Return Bitfields
  if application_message_type == 0x26 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Modified Return Bitfields
  if application_message_type == 0x27 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_modified_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Restated Return Bitfields
  if application_message_type == 0x28 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_restated_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect User Modify Rejected Return Bitfields
  if application_message_type == 0x29 then
    return cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Cancelled Return Bitfields
  if application_message_type == 0x2A then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Cancel Rejected Return Bitfields
  if application_message_type == 0x2B then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Execution Return Bitfields
  if application_message_type == 0x2C then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_execution_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Trade Cancel Or Correct Return Bitfields
  if application_message_type == 0x2D then
    return cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_return_bitfields.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Purge Rejected Return Bitfields
  if application_message_type == 0x48 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_return_bitfields.dissect(buffer, offset, packet, parent)
  end

  return offset
end

-- Dissect: Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.bitfields.dissect = function(buffer, offset, packet, parent, application_message_type)
  if not show.bitfields then
    return cboe_edgx_equities_orderentry_boe_v2_3.bitfields.branches(buffer, offset, packet, parent, application_message_type)
  end

  -- Calculate size and check that branch is not empty
  local size = cboe_edgx_equities_orderentry_boe_v2_3.bitfields.size(buffer, offset, application_message_type)
  if size == 0 then
    return offset
  end

  -- Dissect Element
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.bitfields.display(buffer, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.bitfields, range, display)

  return cboe_edgx_equities_orderentry_boe_v2_3.bitfields.branches(buffer, offset, packet, parent, application_message_type)
end

-- Application Message Type
cboe_edgx_equities_orderentry_boe_v2_3.application_message_type = {}

-- Size: Application Message Type
cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.size = 1

-- Display: Application Message Type
cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.display = function(value)
  if value == 0x38 then
    return "Application Message Type: New Order (0x38)"
  end
  if value == 0x39 then
    return "Application Message Type: Cancel Order (0x39)"
  end
  if value == 0x3A then
    return "Application Message Type: Modify Order (0x3A)"
  end
  if value == 0x47 then
    return "Application Message Type: Purge Order (0x47)"
  end
  if value == 0x25 then
    return "Application Message Type: Order Acknowledgment (0x25)"
  end
  if value == 0x26 then
    return "Application Message Type: Order Rejected (0x26)"
  end
  if value == 0x27 then
    return "Application Message Type: Order Modified (0x27)"
  end
  if value == 0x28 then
    return "Application Message Type: Order Restated (0x28)"
  end
  if value == 0x29 then
    return "Application Message Type: User Modify Rejected (0x29)"
  end
  if value == 0x2A then
    return "Application Message Type: Order Cancelled (0x2A)"
  end
  if value == 0x2B then
    return "Application Message Type: Cancel Rejected (0x2B)"
  end
  if value == 0x2C then
    return "Application Message Type: Order Execution (0x2C)"
  end
  if value == 0x2D then
    return "Application Message Type: Trade Cancel Or Correct (0x2D)"
  end
  if value == 0x48 then
    return "Application Message Type: Purge Rejected (0x48)"
  end

  return "Application Message Type: Unknown("..value..")"
end

-- Dissect: Application Message Type
cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.application_message_type, range, value, display)

  return offset + length, value
end

-- Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields = {}

-- Read runtime size of: Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Param Group Length
  local param_group_length = buffer(offset - 3, 2):le_uint()

  return param_group_length - 3
end

-- Display: Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.fields = function(buffer, offset, packet, parent, size_of_return_bitfields)
  local index = offset

  -- Application Message Type: 1 Byte Unsigned Fixed Width Integer Enum with 14 values
  index, application_message_type = cboe_edgx_equities_orderentry_boe_v2_3.application_message_type.dissect(buffer, index, packet, parent)

  -- Bitfields: Runtime Type with 14 branches
  index = cboe_edgx_equities_orderentry_boe_v2_3.bitfields.dissect(buffer, index, packet, parent, application_message_type)

  return index
end

-- Dissect: Return Bitfields
cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_return_bitfields = cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.return_bitfields then
    local range = buffer(offset, size_of_return_bitfields)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.return_bitfields, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.fields(buffer, offset, packet, parent, size_of_return_bitfields)

  return offset + size_of_return_bitfields
end

-- No Unspecified Unit Replay
cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay = {}

-- Size: No Unspecified Unit Replay
cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.size = 1

-- Display: No Unspecified Unit Replay
cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.display = function(value)
  if value == "0" then
    return "No Unspecified Unit Replay: False (0)"
  end
  if value == "1" then
    return "No Unspecified Unit Replay: True (1)"
  end
  if value == "T" then
    return "No Unspecified Unit Replay: Test (T)"
  end

  return "No Unspecified Unit Replay: Unknown("..value..")"
end

-- Dissect: No Unspecified Unit Replay
cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.no_unspecified_unit_replay, range, value, display)

  return offset + length, value
end

-- Unit Sequences
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences = {}

-- Calculate size of: Unit Sequences
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.size = function(buffer, offset)
  local index = 0

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.size

  -- Calculate field size from count
  local unit_sequence_count = buffer(offset + index - 1, 1):le_uint()
  index = index + unit_sequence_count * 5

  return index
end

-- Display: Unit Sequences
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Unit Sequences
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.fields = function(buffer, offset, packet, parent)
  local index = offset

  -- No Unspecified Unit Replay: 1 Byte Ascii String Enum with 3 values
  index, no_unspecified_unit_replay = cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.dissect(buffer, index, packet, parent)

  -- Number Of Units: 1 Byte Unsigned Fixed Width Integer
  index, number_of_units = cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.dissect(buffer, index, packet, parent)

  -- Repeating: Unit Sequence
  for unit_sequence_index = 1, number_of_units do
    index, unit_sequence = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.dissect(buffer, index, packet, parent, unit_sequence_index)
  end

  return index
end

-- Dissect: Unit Sequences
cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.dissect = function(buffer, offset, packet, parent)
  -- Optionally add dynamic struct element to protocol tree
  if show.unit_sequences then
    local length = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.size(buffer, offset)
    local range = buffer(offset, length)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.unit_sequences, range, display)
  end

  return cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.fields(buffer, offset, packet, parent)
end

-- Parameter
cboe_edgx_equities_orderentry_boe_v2_3.parameter = {}

-- Calculate runtime size of: Parameter
cboe_edgx_equities_orderentry_boe_v2_3.parameter.size = function(buffer, offset, param_group_type)
  -- Size of Unit Sequences
  if param_group_type == 0x80 then
    return cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.size(buffer, offset)
  end
  -- Size of Return Bitfields
  if param_group_type == 0x81 then
    return cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.size(buffer, offset)
  end

  return 0
end

-- Display: Parameter
cboe_edgx_equities_orderentry_boe_v2_3.parameter.display = function(buffer, offset, packet, parent)
  return ""
end

-- Dissect Branches: Parameter
cboe_edgx_equities_orderentry_boe_v2_3.parameter.branches = function(buffer, offset, packet, parent, param_group_type)
  -- Dissect Unit Sequences
  if param_group_type == 0x80 then
    return cboe_edgx_equities_orderentry_boe_v2_3.unit_sequences.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Return Bitfields
  if param_group_type == 0x81 then
    return cboe_edgx_equities_orderentry_boe_v2_3.return_bitfields.dissect(buffer, offset, packet, parent)
  end

  return offset
end

-- Dissect: Parameter
cboe_edgx_equities_orderentry_boe_v2_3.parameter.dissect = function(buffer, offset, packet, parent, param_group_type)
  if not show.parameter then
    return cboe_edgx_equities_orderentry_boe_v2_3.parameter.branches(buffer, offset, packet, parent, param_group_type)
  end

  -- Calculate size and check that branch is not empty
  local size = cboe_edgx_equities_orderentry_boe_v2_3.parameter.size(buffer, offset, param_group_type)
  if size == 0 then
    return offset
  end

  -- Dissect Element
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.parameter.display(buffer, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.parameter, range, display)

  return cboe_edgx_equities_orderentry_boe_v2_3.parameter.branches(buffer, offset, packet, parent, param_group_type)
end

-- Param Group Type
cboe_edgx_equities_orderentry_boe_v2_3.param_group_type = {}

-- Size: Param Group Type
cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.size = 1

-- Display: Param Group Type
cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.display = function(value)
  if value == 0x80 then
    return "Param Group Type: Unit Sequences (0x80)"
  end
  if value == 0x81 then
    return "Param Group Type: Return Bitfields (0x81)"
  end

  return "Param Group Type: Unknown("..value..")"
end

-- Dissect: Param Group Type
cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_type, range, value, display)

  return offset + length, value
end

-- Param Group Length
cboe_edgx_equities_orderentry_boe_v2_3.param_group_length = {}

-- Size: Param Group Length
cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.size = 2

-- Display: Param Group Length
cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.display = function(value)
  return "Param Group Length: "..value
end

-- Dissect: Param Group Length
cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_length, range, value, display)

  return offset + length, value
end

-- Param Header
cboe_edgx_equities_orderentry_boe_v2_3.param_header = {}

-- Calculate size of: Param Header
cboe_edgx_equities_orderentry_boe_v2_3.param_header.size = function(buffer, offset)
  local index = 0

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.size

  return index
end

-- Display: Param Header
cboe_edgx_equities_orderentry_boe_v2_3.param_header.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Param Header
cboe_edgx_equities_orderentry_boe_v2_3.param_header.fields = function(buffer, offset, packet, parent)
  local index = offset

  -- Param Group Length: 2 Byte Unsigned Fixed Width Integer
  index, param_group_length = cboe_edgx_equities_orderentry_boe_v2_3.param_group_length.dissect(buffer, index, packet, parent)

  -- Param Group Type: 1 Byte Unsigned Fixed Width Integer Enum with 2 values
  index, param_group_type = cboe_edgx_equities_orderentry_boe_v2_3.param_group_type.dissect(buffer, index, packet, parent)

  return index
end

-- Dissect: Param Header
cboe_edgx_equities_orderentry_boe_v2_3.param_header.dissect = function(buffer, offset, packet, parent)
  if show.param_header then
    -- Optionally add element to protocol tree
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_header, buffer(offset, 0))
    local index = cboe_edgx_equities_orderentry_boe_v2_3.param_header.fields(buffer, offset, packet, parent)
    local length = index - offset
    parent:set_len(length)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.param_header.display(packet, parent, length)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    return cboe_edgx_equities_orderentry_boe_v2_3.param_header.fields(buffer, offset, packet, parent)
  end
end

-- Param Group
cboe_edgx_equities_orderentry_boe_v2_3.param_group = {}

-- Display: Param Group
cboe_edgx_equities_orderentry_boe_v2_3.param_group.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Param Group
cboe_edgx_equities_orderentry_boe_v2_3.param_group.fields = function(buffer, offset, packet, parent, size_of_param_group, param_group_index)
  local index = offset

  -- Implicit Param Group Index
  if param_group_index ~= nil then
    local iteration = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group_index, param_group_index)
    iteration:set_generated()
  end

  -- Param Header: Struct of 2 fields
  index, param_header = cboe_edgx_equities_orderentry_boe_v2_3.param_header.dissect(buffer, index, packet, parent)

  -- Dependency element: Param Group Type
  local param_group_type = buffer(index - 1, 1):le_uint()

  -- Parameter: Runtime Type with 2 branches
  index = cboe_edgx_equities_orderentry_boe_v2_3.parameter.dissect(buffer, index, packet, parent, param_group_type)

  return index
end

-- Dissect: Param Group
cboe_edgx_equities_orderentry_boe_v2_3.param_group.dissect = function(buffer, offset, packet, parent, size_of_param_group, param_group_index)
  local index = offset + size_of_param_group

  -- Optionally add group/struct element to protocol tree
  if show.param_group then
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.param_group, buffer(offset, 0))
    local current = cboe_edgx_equities_orderentry_boe_v2_3.param_group.fields(buffer, offset, packet, parent, size_of_param_group, param_group_index)
    parent:set_len(size_of_param_group)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.param_group.display(buffer, packet, parent)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    cboe_edgx_equities_orderentry_boe_v2_3.param_group.fields(buffer, offset, packet, parent, size_of_param_group, param_group_index)

    return index
  end
end

-- Number Of Param Groups
cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups = {}

-- Size: Number Of Param Groups
cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.size = 1

-- Display: Number Of Param Groups
cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.display = function(value)
  return "Number Of Param Groups: "..value
end

-- Dissect: Number Of Param Groups
cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.number_of_param_groups, range, value, display)

  return offset + length, value
end

-- Login Response Text
cboe_edgx_equities_orderentry_boe_v2_3.login_response_text = {}

-- Size: Login Response Text
cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.size = 60

-- Display: Login Response Text
cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.display = function(value)
  return "Login Response Text: "..value
end

-- Dissect: Login Response Text
cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_text, range, value, display)

  return offset + length, value
end

-- Login Response Status
cboe_edgx_equities_orderentry_boe_v2_3.login_response_status = {}

-- Size: Login Response Status
cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.size = 1

-- Display: Login Response Status
cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.display = function(value)
  if value == "A" then
    return "Login Response Status: Login Accepted (A)"
  end
  if value == "N" then
    return "Login Response Status: Not Authorized (N)"
  end
  if value == "D" then
    return "Login Response Status: Session Is Disabled (D)"
  end
  if value == "B" then
    return "Login Response Status: Session In Use (B)"
  end
  if value == "S" then
    return "Login Response Status: Invalid Session (S)"
  end
  if value == "Q" then
    return "Login Response Status: Sequence Ahead In Login Message (Q)"
  end
  if value == "I" then
    return "Login Response Status: Invalid Unit Given In Login Message (I)"
  end
  if value == "F" then
    return "Login Response Status: Invalid Return Bit Field In Login Message (F)"
  end
  if value == "M" then
    return "Login Response Status: Invalid Login Request Message Structure (M)"
  end

  return "Login Response Status: Unknown("..value..")"
end

-- Dissect: Login Response Status
cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_status, range, value, display)

  return offset + length, value
end

-- Login Response Message
cboe_edgx_equities_orderentry_boe_v2_3.login_response_message = {}

-- Read runtime size of: Login Response Message
cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Login Response Message
cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Login Response Message
cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.fields = function(buffer, offset, packet, parent, size_of_login_response_message)
  local index = offset

  -- Login Response Status: 1 Byte Ascii String Enum with 9 values
  index, login_response_status = cboe_edgx_equities_orderentry_boe_v2_3.login_response_status.dissect(buffer, index, packet, parent)

  -- Login Response Text: 60 Byte Ascii String
  index, login_response_text = cboe_edgx_equities_orderentry_boe_v2_3.login_response_text.dissect(buffer, index, packet, parent)

  -- No Unspecified Unit Replay: 1 Byte Ascii String Enum with 3 values
  index, no_unspecified_unit_replay = cboe_edgx_equities_orderentry_boe_v2_3.no_unspecified_unit_replay.dissect(buffer, index, packet, parent)

  -- Last Received Sequence Number: 4 Byte Unsigned Fixed Width Integer
  index, last_received_sequence_number = cboe_edgx_equities_orderentry_boe_v2_3.last_received_sequence_number.dissect(buffer, index, packet, parent)

  -- Number Of Units: 1 Byte Unsigned Fixed Width Integer
  index, number_of_units = cboe_edgx_equities_orderentry_boe_v2_3.number_of_units.dissect(buffer, index, packet, parent)

  -- Repeating: Unit Sequence
  for unit_sequence_index = 1, number_of_units do
    index, unit_sequence = cboe_edgx_equities_orderentry_boe_v2_3.unit_sequence.dissect(buffer, index, packet, parent, unit_sequence_index)
  end

  -- Number Of Param Groups: 1 Byte Unsigned Fixed Width Integer
  index, number_of_param_groups = cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.dissect(buffer, index, packet, parent)

  -- Repeating: Param Group
  for param_group_index = 1, number_of_param_groups do

    -- Dependency element: Param Group Length
    local param_group_length = buffer(index, 2):le_uint()

    -- Runtime Size Of: Param Group
    index, param_group = cboe_edgx_equities_orderentry_boe_v2_3.param_group.dissect(buffer, index, packet, parent, param_group_length)
  end

  return index
end

-- Dissect: Login Response Message
cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_login_response_message = cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.login_response_message then
    local range = buffer(offset, size_of_login_response_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_response_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.fields(buffer, offset, packet, parent, size_of_login_response_message)

  return offset + size_of_login_response_message
end

-- Client Heartbeat Message
cboe_edgx_equities_orderentry_boe_v2_3.client_heartbeat_message = {}

-- Logout Request Message
cboe_edgx_equities_orderentry_boe_v2_3.logout_request_message = {}

-- Password
cboe_edgx_equities_orderentry_boe_v2_3.password = {}

-- Size: Password
cboe_edgx_equities_orderentry_boe_v2_3.password.size = 10

-- Display: Password
cboe_edgx_equities_orderentry_boe_v2_3.password.display = function(value)
  return "Password: "..value
end

-- Dissect: Password
cboe_edgx_equities_orderentry_boe_v2_3.password.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.password.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.password.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.password, range, value, display)

  return offset + length, value
end

-- Username
cboe_edgx_equities_orderentry_boe_v2_3.username = {}

-- Size: Username
cboe_edgx_equities_orderentry_boe_v2_3.username.size = 4

-- Display: Username
cboe_edgx_equities_orderentry_boe_v2_3.username.display = function(value)
  return "Username: "..value
end

-- Dissect: Username
cboe_edgx_equities_orderentry_boe_v2_3.username.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.username.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.username.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.username, range, value, display)

  return offset + length, value
end

-- Session Sub Id
cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id = {}

-- Size: Session Sub Id
cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.size = 4

-- Display: Session Sub Id
cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.display = function(value)
  return "Session Sub Id: "..value
end

-- Dissect: Session Sub Id
cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.size
  local range = buffer(offset, length)
  local value = range:string()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.session_sub_id, range, value, display)

  return offset + length, value
end

-- Login Request Message
cboe_edgx_equities_orderentry_boe_v2_3.login_request_message = {}

-- Read runtime size of: Login Request Message
cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.size = function(buffer, offset)
  local index = offset

  -- Dependency element: Message Length
  local message_length = buffer(offset - 8, 2):le_uint()

  return message_length - 8
end

-- Display: Login Request Message
cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Login Request Message
cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.fields = function(buffer, offset, packet, parent, size_of_login_request_message)
  local index = offset

  -- Session Sub Id: 4 Byte Ascii String
  index, session_sub_id = cboe_edgx_equities_orderentry_boe_v2_3.session_sub_id.dissect(buffer, index, packet, parent)

  -- Username: 4 Byte Ascii String
  index, username = cboe_edgx_equities_orderentry_boe_v2_3.username.dissect(buffer, index, packet, parent)

  -- Password: 10 Byte Ascii String
  index, password = cboe_edgx_equities_orderentry_boe_v2_3.password.dissect(buffer, index, packet, parent)

  -- Number Of Param Groups: 1 Byte Unsigned Fixed Width Integer
  index, number_of_param_groups = cboe_edgx_equities_orderentry_boe_v2_3.number_of_param_groups.dissect(buffer, index, packet, parent)

  -- Repeating: Param Group
  for param_group_index = 1, number_of_param_groups do

    -- Dependency element: Param Group Length
    local param_group_length = buffer(index, 2):le_uint()

    -- Runtime Size Of: Param Group
    index, param_group = cboe_edgx_equities_orderentry_boe_v2_3.param_group.dissect(buffer, index, packet, parent, param_group_length)
  end

  return index
end

-- Dissect: Login Request Message
cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.dissect = function(buffer, offset, packet, parent)
  -- Parse runtime size
  local size_of_login_request_message = cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.size(buffer, offset)

  -- Optionally add struct element to protocol tree
  if show.login_request_message then
    local range = buffer(offset, size_of_login_request_message)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.display(buffer, packet, parent)
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.login_request_message, range, display)
  end

  cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.fields(buffer, offset, packet, parent, size_of_login_request_message)

  return offset + size_of_login_request_message
end

-- Message
cboe_edgx_equities_orderentry_boe_v2_3.message = {}

-- Calculate runtime size of: Message
cboe_edgx_equities_orderentry_boe_v2_3.message.size = function(buffer, offset, message_type)
  -- Size of Login Request Message
  if message_type == 0x37 then
    return cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.size(buffer, offset)
  end
  -- Size of Logout Request Message
  if message_type == 0x02 then
    return 0
  end
  -- Size of Client Heartbeat Message
  if message_type == 0x03 then
    return 0
  end
  -- Size of Login Response Message
  if message_type == 0x24 then
    return cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.size(buffer, offset)
  end
  -- Size of Logout Message
  if message_type == 0x08 then
    return cboe_edgx_equities_orderentry_boe_v2_3.logout_message.size(buffer, offset)
  end
  -- Size of Server Heartbeat Message
  if message_type == 0x09 then
    return 0
  end
  -- Size of Replay Complete Message
  if message_type == 0x13 then
    return 0
  end
  -- Size of New Order Message
  if message_type == 0x38 then
    return cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.size(buffer, offset)
  end
  -- Size of Cancel Order Message
  if message_type == 0x39 then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.size(buffer, offset)
  end
  -- Size of Modify Order Message
  if message_type == 0x3A then
    return cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.size(buffer, offset)
  end
  -- Size of Purge Order Message
  if message_type == 0x47 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.size(buffer, offset)
  end
  -- Size of Order Acknowledgment Message
  if message_type == 0x25 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.size(buffer, offset)
  end
  -- Size of Order Rejected Message
  if message_type == 0x26 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.size(buffer, offset)
  end
  -- Size of Order Modified Message
  if message_type == 0x27 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.size(buffer, offset)
  end
  -- Size of Order Restated Message
  if message_type == 0x28 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.size(buffer, offset)
  end
  -- Size of User Modify Rejected Message
  if message_type == 0x29 then
    return cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.size(buffer, offset)
  end
  -- Size of Order Cancelled Message
  if message_type == 0x2A then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.size(buffer, offset)
  end
  -- Size of Cancel Rejected Message
  if message_type == 0x2B then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.size(buffer, offset)
  end
  -- Size of Order Execution Message
  if message_type == 0x2C then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.size(buffer, offset)
  end
  -- Size of Trade Cancel Or Correct Message
  if message_type == 0x2D then
    return cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.size(buffer, offset)
  end
  -- Size of Mass Cancel Acknowledgment Message
  if message_type == 0x36 then
    return cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.size(buffer, offset)
  end
  -- Size of Purge Rejected Message
  if message_type == 0x48 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.size(buffer, offset)
  end

  return 0
end

-- Display: Message
cboe_edgx_equities_orderentry_boe_v2_3.message.display = function(buffer, offset, packet, parent)
  return ""
end

-- Dissect Branches: Message
cboe_edgx_equities_orderentry_boe_v2_3.message.branches = function(buffer, offset, packet, parent, message_type)
  -- Dissect Login Request Message
  if message_type == 0x37 then
    return cboe_edgx_equities_orderentry_boe_v2_3.login_request_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Logout Request Message
  if message_type == 0x02 then
  end
  -- Dissect Client Heartbeat Message
  if message_type == 0x03 then
  end
  -- Dissect Login Response Message
  if message_type == 0x24 then
    return cboe_edgx_equities_orderentry_boe_v2_3.login_response_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Logout Message
  if message_type == 0x08 then
    return cboe_edgx_equities_orderentry_boe_v2_3.logout_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Server Heartbeat Message
  if message_type == 0x09 then
  end
  -- Dissect Replay Complete Message
  if message_type == 0x13 then
  end
  -- Dissect New Order Message
  if message_type == 0x38 then
    return cboe_edgx_equities_orderentry_boe_v2_3.new_order_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Cancel Order Message
  if message_type == 0x39 then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_order_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Modify Order Message
  if message_type == 0x3A then
    return cboe_edgx_equities_orderentry_boe_v2_3.modify_order_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Purge Order Message
  if message_type == 0x47 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_order_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Acknowledgment Message
  if message_type == 0x25 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_acknowledgment_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Rejected Message
  if message_type == 0x26 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_rejected_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Modified Message
  if message_type == 0x27 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_modified_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Restated Message
  if message_type == 0x28 then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_restated_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect User Modify Rejected Message
  if message_type == 0x29 then
    return cboe_edgx_equities_orderentry_boe_v2_3.user_modify_rejected_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Cancelled Message
  if message_type == 0x2A then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_cancelled_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Cancel Rejected Message
  if message_type == 0x2B then
    return cboe_edgx_equities_orderentry_boe_v2_3.cancel_rejected_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Order Execution Message
  if message_type == 0x2C then
    return cboe_edgx_equities_orderentry_boe_v2_3.order_execution_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Trade Cancel Or Correct Message
  if message_type == 0x2D then
    return cboe_edgx_equities_orderentry_boe_v2_3.trade_cancel_or_correct_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Mass Cancel Acknowledgment Message
  if message_type == 0x36 then
    return cboe_edgx_equities_orderentry_boe_v2_3.mass_cancel_acknowledgment_message.dissect(buffer, offset, packet, parent)
  end
  -- Dissect Purge Rejected Message
  if message_type == 0x48 then
    return cboe_edgx_equities_orderentry_boe_v2_3.purge_rejected_message.dissect(buffer, offset, packet, parent)
  end

  return offset
end

-- Dissect: Message
cboe_edgx_equities_orderentry_boe_v2_3.message.dissect = function(buffer, offset, packet, parent, message_type)
  if not show.message then
    return cboe_edgx_equities_orderentry_boe_v2_3.message.branches(buffer, offset, packet, parent, message_type)
  end

  -- Calculate size and check that branch is not empty
  local size = cboe_edgx_equities_orderentry_boe_v2_3.message.size(buffer, offset, message_type)
  if size == 0 then
    return offset
  end

  -- Dissect Element
  local range = buffer(offset, size)
  local display = cboe_edgx_equities_orderentry_boe_v2_3.message.display(buffer, packet, parent)
  local element = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message, range, display)

  return cboe_edgx_equities_orderentry_boe_v2_3.message.branches(buffer, offset, packet, parent, message_type)
end

-- Matching Unit
cboe_edgx_equities_orderentry_boe_v2_3.matching_unit = {}

-- Size: Matching Unit
cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.size = 1

-- Display: Matching Unit
cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.display = function(value)
  return "Matching Unit: "..value
end

-- Dissect: Matching Unit
cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.matching_unit, range, value, display)

  return offset + length, value
end

-- Message Type
cboe_edgx_equities_orderentry_boe_v2_3.message_type = {}

-- Size: Message Type
cboe_edgx_equities_orderentry_boe_v2_3.message_type.size = 1

-- Display: Message Type
cboe_edgx_equities_orderentry_boe_v2_3.message_type.display = function(value)
  if value == 0x37 then
    return "Message Type: Login Request Message (0x37)"
  end
  if value == 0x02 then
    return "Message Type: Logout Request Message (0x02)"
  end
  if value == 0x03 then
    return "Message Type: Client Heartbeat Message (0x03)"
  end
  if value == 0x24 then
    return "Message Type: Login Response Message (0x24)"
  end
  if value == 0x08 then
    return "Message Type: Logout Message (0x08)"
  end
  if value == 0x09 then
    return "Message Type: Server Heartbeat Message (0x09)"
  end
  if value == 0x13 then
    return "Message Type: Replay Complete Message (0x13)"
  end
  if value == 0x38 then
    return "Message Type: New Order Message (0x38)"
  end
  if value == 0x39 then
    return "Message Type: Cancel Order Message (0x39)"
  end
  if value == 0x3A then
    return "Message Type: Modify Order Message (0x3A)"
  end
  if value == 0x47 then
    return "Message Type: Purge Order Message (0x47)"
  end
  if value == 0x25 then
    return "Message Type: Order Acknowledgment Message (0x25)"
  end
  if value == 0x26 then
    return "Message Type: Order Rejected Message (0x26)"
  end
  if value == 0x27 then
    return "Message Type: Order Modified Message (0x27)"
  end
  if value == 0x28 then
    return "Message Type: Order Restated Message (0x28)"
  end
  if value == 0x29 then
    return "Message Type: User Modify Rejected Message (0x29)"
  end
  if value == 0x2A then
    return "Message Type: Order Cancelled Message (0x2A)"
  end
  if value == 0x2B then
    return "Message Type: Cancel Rejected Message (0x2B)"
  end
  if value == 0x2C then
    return "Message Type: Order Execution Message (0x2C)"
  end
  if value == 0x2D then
    return "Message Type: Trade Cancel Or Correct Message (0x2D)"
  end
  if value == 0x36 then
    return "Message Type: Mass Cancel Acknowledgment Message (0x36)"
  end
  if value == 0x48 then
    return "Message Type: Purge Rejected Message (0x48)"
  end

  return "Message Type: Unknown("..value..")"
end

-- Dissect: Message Type
cboe_edgx_equities_orderentry_boe_v2_3.message_type.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.message_type.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.message_type.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_type, range, value, display)

  return offset + length, value
end

-- Message Length
cboe_edgx_equities_orderentry_boe_v2_3.message_length = {}

-- Size: Message Length
cboe_edgx_equities_orderentry_boe_v2_3.message_length.size = 2

-- Display: Message Length
cboe_edgx_equities_orderentry_boe_v2_3.message_length.display = function(value)
  return "Message Length: "..value
end

-- Dissect: Message Length
cboe_edgx_equities_orderentry_boe_v2_3.message_length.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.message_length.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.message_length.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_length, range, value, display)

  return offset + length, value
end

-- Start Of Message
cboe_edgx_equities_orderentry_boe_v2_3.start_of_message = {}

-- Size: Start Of Message
cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.size = 2

-- Display: Start Of Message
cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.display = function(value)
  return "Start Of Message: "..value
end

-- Dissect: Start Of Message
cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.dissect = function(buffer, offset, packet, parent)
  local length = cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.size
  local range = buffer(offset, length)
  local value = range:le_uint()
  local display = cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.display(value, buffer, offset, packet, parent)

  parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.start_of_message, range, value, display)

  return offset + length, value
end

-- Message Header
cboe_edgx_equities_orderentry_boe_v2_3.message_header = {}

-- Calculate size of: Message Header
cboe_edgx_equities_orderentry_boe_v2_3.message_header.size = function(buffer, offset)
  local index = 0

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.message_length.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.message_type.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.size

  index = index + cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.size

  return index
end

-- Display: Message Header
cboe_edgx_equities_orderentry_boe_v2_3.message_header.display = function(packet, parent, length)
  return ""
end

-- Dissect Fields: Message Header
cboe_edgx_equities_orderentry_boe_v2_3.message_header.fields = function(buffer, offset, packet, parent)
  local index = offset

  -- Start Of Message: 2 Byte Unsigned Fixed Width Integer
  index, start_of_message = cboe_edgx_equities_orderentry_boe_v2_3.start_of_message.dissect(buffer, index, packet, parent)

  -- Message Length: 2 Byte Unsigned Fixed Width Integer
  index, message_length = cboe_edgx_equities_orderentry_boe_v2_3.message_length.dissect(buffer, index, packet, parent)

  -- Message Type: 1 Byte Unsigned Fixed Width Integer Enum with 22 values
  index, message_type = cboe_edgx_equities_orderentry_boe_v2_3.message_type.dissect(buffer, index, packet, parent)

  -- Matching Unit: 1 Byte Unsigned Fixed Width Integer
  index, matching_unit = cboe_edgx_equities_orderentry_boe_v2_3.matching_unit.dissect(buffer, index, packet, parent)

  -- Sequence Number: 4 Byte Unsigned Fixed Width Integer
  index, sequence_number = cboe_edgx_equities_orderentry_boe_v2_3.sequence_number.dissect(buffer, index, packet, parent)

  return index
end

-- Dissect: Message Header
cboe_edgx_equities_orderentry_boe_v2_3.message_header.dissect = function(buffer, offset, packet, parent)
  if show.message_header then
    -- Optionally add element to protocol tree
    parent = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3.fields.message_header, buffer(offset, 0))
    local index = cboe_edgx_equities_orderentry_boe_v2_3.message_header.fields(buffer, offset, packet, parent)
    local length = index - offset
    parent:set_len(length)
    local display = cboe_edgx_equities_orderentry_boe_v2_3.message_header.display(packet, parent, length)
    parent:append_text(display)

    return index, parent
  else
    -- Skip element, add fields directly
    return cboe_edgx_equities_orderentry_boe_v2_3.message_header.fields(buffer, offset, packet, parent)
  end
end

-- Packet
cboe_edgx_equities_orderentry_boe_v2_3.packet = {}

-- Dissect Packet
cboe_edgx_equities_orderentry_boe_v2_3.packet.dissect = function(buffer, packet, parent)
  local index = 0

  -- Message Header: Struct of 5 fields
  index, message_header = cboe_edgx_equities_orderentry_boe_v2_3.message_header.dissect(buffer, index, packet, parent)

  -- Dependency element: Message Type
  local message_type = buffer(index - 6, 1):le_uint()

  -- Message: Runtime Type with 22 branches
  index = cboe_edgx_equities_orderentry_boe_v2_3.message.dissect(buffer, index, packet, parent, message_type)

  return index
end


-----------------------------------------------------------------------
-- Protocol Dissector and Components
-----------------------------------------------------------------------

-- Initialize Dissector
function omi_cboe_edgx_equities_orderentry_boe_v2_3.init()
end

-- Dissector for Cboe Edgx Equities OrderEntry Boe 2.3
function omi_cboe_edgx_equities_orderentry_boe_v2_3.dissector(buffer, packet, parent)

  -- Set protocol name
  packet.cols.protocol = omi_cboe_edgx_equities_orderentry_boe_v2_3.name

  -- Dissect protocol
  local protocol = parent:add(omi_cboe_edgx_equities_orderentry_boe_v2_3, buffer(), omi_cboe_edgx_equities_orderentry_boe_v2_3.description, "("..buffer:len().." Bytes)")
  return cboe_edgx_equities_orderentry_boe_v2_3.packet.dissect(buffer, packet, protocol)
end

-- Register With Tcp Table
local tcp_table = DissectorTable.get("tcp.port")
tcp_table:add(65333, omi_cboe_edgx_equities_orderentry_boe_v2_3)


-----------------------------------------------------------------------
-- Protocol Heuristics
-----------------------------------------------------------------------

-- Verify size of packet
cboe_edgx_equities_orderentry_boe_v2_3.packet.requiredsize = function(buffer)

  return true
end

-- Dissector Heuristic for Cboe Edgx Equities OrderEntry Boe 2.3
local function omi_cboe_edgx_equities_orderentry_boe_v2_3_heuristic(buffer, packet, parent)
  -- Verify packet length
  if not cboe_edgx_equities_orderentry_boe_v2_3.packet.requiredsize(buffer) then return false end

  -- Protocol is valid, set conversation and dissect this packet
  packet.conversation = omi_cboe_edgx_equities_orderentry_boe_v2_3
  omi_cboe_edgx_equities_orderentry_boe_v2_3.dissector(buffer, packet, parent)

  return true
end

-- Register Heuristic for Cboe Edgx Equities OrderEntry Boe 2.3
omi_cboe_edgx_equities_orderentry_boe_v2_3:register_heuristic("tcp", omi_cboe_edgx_equities_orderentry_boe_v2_3_heuristic)

-----------------------------------------------------------------------
-- Lua dissectors are an easily edited and modified cross platform dissection solution.
-- Feel free to modify. Enjoy.
-----------------------------------------------------------------------
-- 
-- Protocol:
--   Organization: Chicago Board Options Exchange
--   Version: 2.3
--   Date: Monday, March 11, 2019
--   Specification: Cboe_US_Equities_BOE_Specification.pdf
-- 
-- Script:
--   Generator: 1.5.0.0
--   Compiler: 2.0
--   License: Public/GPLv3
--   Authors: Omi Developers
-- 
-- This script was generated by the Open Markets Initiative (Omi).
-- 
-- For full Omi information:
-- https://github.com/Open-Markets-Initiative/Directory
-----------------------------------------------------------------------
